1 python3 # вызов REPL в консоли
2 python3 hello.py # запуск приложения
3 python3 -m idlelib.idle # открываю idle где можно создавать сохранять файлы и запускать их f5 запуск

4 1 #!/usr/bin/env python3              
""" путь к питону """
    print("Hello world")
  2 chmod +x hello.py # даю права на исполнение
  ./hello.py # запуск приложения

===========================================================================
Глава ввод(int) вывод(print) данных


Вывод данных(print)
1 print("hello there")
hello there
2 >>> print("I'm", 10, 'years old') # обрати внимание здесь ввод строк и чисел 
I'm 10 years old     # запятые не видны они работаю как запятые

Ввод данных user(input)
1 name = input("Enter your name: ") 
""" пользователь вводит данные мы сохраняем в name а потом крутим вертим эту переменную name """
print(name)
 """переменная просто вводим название без кавычек что делаю с name"""

2 input всегда возвращаест строку

>>> value = input('Enter a number:')
Enter a number:2

>>> other = input('Enter another:' )
Enter another:3

>>> value + other
'23' ## неожиданный результат так как мы сложии строки а не числа
>>> type(value)
<class 'str'> ## говорит что тип строка

int(value) + int(other)
""" Превращаю строки в числа и складываю их"""
5 # вывод 2 + 3

6 Задание 
"""Запросить имя и поздороваться """
1 name = input("Enter your name: ") 
print('Hello', name)
Hello sam #вывод

2 ''' Запросить сколько лет и сказать сколько будет в следующем годуы '''
age = input('Enter your age: ')
next_age = int(age) + 1
print("Your age next year", next_age)


Итого:
вывод print , ввод input
====================================================================================
Глава ПЕРЕМЕННАЯ 
Состояние, изменение
Программирование можно с моделировать все.
Лапмочка может обладать состояением, вкл, выкл, яроксть_max, яркость_min, переход из одного состояния в другое 
это изменение. Ламочка(объект) которая обладает теми или иными свойствами(состояниями).

1 Переменные как метки
переменные используется для хранения состояния

status = "off" ## запоминаю состояние лампочки
""" переменная status "off" это строковый тип данных""" 

2 Когда выхожу из конкретной функции переменные этой функции исчезают. Когда объект никому не нужен, счетчик равен 0 его 
подвергают уборке мусора. Если на объект указывают переменные или другие объекты то счетчик положителен и все норм.
>>> import sys
>>> names = []
>>> sys.getrefcount(names)
2
""" Узнаю счетчик ссылок"""

3 Информация о людях состояния:
'''Бирка на корове это грубо говоря как переменная '''
имя 
возвращаест 
адрес

4 status = 'off'
print(status)
""" мы создали переменную status позже когда нам надо узнать ее значение мы обратимся к ней как выше """
'''У объекта есть значение "off", тип строка, индетификатор(местонахождение в памяти как пример id(a) )
создается переменная и связывается с ней '''

5 "120 watt" ## мы создали строковый объект но теперь не можем к нему обратиться

wattage = "120 watt" 
''' теперь можем обратиться по переменной это одно из состояний лампочки '''
incandescent = wattage
wattage = "25 watt"
print(incandescent, wattage)
120 watt 25 watt
''' обрати на вывод сначало 120, а потом уже то что мы поменяли """
