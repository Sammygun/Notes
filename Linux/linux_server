Л2 обучение изучи nginx и почаще настраивай свои серевера чтобы многие вещи помнить

https://telegra.ph/Podborka-poleznyh-Linux-komand-Rabotaem-v-terminale-kak-Pro-1-chast-05-29
полезная статья по командам
https://nginx.org/ru/docs/beginners_guide.html
руководство для начинающих
https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-in-ubuntu-16-04#step-1-install-the-nginx-web-server
LEMP
https://zen.yandex.ru/media/id/5b33dcdc867e2700a832b347/debian-9-polnaia-nastroika-vebservera-chast-2-nastroika-nginx-phpfpm-sozdanie-virtualnyh-hostov-5e551b279d00d86a51d0acf8
debian 9 nginx
https://ru.wikipedia.org/wiki/Iptables ВИКИПЕДЕЯ ХОРОШАЯ статья по iptables
http://opennet.ru/docs/RUS/iptables/ ## крутое руководство по iptables
https://losst.ru/rsync-primery-sinhronizatsii ## про rsync
https://losst.ru/nastrojka-gufw-ubuntu-16-04 # firewallgufw #

1 lsof -p PID #### какие файлы задействованы для конкретного процесса!!!!!!
2 nginx -T ### список сайтов 
3 pstree ## если в нагиосе показывает службу заходи смотри запущен ли данный процесс через эту команду

!!!!
4 tail -n 10 /var/log/messages ### смотрю хвост протокола 10 сообщений 

5 sudo journalctl -xe ## просмотр логов сервисов различных apache и т.д. !!!

pstree | less ## когда дофига процессов
 ls -lah | less ### также много файлов


502 на облаке оперативная память
Проблемы на сервере:
1) history ### смотришь кто что делал ранее
ps aux  grep rsyslog ### тут смотришь лишний смотришь
вводишь команду kill pid # и вроде все

2 Также помни про htop графу memory оперативная память 
sudo htop = F5 (дерево) = главный процесс kill 15 или 9
htop # s смотри нагрузку какой скрипт это создает


Можешь сразу две команды смотреть
cat /var/log/messages | grep oom ## идет превышение лимитов облако и oom убивает это процесс тут можно увидеть что именно debian ubuntu
cat /var/log/messages | grep -i memory ### оперативная память
Out of memory: Kill process #### ядро убивает последние процессы чтобы как -то сохранить память
tail -n 10 /var/log/messages ### последние 10 ошибок
less /var/log/messages # с конца начнем смотреть
3 df -h ### тут смотришь на сервере не забита ли память частая проблема
4 помни на shared не надо ставить apache nginx mysql phpfpm поэтому там меньше надо ресурсов, на облаке на все это надо место поэтому там больше нужно производительности больше ресурсов
5 htop # s смотри нагрузку какой скрипт это создает
6 sudo journalctl -xe ## просмотр логов сервисов различных apache и т.д. !!!
7 systemctl status mysql  ## nginx и т.д. смотрю статус 
cat /etc/network/interfaces ## на сервере очень интересно ip, dns сервер


1 Смотрю службы сервисы которые работают на сервере
ftp sftp # пример поиск ftp
netstat -tulpn | grep 21 # поиск нужной службы ftp ищу
vim /etc/pure-ftpd.conf
LimitRecursion 100000 8
Ограничение на 10 000 файлов тут рекомендуй использовать sftp тоже самое только порт 22
netstat -tulpn # так вижу сразу все 

#######################################################
Горячие команды на сервере
1  sudo nano /etc/apache2/ports.conf #реадкатируем порты apache
2  sudo nano /etc/apache2/sites-enabled/000-default.conf ## конфигурационный файл apache
3 sudo nano /etc/nginx/sites-enabled/default # конфиг nginx по-умолчанию
sudo rm /etc/nginx/sites-enabled/default #удаляю конфиг nginx по-умолчанию
4 sudo journalctl -eu apache2.service  ## конкретный сервис !!!

5 .sudo mysql_secure_installation # выбираешь сложность пароля, устанавливай пароль и по шагам
     Remove anonymous users? удалить ананонимных юзеров #  на рабочем нет(да на loca)
      Disallow root login remotely? [Y/n]  # может удаленно подключаться нет
      Remove test database and access to it? # удалить ли тестовые базы данных yes
      Reload privilege tables now? [Y/n]  # перезагрузить ли таблицу с привелегиями да
5.1 mysql -u root -p
SHOW DATABASES; # посмотрел таблицу
EXIT

6 поиск нужного конфигурационного файла к примеру по ssl
1 cd /etc/nginx
2 grep -rl bitrixvh.site # поиск по домену поиск нужного конфигурационного файла ssl
bx/conf/ssl-push-custom.conf
bx/site_avaliable/bx_ext_bitrixvh.site.conf
bx/site_avaliable/bx_ext_ssl_bitrixvh.site.conf ## вот этот файл

7 apache2.conf
Maxclients ### максимальное количество клиентов
StartServers #### задает количество экземпляров сервера лучше настраивать чуть меньше maxclients



pstree  ### список процессов

du -a -d 1 -h | sort -h ## показать  cсколько папок сколько весит полезные скрипты losst

sudo nginx -t ### проверка на ошибки после правки конфигов
nginx -s reload # главный процесс проверяет правильность синтаксиса, и пытается использовать конфигурацию.

nginx -t ### проверка конфига на синтаксис внес изменения в конфиг файл
systemctl reload nginx ## если все в команде выше норм то перезагружаю

1 Установка PHP FPM
sudo apt-get update # обновление базы пакетов
sudo apt-get upgrade ## обновление системы
sudo apt-get install php7-fpm ##
2 Управление PHP FPM
sudo service php7-fpm  start ## стартую
sudo service php7-fpm stop ###  остановка сервера
sudo service php7-fpm restart  ## перезапуска сервера
sudo service php7-fpm reload ###перезагрузка конфигов мягко, без перезапуска сервера
ps aux | grep php-fpm ## убедиться что php-fpm загружены ТАКЖЕ я могу посмотреть какой домен он обслуживает

1 Установка nginx
sudo apt-get update # обновление базы пакетов
sudo apt-get upgrade ## обновление системы
sudo apt-get install nginx ##
2 Управление сервером
sudo service nginx start ## стартую
sudo service nginx stop ###  остановка сервера
sudo service nginx restart  ## перезапуска сервера
sudo service nginx reload ###перезагрузка конфигов мягко, без перезапуска сервера
ps aux | grep nginx ## убедиться что процессы сервера загружены




crontab.guru
https://losst.ru/nastrojka-cron
history -r ## удаляю все свои чудеса которые делал




exmedia mysql stopai перед перезагрузкой

Проблемы на сервере облачный хостинг
ls /var/log/ | grep nginx

sudo iptables -L -n | grep 93.251.71.71
По ip смотрю есть ли правило

######Важные команды на сервере#########

journactl --list-boots ## это список всех загрузок 0 текущая, 1 предыдущая и так далее
journactl -u nginx.service ## логи конкретной службы
journalctl -p err -b ### выводит все ошибки при текущей загрузке
journalctl -xe ## просмотр логов сервисов различных apache и т.д. !!!
journalctl -eu apache2.service  ## конкретный сервис !!!
journalctl -list-boots ## всех сохраненных загрузок  !!!!
  journalctl -b 37d5c906c9c6404682f029b2c34ec9dc ### конкретный идентификатор

systemctl status mysql ## тут смотри статус
systemctl restart mysql #### перезагрузили сервер
systemctl enable mysql  ### автозапуск
  systemctl enable mysql nginx php5-fpm monit ### автозагрузка чтоб после рестарта они загружались
enable ### автозагрузка
disable ### отключение автозагрузки
start #### стартануть unit now
stop
reload ### перезагрузка конфигов мягко, без перезапуска сервера
restart ### убить процесс и начать заново его
status ### status unit



ps -aux | grep proftpd### ftp смотрю какой пользователь запускает 
Проблема с правами
1 sudo ps -ef | grep apache2
sudo netstat -plunt | grep apache2 ## смотрим работает ли сервер Apche
ps -aux | grep nginx # конкретный процессор ngignx его название
2 sudo service apache2 start ## запускаем sevice
service httpd start ## apache centos
service apache2 status ## смотрим статус
service nginx start
service nginx status ###  смотрим статус
service mysql start ## запус базы данных
service mysql status ## смотрю тут статус базы данных
service mysqld start
service mariadb start
service mariadb status ## смотрю тут статус базы данных
service nginx reload ### перезагрузка конфигов мягко, без перезапуска сервера

3 top или htop ## P сортриую по процессам, M сортирую по памяти
4 Логи смотри через less, grep и tail -f.
5 sudo df -h ## смотрю сколько что занято
6 dmesg | tail ### сообщение ядра
dmesg | tail -f /var/log/syslog ## смотрю в реальном времени
7 /var/log ### то смотри
ls -l /var/log/
/var/log/mysql/
/var/log/nginx/
/var/log/apache2/
/var/log/httpd/ ### apache centos

Итого
1 journalctl -xe ### также здесь ошибки смотри
2 systemctl status nginx## тут смотри статус
3 df -h #смотрим свободную память
4 etc/apache/logs/error_log ## ошибки apache
Также может быть в /var/log/ тут смотри
find -name error_log


cat /var/log/mysql/error.log
grep UFW /var/log/syslog ## так и так можно смотреть логи
conf. ## смотри здесь можно узнать куда error.log идет


1 cat /var/log/mysql/error.log # ошибки смотрим тут
2 df -h #смотрим свободную память
3 history ## если сервер сам перезагрузился
3 apt-get install php php-fpm # установка
systemctl enable php7.2-fpm ## режим авто запуска
systemctl start php7.2-fpm # запускаем его
systemctl status php7.2-fpm ### смотрю статуc

systemctl reload nginx### перезагрузка конфигов мягко, без перезапуска сервера

systemctl status mysql ## тут смотри статус
systemctl restart mysql #### перезагрузили сервер
systemctl enable mysql  ### автозапуск

4 journalctl -xe ### также здесь ошибки смотри сервисов
смотрю журнал

5.sudo mysql_secure_installation # выбираешь сложность пароля, устанавливай пароль и по шагам
     Remove anonymous users? удалить ананонимных юзеров #  на рабочем нет(да на loca)
      Disallow root login remotely? [Y/n]  # может удаленно подключаться нет
      Remove test database and access to it? # удалить ли тестовые базы данных yes
      Reload privilege tables now? [Y/n]  # перезагрузить ли таблицу с привелегиями да
5. mysql -u root -p
SHOW DATABASES; # посмотрел таблицу
EXIT

5.1 ERROR 1045 (28000)
root@LAMP:~# mysql
ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: NO)
/root/.my.cnf  ### создал такой файл потом рестартанул
[client] ### в этом файле прописать my.cnf
user=root
password="'DIoNb|}DP"

sudo mysqld --skip-grant-tables --user=root ### возможно это команда помогла потомо рестартанул сервис
systemctl restart mysql
https://qna.habr.com/q/439469

5.2
apt-get install phpmyadmin
vi /etc/nginx/sites-enabled/phpmyadmin.conf
server_name  linux.of.by;
systemctl reload nginx



5.3 service nginx reload ## когда  выходишь перезагружаешь
лучше чем restart так перезагрузит но уведомит об ошибках

6 Чистка логов
echo ' ' > /var/log/nginx/access.log ### чистка логов
cat /var/log/nginx/access.log ### он пуст


7. nginx
cd /etc/nginx ## конфигурационные файлы
cd /var/log/nginx ## логи
access log ## 404 ошибка тут
error_log

8 php nginx wordpress
1.apt install php7.2-fpm
2. apt install php7.2 -mysql
3. apt install php7.2 ## установка самого php 7.2.
4.  apt install php7.2-cgi ### быстрого  cgi

/etc/php/7.2/fpm/pool.d
vim www.conf ### смотри настройки
listen = 127.0.0.1:9000

nginx.conf
server {
        listen 80 default_server;
        listen [::]:80 default_server;
        root /var/www/html; ## путь к корню
        index index.php index.html index.htm;
        server_name linux.of.by; ## название домена

        location ~ \.php$ {

                include fastcgi_params; # пути к php
                include fastcgi.conf;
                server 127.0.0.1:9000; ## что слушать
        }

server /var/run/php/php7.2-fpm.sock;

1.service nginx reload перезагрузка конфигов мягко, без перезапуска сервера
2. service php7.2-fpm restart




==============journalctl

Глава 27 Протоколирование системы ПОМНИ journal + ctl как и system + ctl
https://losst.ru/shpargalka-po-journalctl-v-linux
Демоны программы которые пишут логи сервера
1 journactl
/var/log #### седа пишутся логи сервера
2 journactl -b ## логи c момента текущей загрузки
3 Все логи пишутся исходя из даты установленной в системе
timedatectl set-timezone  <часовой пояс> ### установка часового пояса
timedatectl list-timezones ## список часовых поясов стрелкой вниз листать
timedatectl  status #  узнать какой часовой пояс сейчас установлен
4  journactl -b ## логи c момента текущей загрузки
    journactl --list-boots ## это список всех загрузок 0 текущая, 1 предыдущая и так далее !!!!!!!!!!!!!!!!!!!!!!!!!!!!
   journactl -b -1  ### смотрю журнал с предыдущей загрузки
5 Просмотр логов по дате  --since --until
journactl --since "2015-11-11 07:00:00" ## смотрю логи с 11 11 2015 7:00
если не укажу дату то будет взята текущая дата
если указана дата, но не время то будет взято время по умолчанию 00:00:000
6 journactl --since yesterday ##логи с вчерашнего дня по текущий
  journactl --since 09:00 --until now ## логи с 9:00 по текущий момент
  journactl --since 09:00 --until "1 hour ago" ### логи с 10:00 и  до прошлого одного  часа назад если сейчас 19:00 то покажет 18:00
7 Фильтр по сервису
journactl -u nginx.service ## логи конкретной службы !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
journactl -u nginx.service --since  yesterday ##логи начиная со вчерашнего дня в примере (today) возможно описка
8 Фильтр по пути
journactl /usr/bin/docker
9 journactl _PID=<ID процесса> ##фильтр журнала  по конкретном процессу его pid номер
10 можно узнать по uid пользователя его логи что он делал
id ## узнаю здесь  uid
id -u sam ## узнаю конкретного пользователя uid
journalctl _UID=1000  ### все логи конкретного пользователя
journalctl _UID=1000 --since yesterday ## все логи конкретного пользователя со вчерашнего дня
10 Сообщения ядра
journalctl -k ## сообщения ядра можно и через dmesg тоже вводить  journactl --dmesg
journactl --dmesg
journalctl -k -b -2 ## смотрим логи с предыдущей загрузки
11 ФИЛЬТР по уровню ошибок
0 EMERG система неработоспособна
1 ALERT (требуется немедленное вмешательство)
2 CRIT (критическое состояние)
3 ERR (ошибка)
4 Warning (предупреждение)
5 NOTICE (просто обратите внимание)
6 INFO информационное сообщение
7 DEBUG отложенная печать
journalctl -p err -b ### выводит все ошибки при текущей загрузке !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
journalctl -f ## в реальном времени
Можно настроить логи чтобы удаленно находились на конкретной тачке страница 453



---

0.iptables

1 sudo iptables -L -n #Показать все правила, адреса\порты в числовом формате
input входящий трафик
output Исходящий трафики
froward маршрутизированный трафик
2 sudo iptables -F #Удалить все правила
3 sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT # A разрешаем А записи input входящий трафик по p  протоколу tcp -- dport (destination port) на какой порт 22 j действие разрешить
Создаем правило в цепочке INPUT, разрешающее весь траффик на порт 22 по tcp
sudo iptables -L -n увижу это правило
4 sudo iptables -A INPUT -s 10.16.103.0/24 -p tcp --dport 80 -j ACCEPT # s источник ресурс адресс 10.16.103.0/24 подсеть  -p порт tcp 80 и j действие  ACCEPTразрешить
Создаем правило в цепочке INPUT, разрешающее весь траффик на порт 80 по tcp с подсети 10.16.103.0/2
5 sudo iptables -L -n --line-numbers #Показать все правила, адреса\порты в числовом формате, с номерами строк
смотрю приоритет  1 2 очень важно если правило поподает по пятое то все последующими оно обрабатываться не будет
6.sudo iptables -I INPUT 2 -p tcp --dport 443 -j ACCEPT #  I input (входящий) 2 номер строки порт какой destination port 443 j Действие Разрешить(открываем https)
Вставляем правило в цепочке INPUT на 2 строку, разрешающее весь траффик на порт 80 по tcp
7 sudo iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT #Разрешаем обратный траффик для установленных исходящих соединений
sudo iptables -I INPUT 1 -m state --state RELATED,ESTABLISHED -j ACCEPT #Разрешаем обратный траффик для установленных исходящих соединений
он указывал
8 sudo iptables -P INPUT DROP #Устанавливаем поведение цепочки INPUT по умолчанию в DROP(весь явно неуказанный траффик будет отброшен)
P policy политика
9 sudo iptables -A INPUT -p icmp -j ACCEPT #Разрешаем ICMP то есть разрешаем пинговать нас с других машин
10 sudo iptables -D INPUT 4 #Удаляем 4 строку в цепочке INPUT удаляем 4 строку с правилом
sudo iptables -L -n --line-numbers ### тут смотрю на все правила
11 sudo iptables-save ## сохраняем текущие правила чтобы после перезагрузки они сохранились
sudo apt-get install iptables-persistent #Установить iptables-persistent чтобы сохранять правила persistent присуствие iptable
при установки спросит сохранить текущие правила
sudo service netfilter-persistent save ### сохранит наши текущие настройки после перезагрузки все останется
sudo iptables -L -n #Показать все правила, адреса\порты в числовом формате
sudo iptables -L # покажет не полные правила
https://help.ubuntu.ru/wiki/iptables

0.1 ufw

Простенький firewall брандмаэер
sudo apt install gufw ставим
sudo ufw enable  ### чтобы после перезагрузки включен в автозагрузку

1 sudo ufw allow 22 #Разрешаем подключения на 22 порт(ssh)
2 sudo ufw allow 443 ###Разрешаем подключения на 443 порт (https)
3 sudo ufw allow from 10.16.103.0/24 to any port 80 #Разрешаем подключения на 80 порт(http) с подсети 10.16.103.0 на любой адрес сервера to any
4 sudo ufw status ## смотрю статус inactive неактивен
sudo ufw status verbose ### более подробный отчет
5 sudo ufw enable ## активирую помни сначало задай правила потом активируй особенно помин про ssh 22
sudo ufw status  ### увидим active
sudo ufw status verbose #### увидим подробней
6. sudo ufw status numbered #Нумерованный список правил
правило обрабатывается по порядку если попадает под первое правило то на второе условие не переходит ниже правила работать не будут
7 sudo ufw allow 443/tcp #Разрешаем подключения на 443 порт(https) по tcp
но если было настроено ранее правило sudo ufw allow 443
то оно уже не будет работать
8 sudo ufw delete allow 443 #Удаляем правило allow 443
9 sudo ufw allow ssh #Добавляем правило на разрешение для сервиса ssh вводим по названию сервиса добавит порт 22
sudo ufw allow mysql ### добавление по сервису порт 3306
sudo ufw status numbered ### и тут смотрю правила которые добавил их порты
10 sudo ufw delete 4  ## удаляю 4 правило  4 строку
11 sudo ufw insert 2 allow from 10.16.103.0/24 to any port 80 #Вставить в запись №2 - Разрешаем подключения на 80 порт(http) с подсети 10.16.103.0 на любой адрес сервера
12 sudo ufw logging on #Включить лог (записывается в /var/log/ufw.log)
sudo ufw logging off #Выключить лог (записывается в /var/log/ufw.log)
13 sudo ufw logging medium #Устанавливаем подробность лога в medium, чтобы не забить дисковое пространство
14 grep UFW /var/log/syslog #Поиск и вывод логов UFW в syslog
смотрим логи сервера

https://losst.ru/nastrojka-ufw-ubuntu
https://help.ubuntu.com/community/UFW
- Руководство по UFW
http://bit.ly/2vSdMNr - Руководство по UFW на русском
---
Cron планировщик  задач
1. crontab -e  ## тут выбирай редактор
и смотришь редактор как редактировать
2 в директории где скрипт запускай
в папке home
testcron.sh ### есть запускай
./testcron.sh ### запуск скрипта
cat tescron.sh ### читаю его содержимое
#!/bin/bash
echo "It is now $(date +%T) on $(date + %A)"

3 m h  dom mon dow   command
минута, час, день, месяц, день недели, команда
час от 0 до 23:00
день от  1 до 31
месяц от  1 до 12
от 0 до 6 ## 0 воскресенье
команда /home/administrator/tescron.sh

crontab -e
m h  dom mon dow   command
* * * * * /home/sam/testcron.sh

4 journalctl -e ### смотрю выполняется ли cron скрипт
здесь видим только выполнение  крона по умолчанию вывод высылается на почту пользователя скрипат sam
Настройка логов
crontab -e 
* * * * * /home/sam/testcron.sh >> /home/sam/test.log
#теперь наш крон отправялет нам отчет
cat test.log ## читаю вывод
crontab -l ##look просто смотрю что как настроено

5 sudo crontab -l ## смотрю какой крон у пользователя  рут, тут пусто, а так выводит под каким пользователем
sudo crontab -e ## делаем для рута смотрим че по чем
15 4 *  * * /sbin/reboot > /dev/null 2>&1
вывод в никуда в Null
/sbin/reboot это прямой путь в 4 часа 15 минут по локальному времени сервера
date  ## тут можно смотреть локальное время
Thu Apr  9 19:13:44 MSK 2020

crontab.guru ## сайт где мы смотрим правильность команды
0 */2 * * * /etc/init.d/nginx > /dev/null 2>&1 ## в системный журнал

sudo crontab -l
journalctl -e ### смотрю выполняется ли cron

6 cat /etc/crontab ## тут можно посмотреть все таблицы пользователя
sudo crontab -u sam -e ###захожу под рутом в таблицу пользователя

7 ls /etc/cron.hourly/ ## смотрю что выполняется ежечасно
ls /etc/cron.daily/ # смотрю что выполняется  ежедневно

anacron ## проверяю есть ли он

---
journactl systemctl
1 systemctl status mysql ### более информативней
    service mysql status  ### менее информативен
   systemctl enable mysql nginx php5-fpm monit ### автозагрузка чтоб после рестарта они загружались
enable ### автозагрузка
disable ### отключение автозагрузки
start #### стартануть unit now
stop
reload ### перезагрузка конфигов мягко
restart ### убить процесс и начать заново его
status ### status unit

2 journactl -xn
journalctl -u <unit> ## unit (musql) название процесса наиболее частая команда
journalctl -b
journalctl -f
journalctl --since "10 min ago"


---
1 include=/etc/php/7.4/fpm/pool.d/*.conf ###*все файлы *.conf такого формата
2 nano /etc/php/7.4/fpm/pool.d/www.conf ## создаю новый конфигурационный файл и добавляю следующие.
Данный файл содержит информацию пользователе, все процессы будут запускать www-data пользователь
listen.owner = www-data  ##его можно менять
listen.group = www-data

3 /etc/php/7.4/fpm/php.ini ### здесь инфа о кодировке
default_charset = "UTF-8
 cgi.fix_pathinfo=0 ###должно быть равно 0 помни иначе уязвимость

4 /etc/php/7.4/fpm/php.ini  ## тут важные и интересные параметры
1 display_errors = Off # ошибки на экран
2 log_errors = On
3 log_errors_max_len = 1024 # когда ddos логами идет можно заблокировать атаку уменьшив размер лога
4 cgi.fix_pathinfo=0 ### ставлю 0 для безопасности
5 pdo_mysql.cache_size = 2000 ## кэширование mysql
6 smtp_port = 25 # отправка почты с сайта
7 mysql.cache_size = 2000
8 mysqli.default_port = 3306
9 session.gc_maxlifetime = 1440 ## время сессии меняю


5 
nano /etc/php/7.4/fpm/pool.d/tutorialinux.conf
php_admin_value[upload_max_filesize] = 25M ## макс размер загружаемых файлов
php_admin_value[error_log] = /home/tutorialinux/logs/phpfpm_error.log ### куда логи ошибки ложить
php_admin_value[open_basedir] = /home/tutorialinux:/tmp
###безопасноть дальше этой директории доступа нету

6 
php -i ## i info
php -i | grep memory

php.ini
На облаке надо увеличить время выполения скрипта
php -i | grep php.ini ## нахожу местоположение php.ini
nano /etc/php.conf
memory limit меняю
apachectl -t
service httpd restart

php.ini ## на облаке
Ограничение ресурсов
max-execution_time #определяет максимальное количество процессорного времени в секундах отводимое на выполнение скрипта. Если директива принимает значение 0 скрипт выполняется бесрочно. Значение по умолчанию 30 с. (более чем достаточно как правило) (504 ошибка)
max_input_ time ## максимально количество процессорного времени (в секундах) отводимого на разбор Get, Post данных  и загруженных файлов, если директива принимает значение -1 по умолчанию принимает значение 60

(504 ошибка)!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
memory_limit  ## максимальное количество памяти выделяй мой под один экземпляр скрипта

Если max-execution_time = 30 то при превышении данного показателя будет ошибка:
Fatal error: Maximum execution time of 30 seconds exceeded

Тоже самое memory_limit ограничение на количество выделяемой памяти, для того чтобы неэфективные сценарии не могли в короткое время исчерпать память сервера
Ошибка как правило связана с тем что разработчик пытается   прочитать гигантского размера файл или объемное изображение
Ошибка Allowed memory size of 1342.... (tried to allocate 800 bytes)
