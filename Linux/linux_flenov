														Содержание 

														_Глава 2 начальная настройка_
														_Глава 3 linux_
														_Глава 7 веб-сервер_
														_htaccess_
														_mod_security_
														_защита xss sql инъекций_
														_robots.txt_
														_Глава 8 почта_


_Глава 2_
windows linux
1 сначало window потом linux. Windows затирает загрузочную запись и уничтожает любое присуствие сторонних систем.
grub-install /dev/hda

2 нумерация дисков
/dev/hdNX
/dev/hdb
При установки лучше разбивать диск на два раздела
/dev/hda # это типо диск с операционной системой
/dev/hda2 # это диск под файлы 


3 linux файловая система
1 ext2 хранит данные  в кэше а потом сохраняет на диск, но если аварийно выключить данные будут утеряны
при старте включится fsck проверка диска что очень долго может быть

ReiserFS # тоже самое только быстрей востановится после перезагрузке также более рационально использует диск, все блоки 
заполняются более плотно
Windows  Size, Size on disk сразу видим, что диск используется не рационально, величина файла 4,95 но по факту занимает 8 кб.
ReiserFS меньше дыр меньше утечек

Ext4 лучшая файловая система только для ssd надо отключать журналирование

2 Файлы подкачки не эффективен и используется при нехватке оперативной памяти
SWAP надо делать побольше чтоб с ним потом не было проблем при нехватке оперативной памяти жедательно делать 2 в 3 раза больше оперативной памяти не маленикий раздел создавать, иначе забется сам место на диске если мало выделено будет и начнутся проблемы.

3 При настройке на сервере дисков раздел /home и /var лучше вынести на разные диски(var 10 гб файлы журналов ftp, www)  
При dos папка var увеличивается в размерах и забивается раздел поэтому данный раздел должен быть не маленьким

4 Лучше home и var на разных дисках так как так будет меньше нагрузки в файловой системе.

5 Всегда провярей что настроено в автозапуске(сеанс)

=================================

6 Все сервисы, ftp, сервер новостей, веб должны находиться на разных виртуальных машинах, если хакер проникает то дальше отдельной виртуальной машины не пойдет


7 web shell программа котороая позволяет изучать и администрировать сервер

8 каждая машина свой отдельный пароль

9 не устанавливать на сервер библиотеки разработчика и компилятор gcc, использовать уже в скомпилированном виде у хакера будут проблемы с доступом зловредного кода

10 
1 Пароль generation   клавиши выше и по диагонали
t3h34q589h generation  # то что выше по диагонали
hrtsyopn   generation  # то что справа
Можно некоторые буквы в верхнем регистре 

2 djn'njvjqgfhjkm        # вот это мой пароль

47 страница

==============================================================================================================

_Глава 3 linux_

Файловая система
1mc
1 tab переключение между окнами
F1 help
F2 Menu
F3 View
F4 Edit
F5 copy
F6 RenMov  
F7 mkdir
F8 Delete
F9 PullDn # выпадающие меню 
F10 Quit     

2 pwd   # путь к каталогу
 ls -a # все файлы и скрытые файлы также
 ls -al # список с более подробной информацией
 drwxrwxr-x  2 sam  sam   4096 янв 20 10:15  # янв 20 10:15 последняя дата изменения . точка текущий, .. вернуться наверх

3 cat need.txt # просто почитаем файл

4 tac need.txt # читаем задом наперед

4 cd # перемещение по каталогам
cd ~	#перемещение в каталог home
cd ~/readme.txt 		# в домашнем каталоге есть файл readme.txt
##########################################
5 cp  # копирование 
1 cp /home/root/need.txt /home/root/need22.txt 		##  /home/root/need.txt источник  куда копировать /home/root/need22.txt новое название

2 cp /home/root/need.txt  /home/flenov/need22.txt   # 1 cp /home/root/need.txt источник в новую директорию flenov 

3 cp /home/root/need.txt /home/flenov/need22.txt /home/new/  # скопировать два файла с разных папок в папку /home/new 

4 cp /home/root/n* /home/new/ # копируем все файлы с началом названия n
5 cp /home/root/ra*t /home/new/    # копируем все файлы в который есть эти буквы
###########################################
find # поиск
1 find /etc/ -name filename 				### ищу в нужной папке нужный файл
2 find /etc/ /home -name filename   		## поиск сразу в двух каталогах

3 find /-name passwd    # ищем на диске все файлы с названием passwd

4 find /-name passw*d   # когда не помнишь слово password или passwd 
5 кроме -name есть и другие ключи
-size число #позволяет указать размер файла если вы его точно знаете если ты указываешь в байтах то после числа указать букву с;
-print      # заставляет вывести содержимое файла в консоль
-mtime число  ## в качестве параметра число можно указать количество дней прошедших с последнего редактирования
Пример:

find / -name note -mtime 1 # если вчера редактировали файл с именем note, но не помнишь куда ты его сохранил

-type # поиск по типу файла
d # каталог
f # обычный файл
p # именованный канал 
l # символьная ссылка 

Ищем не только файл но поиск делаем по содержимому:
find . -type f -name "*" -print | xargs grep "текст, который ищем"  # . точка текущая папка  type -f ищем файл(не мучаем каталоги), "*" все файлы, -print отобразить содержимое, | xargs объединяет полученные команды!!!!! и передает их grep
############################################






   








===================================================================================================================



_Глава 7 веб-сервер_
Apache
/etc/httpd/conf/httpd.conf    #конфигурационный файл
/etc/httpd.conf
/etc/apache2

Установка
1  sudo apt install apache2 		# ubuntu
2 yum install httpd      			# centos

3 ls /etc/apache2/apache2.conf
1 ServerRoot     ## корневой каталог в котором находятся файлы конфигурации и журналы
2 Timeout        ## предельное время ожидания в секундах для получения и отправки пакетов

3 HostnameLookups ## флаг, отвечающий за проведение преобразования ip-адресов в доменное имена для логов CGI. Если on то ip-адрес клиента
запросившего данные с сервера будет преобразован в доменное имя иначае будет использ. ip-адрес. Если в этом нет необходимости лучше off
так быстрее.

4 User и Group
имя пользователя и группа с правами которых будет работать сервис. Как правило пользователь и группа www-data.
Пользователь и группа должны обладать минимальными правами для работы сервера.

В файле apache.conf # представлены в виде переменных:
User $(APACHE_RUN_USER)
Group $(APACHE_RUN_GROUP)

Значение переменных можно найти в /etc/apache2/envars:
export APACHE_RUN_USER=www-data
export APACHE_RUN_GROUP=www-data

5 ErrorLog Customlog        # местоположение журналов. Опять же здесь вы увидите переменную $(APACHE_LOG_DIR), которую так же можно задать
в файле переменных окружения

6 LogLevel # степень подробности составления журнала. Можно указать следующие значения:
emerg,alert,crit,error, warn,notice, info, debug;

7 KeepAlive !!!!!!!!!!!!! #разрешает обрабатывать несколько запросов за одно соединение. По умолчанию off !!!!!, что не очень и для получения в таком случае файла требуется отдельное соединение. Пример клиент запросил страницу с 10 картинками тогда будет 11 соединений. 
Одна html и 10 для картинок документа. Если включить on, то тогда за одно подключение будет обработано несколько подключений.

8 MaxKeepAliveRequests # максимальное число запросов, которое может быть выполнено в течение одного соединения.

9 KeepAliveTimeout      # время ожидания  очередного запроса, которое может быть выполнено в течение одного соединения

10  Безопасность 
/etc/apache2/conf-enabled/security.conf:

ServerTokens - при любом обращении к серверу он возвращает подробный заголовок с подробной инфой о системе, которая включает версии
Apache, ОС linux и модулей , устаревшая версия интерпертатора PHP. Болтливые параметры надо отключать.

Full  # отображать полную информацию о сервере и установленных модулях включая их версии. Самое опасное значение.

Min   # показать минимум сведений только название сервера и установленные модули. Тоже не очень.

ProductOnly # только название сервера вот  это значение самое лучшие.


ServerSignature #  если on то тогда будет добавлять сгенирированные страницы текстовую информацию которая будет содержать имя сервера
и виртуального хоста. В рабочих системах лучше отключать это установив параметр в off.

=======================================================================================
_htaccess_
7.2. Модули 
1 ls /etc/apache2/mods-enabled    # смотрю все модули, которые были установлены, неиспользуемые модули отключать или не устанавливать
чтобы снизить риски. Лишния программа это дверь.

2 Модуль не загружается rewrite
sudo a2enmod rewrite  # a2enmod программа которая помогает включать модули здесь именно rewrite

3 /etc/apache2/mods-enabled  # и убедитесь что вы видите там файл rewrite.load

4 /etc/apache2/mods-enabled   # все активированные и неактивированные модули можно здесь посмотреть

5 sudo /etc/init.d/apache2 restart #надо перезагрузить Apache после включения модуля для вступления изменений в силу.
==============================================================================

7.3. Права доступа
/etc/apache2/apache2.conf 
<Directory /var/www/html>       # правада доступа к каталогу /html ограничивает открыл
	Order allow,deny
	Allow from all
</Directory>					# закрыл

## также права доступа могут  быть описаны в файле .htaccess


<Location /server-status>         # ограничивает доступ к виртуальному каталогу разрешая его только клиентам
	SetHandler server-status	  # из домена .your-domain.com 
	Order deny,allow
	Deny from all
	Alow From .your-domain.com
</Location>


2 <Directory />
	Order deny,allow
	Deny from all
  </Directory>

1 Allow from параметр  # оперделяет с каих хостов можно получить доступ к указанному каталогу 
all     # разрешает доступ к каталогу всем
доменное имя  #  опредеояет домен, с которого можно получить доступ к каталогу. Например можно указать domain.com, если есть важные файлы
то можно ограничить доступ своим доменом или только локальной машиной указав Allow from localhost

2 IP адрес     ## сужает доступ к каталогу до определенного IP-адреса.

env=Имя Переменной  ## разрешает доступ, если определена указанная переменная окружения. Полный формат директивы
Allow from env= Имя переменной

3 Deny from параметр    # запрещени доступа к указанному каталогу from

Order параметр     # очередность в которой применяются директивы allow и deny

 Могут быть два варианта:
 Order deny,allow    # изначально разрешено всем, потом проверяются запреты.

 Require параметр    # позволяет задать пользователей которым разрешен доступ к каталогу. В качестве параметра можно указывать:

 user  # имена пользователей которым разрешен доступ к каталогу. Например Require user robert FlenovM

 group   # названия групп, пользователям которых позволен доступ к каталогу. Директива работает так же как user 

 valid-user # доступ к каталогу разрешен любому аутентифицированному пользователю

4 Satisfy параметр  # если указать значение any, то для ограничения доступа использовать логин и пароль или Ip-адрес. Для идентификации
пользователя по двум условия одновременно задать all

5 AllowOverride параметр # определяет какие директивы из файла .htaccess  в указанном каталоге могут перекрывать конфигруацию сервера. В качестве параметр можно указать одно из следующих значений: None, All Authconfig Fileinfo Indexes Limit Options

6 Options параметры определяет возможности веб-сервера, которые доступны в указанному каталоге 
All # означает разрешение всех опций кроме MultiViews, None # запрещает все опции или комбинация из следующих значений:

ExecCGI # разрешено выполнение CGI сценариев, чаще всего используется отдельный каталог /cgi-bin но и в нем можно определить отдельные 
подкаталоги в которых запрещено выполение 


FollowSymlinks    # позволяет использовать символьные ссылки. Символьные ссылки очень опасны с ними надо быть аккуратнее.

SymlinksIfOwnerMatch # следовать по символьным ссылкам, только если владельцы целевого файлы и ссылки совпадают. Лучше его использщвать вместо FollowSymlinks, потому что если получится создать символьную ссылку на /etc/ будут серьезные проблемы.

7 Includes     #использовать SSI  включения на стороне сервера

8 IncludesNOEXEC  # использовать SSI кроме команд exec include 

9 Indexes   # отобразить список содержимого каталога  если отсутствует файл по умолчанию 
здесь указывается какой файл нужен для загрузки сайта index.htm, index.html, index.asp  или index.php

10 MultiViews # представление зависит от предпочтений клиента


11 <Files ИмяФайла>  # объявление для 
</Files>

Пример:
<Directory /var/www/html>
	Order allow,deny
	Allow from all
	<Files "/var/www/html/admin.php">
		Deny from all
	</Files>
</Directory>


12 Помимо файлов и каталогов можно ограничивать и методы протокола HTTP такие как GET, POST, PUT, DELETE,  CONNECT, OPTIONS, TRACE, PATCH,
PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK

Пример:

<Directory /home>	
	<Limit GET POST>
		Deny from all
	</Limit>
</Directory>
=============================================================================================
7.4. Создание виртуальных веб-серверов 235 
1 /etc/apache2/sites-available   # веб сайты описываются в каталоге
/etc/hosts  
127.0.0.1  testsite.com # проверка с компьютера на котором сейчас работаешь

2 echo 127.0.0.1 testsite.com | sudo tee -a /etc/hosts   # записываю от sudo , tee запись в файл, -a в конец файла 

3 Создание виртуального хоста
/etc/apache2/sites-available/testsite.com

<VirtualHost 192.168.1.1:80>
	ServerAdmin admin@your_server.com       # почта куда будет отсылаться уведомление об ошибках
	DocumentRoot /var/www/your_server.com   # каталог в котором расположен корневой каталог сайта
	ServerName your_server.com              # имя сервера. Если оно не указано, то используется локальный ip-адрес сервера
	ErrorLog logs/your_server.com -error.log
	CustomLog logs/your_server.com -access_log common

	<Directory /var/www/your_server/> 		# здесь указываем права доступа, здесь указан корневой каталог 
		AllowOverride none
	</Directory>
</Virtualhost>

4 Директивы которые также можно указывать в файле в htaccess 
AuthTupe параметр   # тип аутентификации. В качестве параметра можно использовать одно из значений Basic или Digest 

AuthGroupFile параметр # файл в котором хранится список групп пользователей

AuthUserFile параметр  # файл содержаший имена пользователей и пароли. Этот списо лучше формировать утилитой htpasswd

AuthAuthoritative параметр # способ проверки прав. По умолчанию включена on. Если выключена off а пользователь не указал имя то его аутентификация осуществляется другими модулями например по ip-адресу;

AuthDBMGroupFile AuthDBMUserFile  # аналогичны  AuthGroupFile AuthUserFile


Если нужно настроить чтобы доступ к каталогу был отлько у авторизованного пользователя тогда директива:
Require valid-user  # тогда при запросе это каталога попроситя указать имя пользователя 
=====================================================
7.5.1 Файлы .htaccess
Если есть каталог в котором должны быть какие либо права то лучше создать файл .htaccess в этом каталоге. 
1 Пример:

AuthType Basic                  # тип базовый 
Authname "By Invitation Only"   # при попытки подключения к wp-admin (пример) появиться окно с таким названием
AuthUserFile /pub/home/flenov/passwd  # задает файл в котором хранится инфа о пользователе и пароле 
Require valid-user 					# это значит что файл могут открыть только пользователь который прошел аунтификацию

2 Также можно настроить доступ к каталогу только с определнного Ip-адреса, то в файле .htaccess может содержаться следующая строка:
Allow from 101.12.41.148


3 Эти же параметры можно указывать и в файле httpd.conf, например:
<directory /var/www/flenov/secret>
AuthType Basic
AuthName "By Invitation Only"
AuthUserFile /pub/home/flenov/passwd
Require valid-user
</directory>

4 можно править и так и так через httpd.conf  дает преимущества, так как он находится в каталоге /etc, который не входит в корень веб сервера и должен быть запрещен для просмотра пользователям
===============================================================================
Файлы паролей 
1 
AuthType Basic                  # тип базовый 
Authname "By Invitation Only"   # при попытки подключения к wp-admin (пример) появиться окно с таким названием
AuthUserFile /pub/home/flenov/passwd  # задает файл в котором хранится инфа о пользователе и пароле 
Require valid-user 			    #  это значит что файл могут открыть только пользователь который прошел аунтификацию

AuthUserFile /pub/home/flenov/passwd # текстовый файл типо 
flenov:{SHA} bla bla bla bla 

2 htpasswd ключ файл_имя пароль # команда для задачи пароля

Пример:
httpasswd -c mypasswd robert  # -c создать новый файл, если есть файл то он перезаписывается, старое содежимое терятется. 
# будет создан файл mypasswd, содержаший одну запись для пользователя robert с указанным вами паролем

-m # этот алгоритм можно использовать в разных операционных системах

-d # применить системную функцию crypt() для шифрования;

-s  # применить SHA-шифрование

-p  # не шифровать пароли просто задавать но это небезопасно

-n  # не вносить никаких изменений, а только вывести результат на экран 


3 можно сделать так
htpasswd .htaccess Rybkin  # можно задать и так пользователя и пароль в командной строке !!!!!! помни history -r

4 http позволяет перехватывать пакеты где есть имя пользователя и пароль, https позволяет зашифровать ваш трафик и сделать его недоступным

================================================================================================================
Обработка на сервере в файле httpd.conf:

AddHandler cgi-script .cgi  # если perl не использую то коменчу
AddHandler server-parsed .shtml  # сама по себе безобидна 

AddHandler server-parsed .html  # таких строк не должно быть 
Если нужно в каких-то каталогах то там можно созадть файл .htaccess с вышеуказанной записью

В остальных каталогах в файле .htaccess должна быть следующая запись или в httpd.conf:
RemoveHandler .html .htm

<!-- #include virtual="filename.shtml" --> # то данный код выполниться в shtml-файле 

Если SSI не используется соотвественно SHTML-файлы то закоментируйте следующую строку:
AddHandler server-parsed .shtml     
==========================================================
7.6 Советы по настройке apache
1 для удобства права доступа можно указать в файле htaccess.
2 комментируй все действия чтобы потом если что можно было вспомнить
3 желательно настраивать используя регулярные выражения пример:

<Directory /home/* >         # сразу для папки home создалал такие правила также можно для /home/*/public_html для всех public_html
	AllowOverride FileInfo AuthConfig Limit
	Options MultiViews Indexes SymlinksIfOwnerMatch IncludesNoExec
	<Limit GET POST OPTIONS PROPFIND>
		Order allow,deny
		Allow from all
	</Limit>
	<LimitExcept GET POST OPTIONS PROPFIND>
		Order deny,allow
		Deny from all
	<LimitExcept>
</Directory>
=========================================================
7.7 Безопасность сценариев 
1 Параметр safe_mode и magic_quotes в настройках сервера.
magic_quotes
safe mode

Все настройки для интерпретатора php хранятся в файле /etc/php.ini.

2 Причина взлома устаревшие модули, устаревшая cms и так далее, на сайте имеются не безопасные сценарии с помощью которых можно получить доступ к серверу и запустить комаду. Многое зависит от того как как написан сценарий программистом.
===========================================================
7.7.2 Модуль _mod_security_
1 mod_security # модуль apache 
mod_security это сетевой экран, который анализирует пускать ли пакет на сервер или нет. Если в пакете идет обращение к определенному url то норм, но если идет обращение к файлу /etc/passwd, а значит его не должно быть в пакете.

2 Модуль mod_security скачиваем с сайта www.modsecurity.org. После его установки в файле httpd.conf появляется возможность  применять дополнительные директивы фильтрации запросов. Рассмотрим наиболее интересные из них:

httpd.conf (mod_sec)

1 SecFilterEngine On 					# включить режим фильтрации запросов

2 SecFilterCheckURLEncoding On 		# проверить кодировку URL

3 SecFilterForceByteRange 32 126      # символы менее 32 и более 126 объявляются недопустимыми для адреса и такие пакеты не пропускаются к веб-серверу.

4 SecAuditLog logs/audit_log  		# определяет файл журнала, в котором будт сохраняться информация об аудите ло где хранится инфа c modsec

5 SecFilterDefaultAction "deny,log,status:406"  # задает действия по умолчанию. Здесь указан запрет(deny)

6 SecFilter xxx redirect:http//www.webkreator.com   ## настройка переадресации будет редиректить www.webkreator.com

7 SecFilter yyy log,exec:/home/apache/report-attack.pl  ## если фильтр сработал то будте выполнен скрипт /home/apache/report-attack.pl; 

8 SecFilter /etc/passwd        ##устанавливает запрет на использование в запросе пользователя подстроки /etc/passwd
  SecFilter /etc/shadow        # тоже добавь

9 SecFilter /bin/ls   # если в сценарии есть ошибка то это непозволит ввести со стороны данную команду 
Таже по аналогии надо настроить для команд cat rm cp ftp и др.

10 SecFilter "\.\./"  # класическая атака когда URL указывается две точки подряд для перехода в родительский каталог.Их там быть не должно;
####################################################################
modsec = httpd.conf 
_защита xss sql инъекций_
!!!!!!!!Защита от sql инъекций !!!!!!!!!!
11 SecFilter "delete[[:space:]]+from"       # запрет тескта delete .... from,который чаще всего содержится в SQL-запросах для удаления данных. 

12 SecFilter "insert[[:space:]]+from"       # используется в SQL-запросах для чтения данных из таблицы базы данных

13 SecFilter "select.+from"                 # используется в SQL запросах для чтения данных из таблицы базы данных

!!!!!!!!Защита от xss инъекций !!!!!!!!!!
14 SecFilter "<(.|\n)+>" и SecFilter "<[[:space:]]*script"  # позволяет защититься от xss-атак Cross-Site Scripting межсайтовое выполение сценариев
=========================================================
7.7.3 Советы допзащита
1 Ограничение выполнение сценариев только отдельным каталогом.

2 резервные копии плохая практика когда клиент хранит копию там же где и сайт злоумышленник может получить доступ к исходному коду 
bak old файлы с таким названием. Запрещаю доступ веб-клиентов пользователям доступ к таким файлам 

<FilesMatch "\.bak$">
	Order deny, allow
	Deny from all
<FilesMatch>

<FilesMatch "\.old">
	Order deny,allow
	Deny from all
<FilesMatch>
=========================================================
7.8 Индексация веб-страниц
_robots.txt_
1 google может по ошибке просканировать страницу которая закрытая или с ограниченным доступом злоумышленник может попробовать получить доступ к данной странице 
Пример если в посиске ввести следующие:

Годовой отчет filetype:doc
или
Годовой отчет filetype:xls
2 Если google может добраться то и человек тоже 

3 Чтобы ограничить доступ ложится файл robots.txt в корень папки с файлами сайта и робот прежде чем проиндексировать сайт смотрит в robots.txt
пример:
www.linux.fo.by/robots.txt

1 UserAgent: параметр в которой указывается имя поисковой системы. Если запреты должны действовать на все поисковики то достаточно указать в начале файла директиву User-Agent c параметром звездочка (*)

2 Disallow: адрес здесь указываем что именно запретить доступ как какой части сайта

1
UserAgent: *                  # для всех запритить доступ к ледующим страницам
Disallow: /cgi-bin/
Disallow: /admin/            # www.linux.of.by/admin надо просто через слеш указать к какой странице доступ закрыт

2 Полностью закрываю индексацию для всего сайта:
UserAgent: *
Disallow: /

С одной стороны robots.txt закроет старницы которые нужно скрыть, с другой стороны из-за того что robots.txt в открытом доступе может подсказать куда копать и куда смотреть. Лучший способ ничего не хранить важного на открытых серверах.
==========================================================
7.9. Безопасность подключения 
Раньше засщет отравления dns или подделки dns(ложный dns ответ) злоумышленник мог направить трафика на свой комп, потом уже на реальный сервер. В трафике может увидеть пароли номер карточки. Вот почему очень важен ssl сертфификат весь трафик защищен(зашифрован) и доступ получить к нему практически невозможно.

Поэтому всегда смотри есть сертификат или нету также обращай внимание, на соедениение безопасное или нет. Вводить карточку можно только там где есть сертификат https, для избежания перехвата трафика злоумышленником


=========================================================
_Глава 8 почта_

1 отправка SMTP сообщений

2 sam@inbox.ru # sam имя пользователя, inbox.ru имя сервера, с помощью DNS SMTP узнает IP адрес сервера которому должно быть доставлени письмо

3 Далее письмо идет на сервер к зарегистрированному пользовтелю

4 Если такого пользователя нету на  почтовом сервере, то сервер об этом высылает уведомление отправителю

5 Пользователь включает свой почтовый ящик и смотрит письмо
========================
2 Для приема почты используется три протокола
POP3 
IMAP4 загружаются только заголовки
MAPI  microsoft  для работы в сетях Microsoft

3 hostname # имя компьютера  которое было указано при установки!!!!

4 sendmail
1 /etc/sendmail.cf # конфиг
/etc/sendmail.mc  # последние версии
local info # локальная инфа о сервере и домене
options настройка работы программы
message precedences  # приоритеты сообщений
Trusted users # доверенные пользователи
Format of headers # форматы заголовков


2 инфа о почтовых ящиков
/var/spool/mail # все пользователи
/var/spool/mail/root  # root ящик 
=====================================

команды sendmail полезные
1 hoststat # список хостов, которые недавно работали с локальным почтовым сервером
2 mailq # отобразить краткую информацию об очереди на сервере
самая строки от кого указан последния строка получатель

3 mailstats # отобразит статистику сообщений
4 sendmail # запустить сервер
man sendmail # manual можно почитать
=================================
Безопасность sendmail
1 /etc/sendmail.cf  
SmtpGreetingMessage=$j $b ## надо настроить так чтобы не было видно версии программы

2 права доступа должен работать от определенного пользователя
O RunAsUser=sendmail:mail   ## sendmail пользователь, mail имя группы

3 Обязательно раскоментированы строки должны быть
O PrivacyOptions=authwarnings
O PrivacyOptions=noexpn
O PrivacyOptions=novrfy # verify запрещает проверить существование ящика
Или так 
PrivacyOptions=authwarnings,noexpn,novrfy
=================================
/etc/sendmail.mc 
Feature('smrsh', '/bin/smrsh') # настройка через безопасный интепретатор

6 Доверенные пользователи 
/etc/mail/trusted-users

7 Отказ от обслуживания 
защита от DOS-атак, 25 110 порты общедоступны
MaxDeamonChildren --- ограничение одновременно запущенных процессов.(параметр 12 по умолчанию) Может защитить от излишней нагрузки. Для мощного увеличиваем для слабого понижаем от лишней нагрузки

8 ConnectionRateThrottle # максимальное количество открываемых соединений в секунду. По умолчанию равен 3.
===========================================
Почтовая бомбардировка
1 /var  # хуже всего когда почтовые ящики храняться в данном разделе, если забьются то сервер может стать вообще недоступным тут важные журналы безопасноти хранятся
2 Когда бомбардировка один из способов защиты 
MaxMessageSize # уменьшить размер почтового письма что не много усложнит хакеру отправлять кучу маленьких сообщений 
============================================
Спам борьба со спамом
версия 8.10
FEATURE('dnsb1', 'spam.com', ' 550 Mail not accepted from domain')dn1

версия 8.11. 
HACK('check_dnsb1', 'spam.com', '', 'general', 'reason')dn1
# spam.com  надо заменить на адрес которые хранит списки спам-листов
spamlinks.net/filter-dnsbl-lists.htm
=======================================
Фильтрация сообщений
SpamAssassin
1 apt install spamassassin

yum install spamassassin

/etc/mail/spamassassin/local.cf
rewrite_header Subject ***SPAM***
А также добавляем два параметра:
required_hits 8.0  # балы после которого письмо будет восприниматься как спам
report_safe 0

2 Теперь нужно создать пользователя и дать ему права на запись в журнал:
useradd -s /bin/false -d /var/log/spamassasin spamd
# -s /bin/false  командная оболчка что бы пользователь не мог зайти в систему, spamd иммет доступ /var/log/spamassassin

chown spamd:spamd /var/log/spamassassin

2.1 /etc/default/spamassassin 
ENABLED=1
CRON=1
SAHOME="/var/log/spamassassin"
OPTIONS="--create-prefs --max-children 2 --username spamd \-H ${SAHOME} -s ${SAHOME}spamd.log"

service spamassassin start
========================================
3 Настройка spamassassin в postfix
/etc/postfix/master.cf # гугли
## добавить строки страница268

service postfix restart 
=============================================
Защита от перессылки 
SMTP не нужна авторизация поэтому определенные лица могут использовать отправку через ваш сервер кому угодно.

1 разрешать отправку в течении определнного времени 10 минут
2 в sendmail можно настроить авторизацию
3 запретить более 20 писем за 10 минут с одного ip 
4 запретить отправку большому количеству отправителям

/etc/mail/access # разрешения на перессылку
localhost   				RELAY
your_domain.com 			RELAY 
# отправка с комопов сети  и с самого сервера.
===================================================
Сервер Postfix 
1 /etc/postfix/main.cf   # конфиги, если надо полный то тогда main.cf.dist

/etc/postfix/main.cf.dist 
#myorigin = $myhostname
#myorigin = $mydomain 
Тут я выбираю когда почта будет представлять по имени хости или домена другим системам
inet_interfaces = all # с каких интерефейсов можно ожидать почту 

mydestiantion # определяет домены для которых принимает почту 

2 псевдонимы хранятся в файле aliases(алиас)
admin: root   # admin является алиасом root

postalias alises # после измемнений в файле выше ввожу данную команду но изменения только через какое-то время появятся 

postfix reload # перезагрузка сервера

3 Ретрансляция 
mynetworks = 168.100.189.0/28, 127.0.0.0/8
отправитель должен принадлежат этой сети 

$relay_domains    # домен отправителя и домен получателя сообщения присуствует в данной переменной 
====================================================================================================



RewriteEngine On
RewriteRule ^(.*)$ http://www.mysite2.com/$1 [R=301,L]

или


RewriteEngine on
RewriteCond %{HTTP_HOST} ^www\.mysite1\.ru$ [NC]
RewriteRule ^(.*)$ http://www.mysite2.ru/$1 [R=301,L]

Не забудьте поменять в коде «mysite1» и «mysite2» на старый и новый домен соответственно.