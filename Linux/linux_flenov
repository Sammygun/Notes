														Содержание 

														_Глава 2 начальная настройка_
														_Глава 7 веб-сервер_
														_Глава 8 почта_


_Глава 2_
windows linux
1 сначало window потом linux. Windows затирает загрузочную запись и уничтожает любое присуствие сторонних систем.
grub-install /dev/hda

2 нумерация дисков
/dev/hdNX
/dev/hdb
При установки лучше разбивать диск на два раздела
/dev/hda # это типо диск с операционной системой
/dev/hda2 # это диск под файлы 


3 linux файловая система
1 ext2 хранит данные  в кэше а потом сохраняет на диск, но если аварийно выключить данные будут утеряны
при старте включится fsck проверка диска что очень долго может быть

ReiserFS # тоже самое только быстрей востановится после перезагрузке также более рационально использует диск, все блоки 
заполняются более плотно
Windows  Size, Size on disk сразу видим, что диск используется не рационально, величина файла 4,95 но по факту занимает 8 кб.
ReiserFS меньше дыр меньше утечек

Ext4 лучшая файловая система только для ssd надо отключать журналирование

2 Файлы подкачки не эффективен и используется при нехватке оперативной памяти
SWAP надо делать побольше чтоб с ним потом не было проблем при нехватке оперативной памяти жедательно делать 2 в 3 раза больше оперативной памяти не маленикий раздел создавать, иначе забется сам место на диске если мало выделено будет и начнутся проблемы.

3 При настройке на сервере дисков раздел /home и /var лучше вынести на разные диски(var 10 гб файлы журналов ftp, www)  
При dos папка var увеличивается в размерах и забивается раздел поэтому данный раздел должен быть не маленьким

4 Лучше home и var на разных дисках так как так будет меньше нагрузки в файловой системе.

5 Всегда провярей что настроено в автозапуске(сеанс)

=================================

6 Все сервисы, ftp, сервер новостей, веб должны находиться на разных виртуальных машинах, если хакер проникает то дальше отдельной виртуальной машины не пойдет


7 web shell программа котороая позволяет изучать и администрировать сервер

8 каждая машина свой отдельный пароль

9 не устанавливать на сервер библиотеки разработчика и компилятор gcc, использовать уже в скомпилированном виде у хакера будут проблемы с доступом зловредного кода

10 
1 Пароль generation   клавиши выше и по диагонали
t3h34q589h generation  # то что выше по диагонали
hrtsyopn   generation  # то что справа
Можно некоторые буквы в верхнем регистре 

2 djn'njvjqgfhjkm        # вот это мой пароль

47 страница
==============================================================================================================
_Глава 7 веб-сервер_
Apache
/etc/httpd/conf/httpd.conf    #конфигурационный файл
/etc/httpd.conf
/etc/apache2

Установка
1  sudo apt install apache2 		# ubuntu
2 yum install httpd      			# centos

3 ls /etc/apache2/apache2.conf
1 ServerRoot     ## корневой каталог в котором находятся файлы конфигурации и журналы
2 Timeout        ## предельное время ожидания в секундах для получения и отправки пакетов

3 HostnameLookups ## флаг, отвечающий за проведение преобразования ip-адресов в доменное имена для логов CGI. Если on то ip-адрес клиента
запросившего данные с сервера будет преобразован в доменное имя иначае будет использ. ip-адрес. Если в этом нет необходимости лучше off
так быстрее.

4 User и Group
имя пользователя и группа с правами которых будет работать сервис. Как правило пользователь и группа www-data.
Пользователь и группа должны обладать минимальными правами для работы сервера.

В файле apache.conf # представлены в виде переменных:
User $(APACHE_RUN_USER)
Group $(APACHE_RUN_GROUP)

Значение переменных можно найти в /etc/apache2/envars:
export APACHE_RUN_USER=www-data
export APACHE_RUN_GROUP=www-data

5 ErrorLog Customlog        # местоположение журналов. Опять же здесь вы увидите переменную $(APACHE_LOG_DIR), которую так же можно задать
в файле переменных окружения

6 LogLevel # степень подробности составления журнала. Можно указать следующие значения:
emerg,alert,crit,error, warn,notice, info, debug;

7 KeepAlive !!!!!!!!!!!!! #разрешает обрабатывать несколько запросов за одно соединение. По умолчанию off !!!!!, что не очень и для получения в таком случае файла требуется отдельное соединение. Пример клиент запросил страницу с 10 картинками тогда будет 11 соединений. 
Одна html и 10 для картинок документа. Если включить on, то тогда за одно подключение будет обработано несколько подключений.

8 MaxKeepAliveRequests # максимальное число запросов, которое может быть выполнено в течение одного соединения.

9 KeepAliveTimeout      # время ожидания  очередного запроса, которое может быть выполнено в течение одного соединения

10  Безопасность 
/etc/apache2/conf-enabled/security.conf:

ServerTokens - при любом обращении к серверу он возвращает подробный заголовок с подробной инфой о системе, которая включает версии
Apache, ОС linux и модулей , устаревшая версия интерпертатора PHP. Болтливые параметры надо отключать.

Full  # отображать полную информацию о сервере и установленных модулях включая их версии. Самое опасное значение.

Min   # показать минимум сведений только название сервера и установленные модули. Тоже не очень.

ProductOnly # только название сервера вот  это значение самое лучшие.


ServerSignature #  если on то тогда будет добавлять сгенирированные страницы текстовую информацию которая будет содержать имя сервера
и виртуального хоста. В рабочих системах лучше отключать это установив параметр в off.

=======================================================================================

7.2. Модули 
1 ls /etc/apache2/mods-enabled    # смотрю все модули, которые были установлены, неиспользуемые модули отключать или не устанавливать
чтобы снизить риски. Лишния программа это дверь.

2 Модуль не загружается rewrite
sudo a2enmod rewrite  # a2enmod программа которая помогает включать модули здесь именно rewrite

3 /etc/apache2/mods-enabled  # и убедитесь что вы видите там файл rewrite.load

4 /etc/apache2/mods-enabled   # все активированные и неактивированные модули можно здесь посмотреть

5 sudo /etc/init.d/apache2 restart #надо перезагрузить Apache после включения модуля для вступления изменений в силу.
==============================================================================

7.3. Права доступа
/etc/apache2/apache2.conf 
<Directory /var/www/html>       # правада доступа к каталогу /html ограничивает открыл
	Order allow,deny
	Allow from all
</Directory>					# закрыл

## также права доступа могут  быть описаны в файле .htaccess


<Location /server-status>         # ограничивает доступ к виртуальному каталогу разрешая его только клиентам
	SetHandler server-status	  # из домена .your-domain.com 
	Order deny,allow
	Deny from all
	Alow From .your-domain.com
</Location>


2 <Directory />
	Order deny,allow
	Deny from all
  </Directory>

1 Allow from параметр  # оперделяет с каих хостов можно получить доступ к указанному каталогу 
all     # разрешает доступ к каталогу всем
доменное имя  #  опредеояет домен, с которого можно получить доступ к каталогу. Например можно указать domain.com, если есть важные файлы
то можно ограничить доступ своим доменом или только локальной машиной указав Allow from localhost

2 IP адрес     ## сужает доступ к каталогу до определенного IP-адреса.

env=Имя Переменной  ## разрешает доступ, если определена указанная переменная окружения. Полный формат директивы
Allow from env= Имя переменной

3 Deny from параметр    # запрещени доступа к указанному каталогу from

Order параметр     # очередность в которой применяются директивы allow и deny

 Могут быть два варианта:
 Order deny,allow    # изначально разрешено всем, потом проверяются запреты.

 Require параметр    # позволяет задать пользователей которым разрешен доступ к каталогу. В качестве параметра можно указывать:

 user  # имена пользователей которым разрешен доступ к каталогу. Например Require user robert FlenovM

 group   # названия групп, пользователям которых позволен доступ к каталогу. Директива работает так же как user 

 valid-user # доступ к каталогу разрешен любому аутентифицированному пользователю

4 Satisfy параметр  # если указать значение any, то для ограничения доступа использовать логин и пароль или Ip-адрес. Для идентификации
пользователя по двум условия одновременно задать all

5 AllowOverride параметр # определяет какие директивы из файла .htaccess  в указанном каталоге могут перекрывать конфигруацию сервера. В качестве параметр можно указать одно из следующих значений: None, All Authconfig Fileinfo Indexes Limit Options

6 Options параметры определяет возможности веб-сервера, которые доступны в указанному каталоге 
All # означает разрешение всех опций кроме MultiViews, None # запрещает все опции или комбинация из следующих значений:

ExecCGI # разрешено выполнение CGI сценариев, чаще всего используется отдельный каталог /cgi-bin но и в нем можно определить отдельные 
подкаталоги в которых запрещено выполение 


FollowSymlinks    # позволяет использовать символьные ссылки. Символьные ссылки очень опасны с ними надо быть аккуратнее.

SymlinksIfOwnerMatch # следовать по символьным ссылкам, только если владельцы целевого файлы и ссылки совпадают. Лучше его использщвать вместо FollowSymlinks, потому что если получится создать символьную ссылку на /etc/ будут серьезные проблемы.

7 Includes     #использовать SSI  включения на стороне сервера

8 IncludesNOEXEC  # использовать SSI кроме команд exec include 

9 Indexes   # отобразить список содержимого каталога  если отсутствует файл по умолчанию 
здесь указывается какой файл нужен для загрузки сайта index.htm, index.html, index.asp  или index.php

10 MultiViews # представление зависит от предпочтений клиента


11 <Files ИмяФайла>  # объявление для 
</Files>

Пример:
<Directory /var/www/html>
	Order allow,deny
	Allow from all
	<Files "/var/www/html/admin.php">
		Deny from all
	</Files>
</Directory>


12 Помимо файлов и каталогов можно ограничивать и методы протокола HTTP такие как GET, POST, PUT, DELETE,  CONNECT, OPTIONS, TRACE, PATCH,
PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK

Пример:

<Directory /home>	
	<Limit GET POST>
		Deny from all
	</Limit>
</Directory>
=============================================================================================
7.4. Создание виртуальных веб-серверов 235 





================================================================================================================

_Глава 8 почта_

1 отправка SMTP сообщений

2 sam@inbox.ru # sam имя пользователя, inbox.ru имя сервера, с помощью DNS SMTP узнает IP адрес сервера которому должно быть доставлени письмо

3 Далее письмо идет на сервер к зарегистрированному пользовтелю

4 Если такого пользователя нету на  почтовом сервере, то сервер об этом высылает уведомление отправителю

5 Пользователь включает свой почтовый ящик и смотрит письмо
========================
2 Для приема почты используется три протокола
POP3 
IMAP4 загружаются только заголовки
MAPI  microsoft  для работы в сетях Microsoft

3 hostname # имя компьютера  которое было указано при установки!!!!

4 sendmail
1 /etc/sendmail.cf # конфиг
/etc/sendmail.mc  # последние версии
local info # локальная инфа о сервере и домене
options настройка работы программы
message precedences  # приоритеты сообщений
Trusted users # доверенные пользователи
Format of headers # форматы заголовков


2 инфа о почтовых ящиков
/var/spool/mail # все пользователи
/var/spool/mail/root  # root ящик 
=====================================

команды sendmail полезные
1 hoststat # список хостов, которые недавно работали с локальным почтовым сервером
2 mailq # отобразить краткую информацию об очереди на сервере
самая строки от кого указан последния строка получатель

3 mailstats # отобразит статистику сообщений
4 sendmail # запустить сервер
man sendmail # manual можно почитать
=================================
Безопасность sendmail
1 /etc/sendmail.cf  
SmtpGreetingMessage=$j $b ## надо настроить так чтобы не было видно версии программы

2 права доступа должен работать от определенного пользователя
O RunAsUser=sendmail:mail   ## sendmail пользователь, mail имя группы

3 Обязательно раскоментированы строки должны быть
O PrivacyOptions=authwarnings
O PrivacyOptions=noexpn
O PrivacyOptions=novrfy # verify запрещает проверить существование ящика
Или так 
PrivacyOptions=authwarnings,noexpn,novrfy
=================================
/etc/sendmail.mc 
Feature('smrsh', '/bin/smrsh') # настройка через безопасный интепретатор

6 Доверенные пользователи 
/etc/mail/trusted-users

7 Отказ от обслуживания 
защита от DOS-атак, 25 110 порты общедоступны
MaxDeamonChildren --- ограничение одновременно запущенных процессов.(параметр 12 по умолчанию) Может защитить от излишней нагрузки. Для мощного увеличиваем для слабого понижаем от лишней нагрузки

8 ConnectionRateThrottle # максимальное количество открываемых соединений в секунду. По умолчанию равен 3.
===========================================
Почтовая бомбардировка
1 /var  # хуже всего когда почтовые ящики храняться в данном разделе, если забьются то сервер может стать вообще недоступным тут важные журналы безопасноти хранятся
2 Когда бомбардировка один из способов защиты 
MaxMessageSize # уменьшить размер почтового письма что не много усложнит хакеру отправлять кучу маленьких сообщений 
============================================
Спам борьба со спамом
версия 8.10
FEATURE('dnsb1', 'spam.com', ' 550 Mail not accepted from domain')dn1

версия 8.11. 
HACK('check_dnsb1', 'spam.com', '', 'general', 'reason')dn1
# spam.com  надо заменить на адрес которые хранит списки спам-листов
spamlinks.net/filter-dnsbl-lists.htm
=======================================
Фильтрация сообщений
SpamAssassin
1 apt install spamassassin

yum install spamassassin

/etc/mail/spamassassin/local.cf
rewrite_header Subject ***SPAM***
А также добавляем два параметра:
required_hits 8.0  # балы после которого письмо будет восприниматься как спам
report_safe 0

2 Теперь нужно создать пользователя и дать ему права на запись в журнал:
useradd -s /bin/false -d /var/log/spamassasin spamd
# -s /bin/false  командная оболчка что бы пользователь не мог зайти в систему, spamd иммет доступ /var/log/spamassassin

chown spamd:spamd /var/log/spamassassin

2.1 /etc/default/spamassassin 
ENABLED=1
CRON=1
SAHOME="/var/log/spamassassin"
OPTIONS="--create-prefs --max-children 2 --username spamd \-H ${SAHOME} -s ${SAHOME}spamd.log"

service spamassassin start
========================================
3 Настройка spamassassin в postfix
/etc/postfix/master.cf # гугли
## добавить строки страница268

service postfix restart 
=============================================
Защита от перессылки 
SMTP не нужна авторизация поэтому определенные лица могут использовать отправку через ваш сервер кому угодно.

1 разрешать отправку в течении определнного времени 10 минут
2 в sendmail можно настроить авторизацию
3 запретить более 20 писем за 10 минут с одного ip 
4 запретить отправку большому количеству отправителям

/etc/mail/access # разрешения на перессылку
localhost   				RELAY
your_domain.com 			RELAY 
# отправка с комопов сети  и с самого сервера.
===================================================
Сервер Postfix 
1 /etc/postfix/main.cf   # конфиги, если надо полный то тогда main.cf.dist

/etc/postfix/main.cf.dist 
#myorigin = $myhostname
#myorigin = $mydomain 
Тут я выбираю когда почта будет представлять по имени хости или домена другим системам
inet_interfaces = all # с каких интерефейсов можно ожидать почту 

mydestiantion # определяет домены для которых принимает почту 

2 псевдонимы хранятся в файле aliases(алиас)
admin: root   # admin является алиасом root

postalias alises # после измемнений в файле выше ввожу данную команду но изменения только через какое-то время появятся 

postfix reload # перезагрузка сервера

3 Ретрансляция 
mynetworks = 168.100.189.0/28, 127.0.0.0/8
отправитель должен принадлежат этой сети 

$relay_domains    # домен отправителя и домен получателя сообщения присуствует в данной переменной 
====================================================================================================









