KIRIL LINUX

LPIC 101.1 Работа с железом в Linux. Часть первая - sysfs, devfs, udev

1.ls /dev # инфа о процессоре, памяти
2. ls -lh /dev # human начало b блочное место где система подключается к драйверам и диски там блочное устройсвта информации
3.htop # нету изначально
4.htop > /dev/null 2>&1 # теперь ошибка полетела туда
5.head -1 /dev/urandom > ~/test
6.Sysfs информация об устройствах упаковка снаружи
  dev инфа все что внутри то к чему можно обращаться к железу
7. cd /sys # инфа об всех устройствах
8. ls bus # шины usb
9.ls sys/bus/usb # смотрю usb
10.ls sys/bus/pci/devices
11. ls sys/bus/usb # сетевая карточка
12. ip addr # покажет тежи сетевые карточки
13.cd proc # смортю процессоры
14. ls # увижу кучу процессов
15. cat cpuinfo  # вся инфа по процессору
16.sam@sam:/proc$ cat mounts # все что примонтировано
17.cd /proc/sys # инфа о системе
18. cat net/ipv4/ip_forward
0 # запрещено
echo 1 > net/ipv4/ip_forward # теперь будет разрешено
1 # в рут команда
-------------------------------------------------------------------------------------------------------------------------------------------
LPIC 101.1 Работа с железом в Linux. Часть вторая - управление устройствами
1.lsmod # модули ядра
2.lspci #все о шине
3.lscpu # процессор
4.lsusb # смотрю флешки что подклечно
5.udevadm info -a -p /sys/class/net/enp0s25 # инфа о сетевой карте
ip addr # посмотреть сетевую карту
6. udevadm monitor --property --kernel # показывать в реальном времени все что происходит usb зарядка все
7. udevadm test /sys/block/sda # покажет все что может происходит в системе
8.lsmod # модули ядра
9.modinfo e1000e # сетевой модуль
  rmmod e1000e # удалил сетевой модуль драйве
10.modprobe e1000 # мягко вставили
11. ifconfig  # enp0s25 inet смотри ip, wlo1 inet 192.168.0.103
12. rmmod e1000 # грохнули
13. ifconfig # убедились что грохнули
14. modprobe e1000 # обратно вставили
-------------------------------------------------------------------------------------------------------------------------------

LPIC 101.2 Процесс загрузки Linux
lilo или grub загрузчики
1. при загрузке нажми shift
2. e #edit
3. Стираешь что тебе не надо f10 параметр для загрузки
4. dmesg # все сообщения ядра
5. cat /var/log/dmesg # инфа о загрузке
6. pstree # дерево процессов
7. cd /boot # vmlinuz-5.0.0-23-generic ядро linux
8. cd /grub # grub.cfg важный конфигурационные файлы
--------------------------------------------------------------------------------------------------------------------------------
LPIC 101.3-1 Инициализация системы в стиле SysV

1.centos 5.4 vi /etc/initab # старая версия нету уже
2.cd /etc/init.d # скрипты запускающие службы
3. ls
4. ./network stop   # ./ это значит запуск с текущей аудитори останавливаем скрипт
5. ./network start # востанавливаем скрипт
6.  service network restart # тоже самое перезагрузка сервиса
7. cd .. # на верх
8.  ls -l | grep rc.
9.cd rc3.d
10. ls # смотрю что там огромное количество скриптов k kill s start стартующий скрипт
11. cd ../rc4.d # поднимаюсь наверх и захожу в другую папку
12. cd ../rc1.d # 1 уровня
13. service service_name start|stop|reload|restart
 sevice sendmail stop
 /etc/init.d/sendmail start # опять ее стартанем
14.runlevel # уровни загрузки
15. telinet 1 # рассказать inet 1 уровень загрузки
однопол режим
16.  telinet 3 # многопользовательский процесс
17. wall " hello " # всем юзерам  говорю о чем-то 
18. shutdown -h now #выключить сейчас комп
-----------------------------------------------------------------------------------------------------------------------------------------

LPIC 101.3-2 Инициализация системы в стиле systemd
1.cd /usr/lib/systemd # библиотека
2.cd /etc/systemd # другая конфиг файлы настройка systemd
3.systemctl list-units # systemctl контроль демона system
ctl control # покажет все юниты
4. systemctl --failed # юниты которые не запустились
5.systemctl list-units --type=service # поиск по ключу
6.systemctl status crond # смотрим service
7. systemctl stop crond  # можем оставноить
8. systemctl start crond # стартанули
9. systemctl status crond # опять проверили
10.systemctl list-units --type=target # сортируем по типу запущенных таргетов
11.telinet 1 # режим востановления
12. systemctl isolate reboot.target #
13. systemctl set-default -f multi-user.target # -f force принудительно форсировать
14. systemctl reboot|poweroff|suspend|hibernate|hybrid-sleep # отключение и т.д.
systemctl start | stop | reload| restart | status unit
15.journalctl -f # журнальный демон f показывать по мере возникновения
16. journalctl -n 10 # последние 10 событий
17. journalctl _UID=0 # по номеру пользования
18. systemctl poweroff # выключаем систему
systemd быстрая загрузка, загрузка параллельная послежовательная, прекрасная journal

-----------------------------------------------------------------------------------------------------------------------------------------------

LPIC 101.3-3 Инициализация системы в стиле upstart
service перезагружается 
task нет # задание
1. cd /etc/init
2. ls
3.cat shutdown.conf # тригер который отключает комп
4.cat ufv.conf
5. runlevel # текущий уровень выполнения
6. telinet 3 # меняем уровень
7. cat /etc/init/rc-sysinit.conf # скриптик 
8. status ufw # статус фаервола
9. stop ufw # остановили фаервол
10. start ufw # включили
11. initctl show-config # какие есть задачи
12. initctl check-config  # есть ли конфликты
======================================================================================================================================

LPIC 102.1 Работа с жесткими дисками в Linux
конспект скопировал
**/ ** – корневая файловая система, самый большой раздел;
/boot _ – загрузочный раздел;_
/home _ – домашние папки;_
/root _ – домашняя папка суперпользователя;_
**/etc ** – конфигурация системы и ее компонентов;
/opt/ _ – папка для ПО от третьих поставщиков;_
**/var ** – часто изменяемые данные;
**/usr ** – все установленные пакеты программ, документация, исходный код ядра;
/tmp _ – временные файлы;_
** **** s **wap _ – раздел подкачки, никуда не монтируется._
1.cd /
2. fdisk утилита разбиения жесткого диска
3. mkfs утилита создания файловой системы make file system
4. fdisk -l # диски и разделы l лист
5. fdisk /dev/sdb
6. m все функции
7. n # new
   p # primary
   + 2gb

   n
   e
   2 # расширенный
   + 4g
8. mkfs.ext4 /dev/sdb5 # отформатирует в формате ext4
9. swapon -s # раздел подкачки место в качестве оперативной памяти особенно когда ее не хватает
текущий раздел подкачки
10. mkdir mounted #  в рутовском расположении
11. mount /dev/sdb5/mounted # монтируем устойства в определенную папку
12. umount /mounted # отмонтировали после перезагрузки
13. pvdisplay # смотрим  томы
14. vgdisplay
15. lvdipaly
16. fdisk /dev/sdb и удаляю
     d delete
     w сохранить
     fdisk /dev/sdb
17. pvcreate /dev/sdb1 # создаю том
30. vgcreate vg-semaev /dev/sdb1 /dev/sdb2
    lvcreate -n lv1 -l #логический том
    fdisk -l # смотрб разделы диска
31. lvresize -L 4G vg_semaev/lv2 # переразбиваем логический диск
https://help.ubuntu.ru/wiki/lvm
 --------------------------------------------------------------------------------------------------------------------------------------  

LPIC 102.2 Загрузчики Linux
1. fdisk -l
2. dd  if=/dev/sda of=/root/backup.mbr bs=512 count=1
 if input file of output file куда копируем bs размер блока 512 count 1 один блок
3.apt-get install lilo #linux loader устанвока, ok
4. liloconfig # запуск создал файл конфигурации
5. cat /etc/lilo.conf
lba32 меняет
timeout 100 # это 10 секунд
vi стандартный
vim усовершенствованный
6. cd /dev/disk/by-id # перемещаюсь сюда
7. ls # смотрим
8.  копирую жесткий диск ata-KINGSTON_SA400S37240G_50026B738014D247
9. vim /etc/lilo.conf # дает подсветку
10. boot = /dev/disk/by-id/ata-KINGSTON_SA400S37240G_50026B738014D247 # вставляю жесткий диск его id  ZZ больгие сохраняет файл
11.lilo # чтобы сработало изменение
12. shutdown -r now # r restart сейчас перезагрузить

13.grub самый популярный
14. grub-install /dev/sda #вернули обратно grub
15. grub-install --version # смотрю версию
16. cat /boot/grub/grub.cfg # страшный код ничего не можем редактировать
17. cat /etc/default/grub # смотрим настройки смотрим переменные
18. vim /etc/default/grub
 # grub_hidden_timeout=0 #задокументировали
   GRUB_TIMEOUT=100 # ПОСТАВИЛИ
   ESC , ZZ

19. cd /etc/grub.d # скрипты сомтрим
    ls # скрипты сомтрим
20 update-grub
21.shutdown -r now 
   будет меню загружаться


запуск собственного домашнего сервера в поиске youtube
--------------------------------------------------------------------------------------------------------------------------------------

LPIC 102.3 Управление библиотеками в Linux
конспект     
------------------------------------------------------------
LPIC 102.4 Управление пакетами в Debian-подобных операционных системах
1.dpkg --help
2. dpkg -s firefox # статус firefox
   dpkg -p firefox # print 
   dpkg -P firefox # удалит со всеми конфигурациионными данными
3. webmin package for debian#качаю
   cd /home/sam/Dowmloads
   dpkg -I webmin_1.930_all.deb # информация о пакете
   webmin через браузер управляем сервером
   dpkg -i webmin_1.930_all.deb # установка i install
   dpkg -i webmin
   dpkg -s webmin # статус
   dpkg -r webmin # удалил
   dpkg -s webmin # status reinstall
4.
   dpkg-reconfigure tzdata # time zone конфигурирование времени
   cat /etc/dpkg/dpkg.conf
5. ap-get # для скачивания и установки пакетов
   apt-cache # для поиска пакетов
   aptitude  полное управление пакетами с опцией псевдографии
   /etc/apt/sources.list - перечень репозиториев
   
   apt-get --help # очень важно читай используй
   remove - удалить пакеты
   purge - удалить пакеты вместе с их файлами настройки
   
   apt update # обновить инфу откуда скачивать можно новые места
   apt-get update # аналоги
   apt upgrade # обновить пакеты
   apt-get install gmail-notify# утилита gmail  
   apt-get remove gmail-notify# удалил
когда мы ставим программу вместе с ней куча зависимостей устанавливается когда удаляем программа удаляется
а зависимости остаются
   apt-get autoremove # автоматом удалит все зависимости
   apt-cache --help # смотрим что делает
   apt-cache search gmail # ищим везде где встречается gmail
   apt-cache show gmail-notify # покажет приложение
   apt-cache depends gmail-notify# смотрим от кого зависист какие пакеты зависимости
   apt-cache rdepends gmail-notify # смотрим кто зависит от этой программы
   apt-cache rdepends firefox # firefox очень важный пакет
   
   apt-get install aptitude 
   aptitude --help  графический установщик
   vim  + g  # +g установление
   vim /etc/apt/sources.list # смотрю пакеты подключенные
   restricted частично свободное программное по
   i # My owm repostory # добавил свой репозиторий
       deb http://it-prepod.ru trusty # для ubuntu
   apt-get update # обновляю репозиторий
  --------------------------------------------------------------------------------
LPIC 102.5 Управление пакетами в RedHat-подобных операционных системах
1.rpm
2.cd /home/sam/Dowmloads # 
3. rpm -iv webmin_1.930_all.rpm# v verbow
видеть что происходит установка типо dpkg
rpm -e webmin_1.930_all.rpm # erase удалить
4.rpm -K # проверка ключа
5. rpm -Vv openssh-clients
6. vi /usr/bin/scp
bla bla # навредели установку
7. rpm -qd openssh
8. rpm2cpio webmin_1.930_all.rpm  > webmin.cpio
9. less webmin.cpio #  инфа о файлах
10.yum --help
11. yum install openssh-clients
12. yum remove openssh-clients
13. cd /etc/yum.repos.d/
14. yum upgrade # обновил
15. yumdownloader openssh # сразу устанавливает и настраивает
============================================================================


LPIC 103.1 Работа в командной строке Linux
1.
cat – вывод содержимого файла в консоль;
cd – переход в каталог;
ls – вывод содержимого каталога;
echo – вывод текста в консоль;
touch – обновление времени редактирования файла или создание нового пустого файла;
**uname ** – вывод имени ОС;  

env – вывод переменных среды;
export – превращение переменной в переменную среды;
unset – отключение переменной;

man – справка по команде;
file – справка по файлу;
whatis – справка по названию;
history – вывод истории команд (список хранится в .bash_history);

1. cat /etc/passwd
sam:x:1000:1000:sam,,,:/home/sam:/bin/bash
# видим что пользователь использует оболочку bash
2.  cd /home/sam
ls -a # вижу скрытые файлы
3. vim /etc/profile # настройка bash
vim .profile
vim .bashrc # настройки всего
4. echo Hello # вывод текста в консоль и в текстовый документ
5.echo Hello; ls
6. cat > storm # cat создает и передает что-то в storm 
echo dsdadasda
ctrl + c 
7.chmod + x storm # позеленел значит может выполнять как скрипт
8. env # все переменные
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
9. pwd смотрю полный путь к файлу 
/home/sam
ls -a # скрытые файлы покажет и . ..
10. /home/sam/storm # все наш файл сработает
11. . # текущая папка 
    .. # на уровень выше
12. /home/sam/storm
     ./storm # запуск в текущем каталоге 
13. env
 ABC=123
export ABC
env
# выведит переменную abc=123
14. echo $ABC
123
15. unset ABC # удалил переменную
16. PATH=$PATH:. # равна текущему знащению
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin.
# появилось точка на конце это значит что из /home/sam # могу запускать файлы
17. touch 1.txt
 touch 2.txt
 touch 3.txt
 touch 4.txt
 touch 5.txt

ls *.txt # * все файлы
1.txt 2.txt 3.txt 4.txt 5.txt

ls *.t*
1.txt 2.txt 3.txt 4.txt 5.txt
ls *.t? # ищет форма t и еще одна буква любая
ничего не найдет
ls *.t?t # любой формат начало и конец t
1.txt 2.txt 3.txt 4.txt 5.txt

ls [1-3].txt #  поиск диапозон
.txt 2.txt 3.txt
18. touch {6,7,8}.txt # сразу несколько
19. uname -a
Linux sam 5.0.0-29-generic #31~18.04.1-Ubuntu SMP Thu Sep 12 18:29:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
20. file storm # че за файл
21. whatis lilo
    whatis history # справочная инфа
22.начало команды tab  и подсказывает команду
везде tab используй
23. man history # q выйти
    man -k http  # покажет мануал с к
24.exec ls -a # игнорировать все настройки и команда с работает в чистом виде и выйдем в чистую командную строку
25. bash # возвращюсь в командную оболочку
26. . #текущая
    .. # на один вверх

============================================================================================================================================
cat
cut
expand
fmt
head
join
less
nl
od
paste
pr
sed
sort
split
tail
tr
unexpand
uniq
wc

LPIC 103.2 Работа c текстовым выводом в Linux !!!!!!!!
1.vim hello2.txt
  vim hello1.txt
2. man cat 
3.cat hello1.txt # ввывод текста
  cat hello1.txt hello2.txt # сразу вывод двух файлов почередно откроет каждый
4. cat hello1.txt hello2.txt > hello3.txt # стрелка в право передаст всю инфу в один файл
5.rm hello3.txt # удалили
6.mna cut # удаляет секции строки из файлов
7. cut -c 2,3,4,5,10  hello1.txt # вывод сделает вырезанный но сам файл не поменяет
8.man expand # tab превращает в пробелы
9. expand hello1.txt
   unexpand hello1.txt # превращает пробелы в tab
10. fmt hello1.txt # все в одну строку перенос на оригинал не поменяет
    fmt -w 10 hello1.txt
 # на каждой строк по 10 символов fmt format
11. cat /var/log/syslog
head /var/log/syslog
head -n 2 /var/log/syslog # показать первые две строки
#head - output the first part of files#
12.man od  # конвертатор превращает в другие форматы
13. od hello1.txt # десятиричный код
 перевод инфы в понятный нам формат
14. join - join lines of two files on a common field
join 1.txt 2.txt  # объединит их строки по единому полю
15. less # читаь файл лучше чем more
 less /var/log/syslog # позволяет листать страницы поиск файла делать удобно
16. nl hello1.txt # нумерует строки
17.man paste 
paste 1.txt 2.txt # в отличии от join просто объединит файлы
red	plat
blue	nano
yellow	skirt
18. man pr # 
 pr - convert text files for printing
 pr hello1.txt #  покажет файл перед печатью
 pr /var/log/syslog # распечатка событий
19. sed streame editor
    set -e 's/socks/peoplre/' 2.txt #e заменить s слово socks на people  в конкретном файле 2.txt меняет только вывод
20. man sort
sort hello1.txt # отсортирует в алфавитном порядке
sort -r hello1.txt #отсортирует в обратном порядке наоборот
21. split -l 2 1.txt. # по строчкам 2 файла первые 2 строчки один след 2строки другой
22.split -b 5 1.txt. # бъем файл по 5 байкт
23. tail /var/log/syslog # показывает последние события
 tail -n 5 /var/log/syslog # показывает последние 5 событий
tail -n 5 /var/log/dmesg
tail -f /var/log/syslog # показывать все события в живую все что происзодит в реальном времени
24. tr # translate or delete characters
    echo Hello | tr -t A-Z a-z# выполнить трансформация заглавных в прописные # hello вывод
    echo Hello | tr -t l L # выведит вместо Hello HeLLo 
    echo Hello | tr -d l # вывод Heo
    echo Hello | tr -s l # объединить l вывод Helo
25. man uniq # уникальные и дублируюшие линии
    uniq 1.txt  # без дупликатов покажет
    uniq -с 1.txt # покажет строчки которые встречаюется два раза
   2 1 red # покажет строчки которые встречаюется два раза
   1 2 yellow
   1 3 green 
    uniq -d 1.txt # показать дублируюшие строки
1 red # так как она два раза встречается
26.   uniq -u 1.txt # показать только не повторяюшиеся линиии
     2 yellow
     3 green  
27. man wc # показывает кол-во симоволо строк файлов байт
      wc 1.txt 
 4 8 29 1.txt # 4 строки 8 слов 29 символов
      wc -w 1.txt # w word покажи количество слов 8 слов 
      wc * # все что в папке в каждом файле посчитает сколько чего только файлы

Данные команды  только  для вывода данных они ничего не меняют в самом файле






======================================================================================

LPIC 103.3 Основные операции с файлами и директориями !!!!!
1. touch 123.txt # создали файл
2. mkdir
3. mkdir folder1 # создали папку
4. ls # содержимо папки
5. touch 456.txt
6.  touch folder1/1.txt
    touch folder1/2.txt
    touch folder1/3.txt  # создаем файлики сразу же в папке
7. ls folder1/ # смотрим что в папке
8. cp 123.txt copy123.txt # просто делаю копию
9. cp -R folder1 folder2
   cp -r folder1 folder2 # копируем по жесткому всю папку и сразу же создаем folder2 папку без R не сработает
10. ls folder2/ # смотрим скопированные файлы
11. mv 456.txt something.txt # переименовал файл
12. mv 123.txt folder1/ # перенес в папку
13.  mv folder1/123.txt . # точка в текущую папку из которой смотрим данную папку
    mv folder1/123.txt .. # а это еще на папку выше
14.rm practise/123.txt # удаление из папки
15. rm -r folder1 # удалим не пустую папку
    rm -rf folder1 # удалим force супер принудительно
16. file folder1 # напишет что это директория
    file folder1/1.txt # если там есть текст укажет что есть текст
17. * все что угодно
    ? любой символ
    ! не 
    [ac]  - a или с
    [a-c] - a,b,c
18. ls * # показывает папки и все содержимое папок
     ls *.* # покажет все расширения  в директотрии
     ls folder1 *.* # тоже самое
     ls ???.??? # три любых символов впереди и в конце все с 3 символами и форматом 3 символа
cat.txt но не catty.txt
     ls ?at.txt # покажет все файлы заканчивающиеся at
     ls [ab]* # все файлы имеюшие a или b
     ls [bc]* # любой из этих симоволов
     ls [a-m]* # любой с символом от a до m
     ls [!a-m] # все файлы кроме данных диапозонов
     
19. find . # поиск в текущем каталоге
    find . -name "In*" # . в текущей директории поиск по имени и все что начинается с In
    find . -name "[A-Z]*.*" # поиск в текущей директории по имени начиналось с любой заглавной буквы, * любое количество символов . * лубой формат.
    find . -size +5M #  в текущем каталоге поиск по объему все что больше 5 мб
    find . -size -5M # в текущем каталоге поиск по объему все что меньше 5 мб
    find . -type d #  в текущей папке по типу директория
    find . -atime +5 # то что имели доступ 5 дней назад
    find . -сtime +5 # change time 
20 cp gun.zip "Inside folder"/double.zip # берем в кавычки так в нашем название есть пробел Inside folder
21. ls | cpio -o > ../test.cpio # cделать список скопировать в архив o куда, > уточнение  на директорию выше / создать файлы cpio
22.find . -name "*.txt" | cpio -o > test2.cpio # найти в текущей папке все файлы по имени все с форматом txt и перенести их в архив cpio в документ test2.cpio
23.mkdir extract
24. cd extract
25. cpio -id < ../test2.cpio #  из папки выше взять архив и перенести его в текущую папку разархирированным
26.man dd
27. dd if=/dev/sdb of =drivee.img
28. ls -l
29. gzip drive.img
30. ls -l # drive.img.gz появиться
31. gunzip drive.img.gz разархивировать
32. bzip2 drive.img # появиться drive.img.bz2 сжал лучше чем выше
33. bunzip drive.img.bz2 # разархивировали
34. xz drive.img # сжимает drive.img.xz лучше gzip но не bzip
35. unxz drive.img.xz # разархивровали
36. tar cvf archive.tar folder# tar cvf create verbow file само название файла archive.tar, folder из чего создает
37. tar cvfz archive.tar.gz folder # тоже самое только z добавил поэтому gz на конце файла и получится архив archive.tar.gz он крошечный
38. tar xvf archive.tar #extract разархивируй verbow покажи процесс file файл archive.tar и в папку все распакует

 -----------------------------------------------------------------------------------------------------------------------------------------
LPIC 103.4 Использование потоков, конвейров и перенаправлений !!!
1.  wc file.txt 
 4 8 29 file.txt # 4 строки 8 слов 29 символов
2.  wc < file.txt  # wc передать ей данные взять данные и отправить команде 
    # вывод такой же 4 8 29 file.txt # 4 строки 8 слов 29 символов
3.ls > list.txt #появиться файл и будет перечень данных ls
  cat list.txt
  ls >> list.txt # если перейду в новую дирикторию и опять сделаю просто допишет и все  добавит файл новые данные а не перезапишит
4. ls bob > result.txt # ошибка нету данного файла
   cat result.txt  # пустой
   ls bob 2> result.txt # 2> отправить ошибку туда  и там прочитаем данную ошибку 1 по умолчанию
5. ls bob > result.txt 2> error.txt # выведи данные bob  в файл result.txt  но если ошибка то в error.txt
6. ls | grep r # ls просмотрит данные и передаст grep  отсортирует по r и все файлы с данной буквой r выведит
7. ls | tee otoput.txt # вывод на экрани или в файл
# tee - read from standard input and write to standard output and files
8. xargs
  find . -name "*.txt" # поиск в текущем каталоге  все с форматом txt
 find . -name "*.txt" | xargs rm -f # удаление несколько
# поиск в текущем каталоге  все с форматом txt передаст кучу строк xarg передаст эти строки  rm -f и все удалитьсяы
  xargs - build and execute command lines from standard input





=========================================================================
LPIC 103.5 Работа с процессами в Linux
1. sleep 1000 # linux спит 1000 секунд crtl + c прекратить
2. sleep 1000 & # процесс в фоновом режиме
3. jobs  # задачи показывает процессы
4. sleep 999 & #
5. fg 1 # первая команда запусти и вырубиться crtl + c
6. fg 2 # вторая команда запусти и вырубиться crtl + c
7. bg 1 # в background
8. ps # показывает snapshot процессов
9. ps aux # он не показывает в реальном времени а просто снимок
10. ps aux | grep sleep # поиск сразу процесса
11. kill 2538 # убивается по его id
12. killall sleep # убить все процессы sleep
13. ps aux | grep sleep
14. nohup sleep 1000 & # при выходе из терминала команда будет все равно выполняться
15.pstree # дерево процессов
16. pgrep sleep # просто id процессов
    pgrep sleep -l # просто id процессов  и имена процесов
    pgrep -u sam -l # все процессы пользователя
17.pkill sleep # убивает все sleep
18. top # > по оперативке, < по процессу сортировка
k потом вводи 12319 убьешь процессор по его id
15 # спросит какой сигнал 15 мягкий сигнал kill sigter,
9 # жестко грохнет на плевав на процессы которые зависят от него
16.uptime
load average: 1,42, 1,17, 1,24
скорость загрузки системы
17. free -h #оперативная память
swap # это временная память очень важна
18. screen # иметь несколько окон
ctrl A # можно в рабочем режиме когда загрузка
ctrl D # даже если выключу все будет работать
screen -r # увидеть загрузку
exit выйти из screeen
screen -S yandex ping ya.ru # yandex название скрина
ctrl A D 
screen -S rambler ping ro.ru # rambler название скрина
screen -ls # список задачь увидим
screen -r yandex # выскочу на окно yandex
===============================================================================================

LPIC 103.6 Приоритеты процессов в Linux
приоритеты процессов 
-20 # макс приоритет
+19 # минимальный приорите
Nice Renice
1.ps aux #all users exzicute все процессы юзеров задачи
2. ps alx # all list exzicute
 Ni # там смотри приритеты - 20 макс
3. ps -eo user,pid,pcpu,nice,comm# e everything o output что запущено  и перечисление пользователя, пид, процент процессора, nice приоритет, comm какая команда
4.sleep 5000 &
5. ps -eo user,pid,pcpu,nice,comm | grep sleep
# | передадим результат первой команды в grep и отсортируем
6. nice sleep 6000 & # & в background  дали приорите по умолчанию он 10 приоритет в два раза ниже чем у задачь которые запускаются сам по себе
7. ps -eo user,pid,pcpu,nice,comm | grep sleep
sam       9069  0.0   0 sleep
sam       9139  0.0  10 sleep # вывод
8.killall sleep
9.nice -n 19 sleep 6000 &# приоритет 19 дали минимальный приоритет
10.ps -eo user,pid,pcpu,nice,comm | grep sleep
sam       9069  0.0   0 sleep
sam       9139  0.0  10 sleep
sam       9203  0.0  19 sleep
11. nice -n -20 sleep 6000 &# приорите максимальный только рут может
12. killall sleep
13. nice -n 19 sleep 6000 & # дали приорите 19
14. ps -eo user,pid,pcpu,nice,comm | grep sleep
sam       9305  0.0  19 sleep
# посмотрели
15. sudo renice 5 -p 9305 # поменяли приоритет
16. ps -eo user,pid,pcpu,nice,comm | grep sleep
sam       9305  0.0   5 sleep
17. sudo renice 15 -u semaev # мы берем чувака который играет на серваке  понижаем его приоритет
18.top # стрелка вниз вверх сортируем по nice
===========================================================================
LPIC 103.7 Регулярные выражения в Linux
1. nano file.txt
look
take
cook
Book
wait
sleep
couple
taste
pleasure
date
bird
coc$

touch file2.txt
2. grep вывод линий который нас интересуют
grep, egrep, fgrep, rgrep - print lines matching a pattern
3. grep oo file.txt #в файле ищи два oo
look
cook
Book
4. grep -n oo file.txt # вывести все тоже самое только от номеруй
1:look
3:cook
4:Book
5.grep boo file.txt #  Book не увидит чувствителен к регистру
6.grep -i boo file.txt  # чтобы не был чуствителен к регистру часто!!!!
Book
7.ls | grep ile # находит файлы названия
file1.txt
file.txt
8. cat file.txt | grep look # ищет внутри файла
look
9. grep ple file.txt
couple
pleasure
10. grep ^ple file.txt  # ищем то что начинается с ple
pleasure
12. grep ple$ file.txt # поиск того что заканчивается на ple
couple
13. ^ начало строки $конец
14. grep .o file.txt # найти слово в котором после любой буквы идет буква o . точка любой символ перед o
look
cook
Book
couple
coc
15. grep .ple file.txt # . точка любой символ перед ple
couple # pleasure не сработает нету в начале символов
16. egrep '^(b|d)' file.txt # exrended grep 
начало и условие строки b или d поумней команда аналог grep -e
#grep обычные регулярные ввыржения egrep все регулярные выражения
date # вывод
bird
17.egrep '^[a-k]' file.txt # [] диапозон а - k
cook # вывод
couple
date
bird
coc$
18. egrep '^([a-k]|[A-K])' file.txt # () так как условия | или от a-k или  до A-K
cook
Book # будет искать и с большой буквой
couple
date
bird
coc$
19. fgrep # fast не понимает регулярные отношения
 grep c$ file.txt # все что заканчивается на с
 loc
 fgrep c$ file.txt # будет искать слов на c$
20.mkdit folder
   echo "Hello" > folder/great.txt # слово hello отправил в папку folder в файл great.txt 
    grep Hello * # по всем папкам в текущей директитори но ничего не найдет
выведит только каталоги но ничего не найдет
    rgrep Hello * #  найдет  так может искать рекурсивно не только по папка но и заглядывая в внутрь 
   folder/great.txt:Hello 
21. sed # stream editor
    sed -e 's/oo/aa/' file.txt # где оо заменит aa но файл останется без изменений
laak
take
caak
Baak
wait
sleep
couple
taste
pleasure
date
bird
coc$
22.  sed -e 's/oo/aa/' file.txt > newfile.txt # создаст новый файл вывода
23.sed -re 's/^(B|b)/C/' file.txt # re регулярные выражения  s substitute заменить
B большое или b маленькое на С 
cook
Cook
Cird














============================================================================================================================================
LPIC 103.8 Текстовый редактор Vi
1. man vi
2. vi file.txt создаем файл и открываем в vi
3. перемещение стрелки
   h j k l
4. b begin начало слова
   e end конец слова
   ( начало предложения конец ) предложения
   {}  абзац 
   shift + 6 ^ начало предложения # англ раскладка
   shift + 4 $ конец предложения
   ctrl + home # начало файла
   ctrl + end # конец файла  
5. i insert могу писать # наиболее частая
   esc выйти
   a редактирование файла   
I** ** (режим вставки перед текущим символом);
a** ** (режим вставки после текущего символа);
o** ** (вставить новую строчку);
**s ** (стереть символ и вставить).

6.b это командный режим
  yy # скопировал строку
  p # paste вставить
  yw # скопировать слово word
  p # вставляю
  dd # удалить строку
  yl # копируем символ l letter
  d # просто вырезать
  p # вставить
 7.d$ # стою в середине строки англ раскладка и с середины до конца
 8. d^  нахожусь середины удалит с начало до середины строки

9. Командный режим b
/ начать поиск ниже
? начать посик выше
N и n продолжить поиск выше ниже

:e отменить изменения  # помни : shift + 6 : только
:w записать изменения
:q выйти из файла

:q! или zq выйти не сохраняя
:wq! или zz выйти и сохранить     
-------------------------------------------------------------------------------------------------------------------------------
Конспект
103.8 Текстовый редактор Vi**.**

Студент должен уметь редактировать файлы в vi, и ориентироваться в нем.

Изучаем :

навигацию по документу с использованием vi;
использование основных режимов работы vi;
вставку, редактирование, удаление, копирование и поиск текста.
**Термины и утилиты: **

vi
/, ?
h,j,k,l
i, o, a
c, d, p, y, dd, yy
ZZ, :w!, :q!, :e!
Так как все основные настройки в Linux выполняются редактированием файлов, все журналы, устройства, демоны и т.д. тоже по сути являются файлами, то текстовый редактор является одним из важнейших инструментов управления ОС. Существует множество редакторов с различными возможностями, здесь же будет рассмотрен редактор Vi.

Vi имеет модальный интерфейс и одни и те же клавиши в разных режимах выполняют разные действия. По умолчанию работа начинается в командном режиме.

Для перемещения по документу используются следующие символы:

h или ← (перемещение на символ влево);
j или ↓ (перемещение на символ вниз);
k или ↑ (перемещение на символ вверх);
l или → (перемещение на символ вправо);
b** ** (перемещение в начало слова);
e** ** (перемещение в конец слова);
**( ** (перемещение в начало предложения);
**) ** (перемещение в конец предложения);
**{ ** (перемещение в начало абзаца);
**} ** (перемещение в конец абзаца);
**^ ** (перемещение в начало строки);
**$ ** (перемещение в конец строки);
1** G **** ** (перемещение в начало файла);
G** ** (перемещение в конец файла).
Для перехода в режим вставки можно воспользоваться следующими символами:

I** ** (режим вставки перед текущим символом);
a** ** (режим вставки после текущего символа);
o** ** (вставить новую строчку);
**s ** (стереть символ и вставить).
Для возврата в командный режим можно использовать клавишу Esc или сочетание Ctrl** + **C

Находясь в режиме редактирования можно использовать буфер обмена:

y _ (скопировать)__;_
d _ ( вырезать )__;_
c _ ( изменить )__;_
p _ (вставить)._
Также возможны комбинации с символами перемещения по тексту и обозначениями d (строка), w (слово) и l (символ); например

yw _ (скопировать слово);_

dd _ (вырезать строку);_

cl _ (изменить символ);_

d** $**_ (удалить с текущего места до конца строки);_

y** }**_ (скопировать с текущего места до конца абазца);_

Для поиска информации доступны символы:

**/ ** _ (искать ниже по тексту набор символов, указанных после «/»);_
**? ** _ (искать выше по тексту набор символов, указанных после «?»);_
n** ** _ (показать следующий результат поиска);_
N** ** _ (показать предыдущий результат поиска)._
Для завершения работы с файлом:

:e! _ (отменить все изменения, где «!» - игнорировать все предупреждения);_
:** w **! _ (записать изменения);_
**:q ** (выйти из файла);
Как всегда, возможны комбинации, например:

:** wq ****! newfile.txt ** (сохранить под именем newfile . txt и выйти);

Также доступны сокращенные команды:

**ZZ ** (сохранить и выйти)__;
ZQ** ** (не сохранять и выйти);
---------------------------------------------------------------------------------------------------------
LPIC 104.1 Создание и форматирование разделов жестких дисков в Linux
1. fdisk -l
2. fdisk /dev/sdb # указываем с каким устрой
3.swapon /dev/sdb2 # включение раздел подкачки
  swapon -s # смотрю раздел подкачки
4.mkfs #make file system
mkfs -t ext2 /dev/sdb1 # t тип файловой системы 
отформатируй под ext4 устройство sdb1
mkfs -t ext3 /dev/sdb1 # журнлаируемый  ext3 легче востановить
mkfs -t xfs /dev/sdb1  # не сработает
5.apt-cache xfs # xfsprogs
6.apt-get install xfsprogs
7. mkfs -t xfs -f /dev/sdb1 # принудительно
8. mkfs -t reiserfs /dev/sdb1
    apt-cache search reiserfs # reiserfsprogs набор утилит
9.mkfs -t btrfs /dev/sdb1
apt-cache btrfs # btrfstools
10. mkfs -t btrfs -f /dev/sdb1
11. gdisk /dev/sdb

12. parted # самая лучшая утилит
   parted -l
   parted dev/sdb # help
q выйти
13. apt-get install gparted
==================================================================================================================

LPIC 104.2 Проверка файловой системы
1. df -h
2. ls /mnt/hard/ 
3. айноды метка файла
df -i # достпные и занятые inode 
1 % процент жесткого диска
disk free
4. du # disk usage что занимает
   du -h
5. du -h /home/sam/* # взвесь мне эту папку
mkdir test
mkdir test/second # в папке создай папку
du -h / # покажи мне корень

6.du -h --summarize /home/sam/* # нелезет глубоко в папки один уровень вложения
ls -l размер файлов и папок в текщем каталоге
ls -i номера inode
7. fsck # check and repair linux filesystem
8. fsck /dev/sdb1 # монтирована уже поэтому ничего не может сделать только после перезагрузки
9. e2fsck # check ext2/ext3/ext4 filesystem
10. fsck -t ext4 /dev/sdb1 # проверь тип ext4 
    umount /mnt/hard # отмонтировал отключил
11. mkfs -t xfs -f /dev/sdb1 # отформатируй файловую систему xfs
12.  fsck /dev/sdb1 # проверяем xfs файловую систему
13. xfs_check /dev/sdb1 # если ничего то норм молчаливый
    xfs_repair /dev/sdb1 # ремонтирует
14. mount /dev/sdb1 /mnt/hard # смонтируй устройство sdb1 в mnt hard
15.xfs_info /dev/sdb1 # инофрмация
   xfs_metadump /dev/sdb1 dump.db
16. cd /mnt/hard
17. debugfs -w /dev/sdb1 # ext2/ext3/ext4 file system debugger w какой файл именно
Specifies that the file system should be opened  in  read-write  mode.
18. help
19. rm test.txt
20. Eсли файловая система журналируемая то можно востановить
ecли пропали файлы то нужно выключить компа вынуть жесткий диск и тогда можно востановить что бы ничего не перезаписалось
21. 
    debugfs
    lsdel # покажи удаленные файлы
    undel <12> test.txt # востанови
22. dumpe2fs #  dump ext2/ext3/ext4 filesystem information
23.  dumpe2fs /dev/sdb1
      dumpe2fs /dev/sdb1 > output.txt
24.  less output.txt
      umount /dev/sdb1 # чтобы сделать отмонтировать надо
      mke2fs -t ext2 /dev/sdb1
dumpe2fs /dev/sdb1 | grep features
# отсортируем данные
25. tune2fs # настроить файловую систему
ext файловую систему ее опции
tune2fs -O has_journal /dev/sdb1 
# файловая система станет  журнальной
26. tune2fs -O ^has_journal /dev/sdb1 # ^удаление журнала

Итого
debugfs интсрумент отладки файловой системы
tune2fs инструмент настройки параметров файловой системы
dumpe2fs вывод информации о файловой системе
===============================================================================================================================================
LPIC 104.3 Монтирование и демонтирование файловых систем
 mount подключить устройство точка_монтирования
 umount подключить устройство или точка монтиирования
1.ls -l /dev/sdb1 # диск некий
  media # сменные носитель
  mnt  #место где монтируем устройства
2. rm -rf /mnt/hard
3. mkdir /mnt/hard_drive # создали папку точку монтирования
4.  sudo mount /dev/sdb1 /mnt/hard_drive
# монтирую устройство /dev/sdb1 в папку /mnt/hard_drive
5. cd /mnt/hard_drive # смотрю что в новое в  нашем устройстве
6. mount # покажет что куда смонтирована
/dev/sdb1 on /mnt/hard_drive
7.sudo umount /dev/sdb1 # отмонтируем
  sudo umount /mnt/hard_drive  # тоже самое
  ls /mnt/hard_drive # пусто
umount /mnt/hard_drive 
8. cat /etc/fstab # настройки автоматичекого монтирования
sudo vi /etc/fstab
/dev/sdb1 	/mnt/hard_drive auto  rw,user,auto	0	2

# tab между ними auto файловая система tab rw(read write),user,auto(автоматически подключать при зашрузке),noexec (никто другой там не может что-то делать) tab 0 сбрасывать инфу не надо при отключении питании tab тип проверки 2
9.  mount mnt/hard_drive/ # пишим так как выше уже прописали
    sudo mount /dev/sdb1 /mnt/hard_drive # так писать не надо так уже писали

10. blkid # block id смотрю устройства
sudo blkid /dev/sdb1 # cмотрю id устройства
11. cat /etc/fstab  # и тут лучше указывать id
12. ubuntu server
     cat /etc/fstab
 media # cdrom
ls /media/cdrom
mount /media/cdrom
blkid #/dev/sr0 iso9660 # узнал название
sudo mount /dev/sr0 /media/cdrom
# монтирую  /dev/sr0(взял с blkid ) в media/cdrom
13. vi /etc/fstab
/dev/sr0	/media/cdrom	udf,cdfs,iso9660	user,noauto,exec,ro
0	0
#tab везде user монтирует noauto не автоматически при включении exec исполнение возможно есть что установить r0 read only
нам ничего не сохранять не надо
14. sudo umount /dev/sr0  # демонтирую
    mount /dev/sr0 # примонтирую просто так прописывая так место монтирования уже указано для данного устройства /media/cdrom
15. umount /media/cdrom # отмонтировали без прав доступа
16. fdisl -l # смотрим съемные устройства
если флех в серевере прежде чем достать ее
umount
eject
============================================
LPIC 104.4 Управление квотами дисков
ставими ограничения
1. sudo fdisk -l
   mkdir /mnt/hard
  sudo apt-get install quota]
2.sudo vi /etc/fstab
/dev/sdb1	/mnt/hard	auto	rw,user,auto,usrquota,grpquota 0 	0

# /dev/sdb1 устройство монтирую  в /mnt/hard
rw на автомате читать записывать, пользователь может монтировать user, auto при включении , usrquota,grpquota пользовательская и групповая
3. mount /dev/sdb1 #пользователь монтирует
4. sudo qutaoff /mnt/hard # отключили их и указали где отключить
5. sudo quotacheck -cug /mnt/hard
ls /mnt/hard # появятся файлы
sudo edquota -u semaev #
soft 10 квота мягкая неделя потерпит более 10 и давай до свидания
hard 30 # сразу же накажет
inode сколько создал файлов и папок

sudo edquota -t #
sudo quotaon /mnt/hard/
touch  /mnt/hard/file.txt
sudo chown semaev:root /mnt/hard # semaev суперпользователь данной папки
touch  /mnt/hard/file.txt
6. sudo edquota -u semaev # вижу что использую 4 блока

7. vi /mnt/hard/file.txt
hello
sudo edquota -u semaev
block занял 8 блоков
cp file.txt 1.txt и так покак не дойду до жесткой квоты

8. sudo repquota /mnt/hard # report quota отчет по квотам по данной папке hard
9. warnquota # send mail to users over quota
предупреждение будет высылать по почте
==========================================================
LPIC 104.5 часть первая: владельцы файлов и папок
1. chown
   chgrp
   chmod
ugo файлы и папки
2. grep home /etc/passwd | cut -d: -f1
смотрю пользователей
3.id sam
4. sudo chown adnrey file.txt # владелец андрей
   sudo chgrp testers file.txt # переменил на группу тестеров file.txt
    sudo chown :testers file.txt # поменял на группу testers аналог команды выше 
   sudo chown :semaev file.txt # поменял на группу там группа semaev !!!!!!!
    sudo chown semaev:testers file.txt # владелец стал semaev группа testers тоже владельцы
    sudo chown -R semaev Folder # владелец папки и всех файлов стал semaev
================================================================================================

LPIC 104.5 часть вторая: права доступа к файлам и папкам
число  Разрешение символ
0  нет прав  ---
1  execute    --x
2  write      -w-
3   write, execute  -wx
4   read            r--
5   read execute    r-x
6   read write      rw
7   Read,write,execute  rwx
execute = 1 write = 2  read = 4 

Запись 
Чтение
Выполнение #программа скрипт запуск

1. chmod 750 script  Полные права владельцу, чтение и выполнение группе, ничего остальным
2. rwxrw-r-- script # полные права владельцу чтение и запись группе чтение остальным
3. chmod u+w script # дать право записи владельцу
4. chmod ugo-x script # отобрать у всех право на выполнения файла
5. Владелец только один,  группу можем вогнать кого угодно, в другие тоже

1. sudo chmod ugo-x file # забрали у всех x
2. sudo chmod u+x file.txt # вернули юзер
3. sudo chmod 640 file.txt # rw--r --
4. sudo chmod 777 file.txt # rwxrwxrwx
5.  ls Folder/ # внутрь папки посмотрю
     tocuh Folder/file.txt
6. ls Folder/
  rw rw r  file.txt 
7. sudo chmod u-x Folder # папка
# права на запуск нету теперь не могу зайти и не могу и открыть данную папку
8. chmod 764 Folder # rwx -rw -r юзер группа другие
==================================================
LPIC 104.5 часть третья: маска создания файлов и папок
umask маска создания файлов и папок
umask 022 означате что 777-022=755 (rwxr xr x)
umask 754 777 -754 = 023 -- w -- wx
1. touch test.txt
   rw-rw -r  sam sam 0 # пользователь автоматом группу создает sam 0 группы
2. mkdir Folder
drwxrwxr-x 
3. grep UMASK /etc/login.defs
pam_umask # модуль создания файлов и папок
UMASK		022 # по умолчанию
777-022=755# на все по умолчанию

1. umask 075 # 777 -075 =702
touch file2.txt
rw- --- --w

принцип вычитания максимальных прав 777 для папкм 

666 для файла без x
1. umask 075 # 777 -075 =702
touch file2.txt
rw- --- --w # поэтому так












============================================================================================
LPIC 104.5 часть четвертая: suid, sgid и sticky биты
suid для файлов
sgid для файлов и папок
sticky для папок

suid 4
sgid 2
sticky 1

4755 установлен suid бит 4
6750 устанволен suid бит sgid бит 4+2
3764 установлен sticky бит sgid бит 1

chmod u+s script (установка suid)
chmod g+s script  (установка sgid)

chmod o+t script (установка sticky)

1. sudo chmod 770 script.run # владелец и группа владельцев
2. sudo chmod u+s script.run 
# user право suid запуск от имени другого пользователя!!!!
rws rwx # кто бы не запускал булет от имени андрея конкретного пользователя
stat script.run 
 sudo chmod u-x script.run 
3. sudo chmod g+s script.run 
sudo chmod g-s script.run
4. sudo chmod ug+s script.run # юзер и группы
   sudo chmod 0755 script.run # убрал команду выше
5. touch file.txt
6. sudo chmod g+s Folder/
   sudo touch Folder/text.txt
7. mkdir Folder
   chmod 777 folder
   touch Folder/file.txt
   chmod 666 Folder.file.txt
   rw rw rw
8. su -l andrey
   whoami
   andrey
  chmod o+t Folder/ # папка внутри могу хозяиничать только я другие никто ничего делать не могут
9. chmod u+s script.run
   chmod ug+s script.run
   chmod o+t Folder/       

===================================================================================================
LPIC 104.6 Мягкие и жесткие ссылки
мягкие жесткие ссылки
мягкая весит мало
жесткая столько же сколько и оригинал
айнод мягкой отличается от оригинала
жесткой нет одинаковы

1 ls -li # i айнод метка файла номер своего рода где он находится
ln -s file.txt softlink.txt #мягкая ссылка 
ln file.txt hardlink.txt #жесткая ссылка ln # link
5375203 -rw-r--r-- 2 sam sam 0 окт 14 12:47 file.txt
5375203 -rw-r--r-- 2 sam sam 0 окт 14 12:47 hardlink.txt
5374005 lrwxrwxrwx 1 sam sam 8 окт 14 14:05 softlink.txt -> file.txt # l link ссылка
2. echo Hello >> file.txt # вторая строка дописать текст 
softlink.txt # оба изменяться файла
hardlink.txt
3. mv file.txt newfile.txt
-rw-r--r-- 2 sam sam 0 окт 14 12:47 hardlink.txt
-rw-r--r-- 2 sam sam 0 окт 14 12:47 newfile.txt
lrwxrwxrwx 1 sam sam 8 окт 14 14:05 softlink.txt -> file.txt # станет красным
# мягкая  станет красной так как чувствительна к изменению наименования нет файла покажет
# жесткой ссылке все равно

жесткие ссылки на каталоги создавать нельзя
мягкие ссылки можно на каталоги можно


ls
file.txt Folder
4.ln -s file.txt Folder/ # прошу создать мягкую ссылку внутри папки 
будет битая ссылка так в папке пусто
rm -rf Folder/file.txt
5. ln -s /home/sam/file.txt Folder/ # нужно четко указывать путь файла и папку куда его ложить
ссылка будет работать она не битая
6.cp newfile.txt copy.txt
  ln newfile.txt hard.txt
ls -li # как понять где ссылка а где файл
5374248 -rw-r--r-- 1 sam sam 0 окт 14 14:23 copy.txt
5375203 -rw-r--r-- 2 sam sam 0 окт 14 12:47 hardlink.txt
5375203 -rw-r--r-- 2 sam sam 0 окт 14 12:47 newfile.txt
5374005 lrwxrwxrwx 1 sam sam 8 окт 14 14:05 softlink.txt -> file.txt
айнод будет такой же как в жесткой и в оригинале
5375203, 2 два файла ссылят в фаловой системе
7. rm newfile.txt # удалили оригинал
жесткая ссылка будет работать так это своего рода путь на место диска поэтому айноды одинаковые
мягкая ссылка сломается
  
  Итого мягкая ориентируется на название
жесткая ориентируется на айнод файла метка своего рода файла в файловой системе
жесткая на папку не делается  и в  разных файловых системах не работает 

------------------------------------
1)touch file.txt
2)ln file.txt hard.txt # жесткая ссылка
3)ln -s file.txt soft.txt #s symvolic мягкая ссылка
4) Жесткие ссылки нельзя перекидывать на другой жесткий диск
5)на катологи ссылки жесткие нельзя
но мягкие ссылки на папку можно
6) mkdir folder
   ln -s file.txt Folder/ # создаем внутри папки
   но ссылка битая будет так как в папке ничего нету
   rm Folder/file.txt
   ln -s /home/sam file.txt Folder/ # теперь ссылка сработает так полный путь указали
7) сp file.txt  copy.txt # копия файла
   ln file.txt hard.txt # жесткая ссылка
   ls -li #inod первая колонка если номер один это ссылка если
нет то разные файлы 408502 409501
==================================================
LPIC 104.7 Поиск и расположение команд и файлов в Linux
/ bin  - базовые двоичные файлы команд все команды тут;
/ boot  - файлы загрузчика ядро linux;
/dev - устройства;
/ etc  - конфигурация ПК;
/ home- домашние папки;
/ lib - библиотеки и модули ядра;
/ proc - информация о работающей системе;
/ media  - монтирование носителей cъемные носители;
/ mnt - монтирование носителей монтирование файловых носителей;
/ opt - дополнительное ПО;
/root - домашняя папка админа;
/ sbin - основные программы настройки системы;
/srv - данные для системных служб;
/ tmp - временные файлы;
/ usr - бинарники файлы пользователей игры проги юзера;
/var - переменные.

grep поиск по содержимому
find поиск по свойствам файла
locate быстрый поиск файла
which поиск команды
type вывод точной команды
whereis поиск комады исходники мануалы

1. find / -name mail  # / поиск в корне везде, name по имени mail все что содержит
в реальном времени долго
2. locate mail # быстро все что включает mail

3. find / -user sam # все что относится user к юзеру sam
 sudo find / -user sam # все нашел
locate sam # во временных файлах не ищет
cat /etc/updatedb.conf # конфиг locate
4.sudo touch kirill.txt
  locate kirill.txt # не найдет раз в день запускает find и создает базу данных поэтому так быстро ищет но не достаток что раз в день
  sudo updatedb # обновить db базу данных locate   
  locate kirill.txt # сразу найдет
  find kirill.txt # найдет сразу же
5. which ls
/bin/ls # покажет где находится команда
6.type ls
ls — это псевдонимом для «ls --color=auto»
/bin/ls ls --color=auto # получается вот так запускается команда когда пишем ls
7. whereis ls # аналог which но дает еще доп инфу
ls: /bin/ls /usr/share/man/man1/ls.1.gz # где находится и в каком пакете находятся

Итого
Find медленный поиск в реальном времени
locate быстрый поиск но опирается на базу данных

====================================================
LPIC 110.3 часть первая. Введение в SSH  
private key # частный
public key # публичный
finger print # первый раз ничего не дает ты ему просто доверяшь а вот если второй раз кто то подключит свой ноутбук к кабелю то fingerprint нам покажет
1. ssh sammy@192.168.0.103
2. exit
3.  cd /home/sam
    ll
    cd .ssh
4. cat known_hosts # там ключи
5. sudo vi /etc/ssh/ssh_known_host #!!!!! на уровне системы вставляю туда ключь  который есть known_hosts c cd /home/sam и все на уровне системы у нас есть known_hosts
6. ssh sammy@192.168.0.103 # будет уже сразу просить пароль так система знает уже

LPIC 110.3 часть вторая. Ключи и парольные фразы в SSH
RSA Rivest Shamir Adleman для подписи и шифрования
DSA DIGITAL SIGNATURE ALgoritm только подписи
1.ssh sammy@192.168.0.103
2. ssh-keygen -t rsa # RSA
3. /home/sam/.ssh/id_rsa # покажет где создается
4. парольная фраза дополнительный рубеж зашиты просто enter
5.  в cd /home/sam .ssh
id_rsa  id_rsa.pub # создается публичный ключь и частный 
6. ssh-keygen -t dsa
7. ls .ssh
 id_dsa  id_dsa.pub  id_rsa  id_rsa.pub  known_hosts # публssичный ключь лучше передать
8.ssh-copy-id -i .ssh/id_rsa.pub admin@10.0.1.6 # copy-id что именно копировать -i  .ssh/id_rsa.pub конкретный путь ключа оптравил публичный ключь
  ssh-copy-id -i .ssh/id_rsa.pub sammy@192.168.0.102
  cat .ssh/id_rsa.pub # смотрю ключь
9.ssh admin@10.0.1.6
cat .ssh/authorized_keys # такой же ключь как и в  локальном компе cat .ssh/id_rsa.pub
тоже самое dsa
10. ssh-agent bash # новая консоль
11. ssh-add .ssh/id_rsa # фраза
12. текушая сессия будет помнить парольную фразу
13. udo ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key
 пароль введи
14. ls /etc/ssh
создадуться на уровне host а не пользователя

-----------------------------------------------------------------------------------------------------------------------------------------------
Пример jenkins
1.ssh-keygen # генерирум ssh
enter
enter # парольная фраза не нужна
enter
2.  cat .ssh/id_rsa.pub # смотрю ssh сгенерированный ключь

 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDB2uJjmYRKdFu9mVQ1AcycFoBI2t+jlb3BtnRfd+3DIdYYo2AncDEmbmZ30uu9465CjkDhSojdw+FLv5/SZrj5PlaNvUs34UoyDfTnDrwIzMxCy/aEvDvGRYJvEiOz4WN8Z6EZ2/y2oMaqMICjKDG6VAQ4bctDL7rOQrqx530TF+Ms/aqX/Kn6CQCE6kJ+yEUnIOorXSkJiXWe8dZcUNyFYQP6Rv73grjhUbm0MmxDs/8nze3Rs1Sk1M3b49tgFPeDC2fD/iI5yM9XB9HemcK8AAWD7uJyf+12eL1YoM886BV4m1CGI4uwRC5Sl+PZFpJpv4NRHsK90IdmNdjenb4z jenkins@ubuntu
# копируй
3. захожу на другой сервер
ssh vasya@192.168.0.102
sudo -i # jenkins получит права рут
vim .ssh/authorized_keys # захожу вставляю ssh ключь сохраняю shift + 6
----------------------------------------------------------------------------------------------------------------------------------------------

LPIC 110.3 часть третья. Туннелирование сессий и портов
1.ssh 10.0.1.16 # проверяю подключаюсь
ssh -X 10.0.1.16
2. nautilus # запускаю приложение на удаленном компе
   firefox # удаленные окна открываю
3. выхожу в свой учетку создаю
   touch text.txt 
   scp text.txt vasya@10.0.1.16:/home/sam # копирую файл по scp на удаленный комп
  пароль введи скорее всего учетки удаленки
4.ping ya.ru
87.250.250.242 

ssh 10.0.1.16 -N -L 12345:87.250.250.242:80   # vasya@192.168.0.102 аналог  тонель через сервер отдельный 10.0.1.16 , N ничего не делай L локальный порт 12345 пробрось до yandex сервер 87.250.250.242 его ip по порту 80 #несколько портов через пробел указывая
в браузере localhost:12345 ya.ru загрузиться
в обшем чужой сервер пробрасывает на по порту 12345 черз порт 80 ya.ru

-----------------------------------------------------------------------------------------------------------------------------------------
LPIC 110.3 часть четвертая. Шифрование файлов
1. gpg --gen-key # генерируем ключь
имя 
почта
пароль
2. ls .gnupg # скрытая папка
gpg --list-key # смортрю ключи
pub   rsa3072 2019-10-01 [SC] [годен до: 2021-09-30]
      6BB75D80A5200C8584B83B053BA4B6886AA220E7
uid         [  абсолютно ] siamiom <sam.rybtsov@gmail.com>
sub   rsa3072 2019-10-01 [E] [годен до: 2021-09-30]
3. gpg --export semaevkey > gpg.public # экспортирую в файл
   scp gpg.public admin@10.0.1.6:/home/admin # переслал ключ на удаленный сервер
4.  ssh admin@10.0.1.6 # подключаюсь к серверу
  там нахожу gpg.public
  gpg --list-key # первый раз создаст все в ручную
  gpg --list-key # повторный раз открываю
  gpg --import gpg.public # импортирую
  gpg --list-key # опять смотрю и вижу что появился
pub   rsa3072 2019-10-01 [SC] [годен до: 2021-09-30]
      6BB75D80A5200C8584B83B053BA4B6886AA220E7
uid         [  абсолютно ] siamiom <sam.rybtsov@gmail.com>
sub   rsa3072 2019-10-01 [E] [годен до: 2021-09-30]
5. vi file.txt 
This is our last lesson!
save
6. gpg --out secret.file --recipient 'siamiom' - encrypt file.txt # out какой файл на выходе secret.file recipient получатель смотри выше создатель ключа 'siamion' поэтому полю ищет ключи encrypt зашифровать конкретный файл file.txt
yes

7. итого file.txt gpg.public secret.file #
secret.file # только создатель  может его разшифвровать поэтому выхужу из сервера иду обратно на свой компутер
8.scp admin@10.0.1.6:/home/admin/secret.file /home/sam  #здесь качаю с удаленного        сервера себе на комп все тоже самое только задом на перед
9. cat secret.file # вижу что закодирован
10. gpg --out some.file --decrypt secret.file #out на выходе some.file  decrypt разшифровать конкретный файл secret.file
пароль который был при создании ключей
11. cat some.file # и вижу что это тот же файл на удаленном сервере
This is our last lesson!

ИТОГО
  scp text.txt vasya@10.0.1.16:/home/sam # копирую файл по scp на удаленный комп
  пароль введи скорее всего учетки удаленки
  scp admin@10.0.1.6:/home/admin/secret.file /home/sam # здесь качаю с удаленного        сервера себе на комп все тоже самое только задом на перед
gpg --out secret.file --recipient 'siamiom' - encrypt file.txt # out какой файл на выходе secret.file recipient получатель смотри выше создатель ключа 'siamion' поэтому полю ищет ключи encrypt зашифровать конкретный файл file.txt

gpg --out some.file --decrypt secret.file #out на выходе some.file  decrypt разшифровать конкретный файл secret.file
--------------------------------------------------------------------------------------------------------------------------------------









     
    































--------------------------------------------------------------------------------------------------------------------
105.3 Создание БД MySQL
Mysql реализация от Oracle
1.sudo apt-get install mysql-server
2. mysql -u root -p зайти u user p password
3. sudo mysql -u root # без пароля
4.  CREATE DATABASE cars; # создали
5. USE cars; # актвировали
6. CREATE TABLE new (brand VARCHAR(10), model VARCHAR(10), year YEAR, price INT);
7. CREATE TABLE used (brand VARCHAR(10), model VARCHAR(10), year YEAR, price INT);
8.
SHOW TABLES; # ПОСМОТРЕТЬ ТАБЛИЦЫ
9.DESCRIBE new; # даст описание табл с команды выше
10.exit выйти с mysql или ctrl + Z на background

LPIC 105.3 часть вторая: Заполнение БД MySQL
11.nano new.txt
KIA     CERATO  2014    780000
KIA     RIO     2015    530000
FORD    FOCUS   2015    620000

nano used.txt
KIA	CERANO	2011	460000
HYUNDAI	Solaris	2012	490000
LADA	Granta	2013	180000
12. sudo mysql --local-infile=1 -u root # infile input file 1 yes разрешить u user просто без пароля
запуск режима импрота данных
13.USE cars; # переключились на базу данных с машинами
14.LOAD DATA LOCAL INFILE "new.txt" INTO TABLE new;
# главное чтобы mysql была запущена с папки или места где эти файлы лежат, то есть вставляем данные
15.LOAD DATA LOCAL INFILE "used.txt" INTO TABLE used;
# тоже самое только для старых машин
16. SELECT * FROM new; # смотрим таблицу новых машин
17. SELECT * FROM used; # старые машины
18. INSERT INTO new (brand, model, year) VALUES ('Daewoo', 'Nexia', '2015'); # можно вводить в любой последовательности год и модель значения в кавычках
19. INSERT INTO new (brand, model, year) VALUES ('Daewoo', 'Matiz', '2014');
20.DELETE FROM new WHERE model="Matiz"; # удаляю по любому ключу указанному в таблице выше
21.SELECT * FROM new; # смотрю что удалена строка вся

LPIC 105.3 часть третья: Получение информации из БД MySQL
22.mysql cars -u root # подключаюсь к базе даных
23. SHOW TABLES; # смотрю таблицы какие есть
24.SELECT * FROM new; # смотрю таблицу 
25. SELECT model FROM new; # вытягиваю модели ячейку модель
26. SELECT * FROM new WHERE brand="KIA"; # достанет всю инфу по KIA со всей моделью
27.SELECT * FROM new WHERE brand="KIA" AND year="2015";
# выбрать и по модели и погоду
28.SELECT model FROM new WHERE brand="KIA" AND year="2015"; # выдаст модель этого года
29. SELECT * FROM new;
30. UPDATE new SET model='KUGA' WHERE model='FOCUS'; # new таблица
31. SELECT * FROM new; #смотрю все поменино
32. SELECT * FROM new JOIN used
33. SELECT * FROM new JOIN used ON new.brand = used.brand;
# объединить on где у таблицы new, графа brand совпадает с таблицей used графа brand, будут склеены как бы две таблицы,  но путь к значению можно писать полный cars.new.brand # cars база данных
34. SELECT * FROM new;
35. SELECT * FROM new ORDER BY brand; # в алфавитном порядке по brand;
36.SELECT * FROM new GROUP BY brand; # объединит все KIA в одну колонку;

-------------------------------------------------------------------------------------------------------------------------------

LPIC 108.3 Почтовые агенты (MTA)
1.sudo apt-get install postfix
2. sudo apt-get install mailutils
3. sudo vi etc/aliases
   kiril:semaev
   sudo newaliases # новые псевдонимы
4. cd /var/mail/
   mail kirirl
   cc: # copy
   subject: Test #1
   122112112
   12121212
ctl + D # с новой строки почта создана
5. mail 
   1 # смотрю сообщений
   d # удалить
   q # выйти
6. stat /etc/aliases
7. vi .forward # создал файл
    root
8. sudo mail # смотрю почту
9. mailq # очередь сообщений

http://artemfedorov.ru/etc/mysql/field-types/

-------------------------------------------------------
LPIC 109.1 часть первая. IPv4 адреса и маски подсетей
192.168.0.101
4 числа
двоичные значения
десятичные значения

маска подсети
255.255.255.0.24 

192.168.0.101 255.255.255.0

192.168.0.102 255.255.0.0
находятся в разных сетях
LPIC 109.1 часть вторая. Классовая адрессация
ip4 ip6
4 кластера
255.255.255.255.0 # 0 адрес компа 
ip - протокол
192.168.0.15/24 15 host

vlsm сначало делим сети на подсети можем бить
cidr можно объединить подсети в сети

LPIC 109.1 часть пятая. Сетевые порты и службы
сокет программные дырки имеют номера это порты
натуральное число
0-1023 общеищвестные порты рут система
1024-49151 зарегистрированыне порты пользователи
49152-65535 динамеческие порты
Порты надо менять так как автоматизированных программ бьющих по портам.

порт дырка програмная
20 ftp данные file transport protocol
21 ftp авторизация
22 ssh управление  secure shell удаленно управлять linux
23 telnet подключение но реже не шифрует данные
25 smtp
53 DNS имена ip имена в доменные названия
80 http веб страницы
110 POP3 получение почты
123 NTP время network time protocol
139 NetBios
143 IMAP синхронизация почты
161 snmp управление
162 snmptrap отправка сигнала
389 ldap служба каталогов

less /etc/services # все порты можно посмотреть
на разных портах разные проги работают типо аська

--------------------------------------------------------------------------------------------------------------------------------------


LPIC 109.1 часть шестая. Протокол ipv6
ipv6 8 блоков по 16 bit      
unicast адрес конкретного интерфейса
anycast адрес группы интерфейсов
multicast адрес группы интерфейсов

-----------------------------------------------------------------------------------------------------------------------------

LPIC 109.1 часть четвертая. Стек TCP/IP
tcp ip стек протоколов
ip internet protocol передача данных без гарантированной доставки
tcp надежная передача данных
udp протокол передающий данные без создания специальной среды
icmp протокол используемый для отправки сообщений


DNS+DHCP. Часть первая - настройка сети.
файл hots  инфа о ip адресах
------------------------------------------------------------------------------------------















-----------------------------------------------------------------------------------------------------------------------
Собеседование linux
1.как проверить сколько памяти осталось
df -h
df -h /dev/sda4 # память конкретного драйва
2.Разрешения как забрать как дать
u user g grope o other a all
r read w write  x exzicute запускать
 1.touch file
 2.ls -la file
 3.chmod +wrx file # дал юзеру права
 4. chmod -wrx file # забрал все даже удалить не смогу
3. Сколько процессов и сколько занимают памяти
   ps aux
   htop # смотри pid
   kill ...  # убиваю процесс
   vmstat # по памяти
   top # тоже процессы посмотреть смотри проценты
   ps aux | grep gnome # конкретный процессор но лучше через htop
   cat proc/meminfo # все про память
4. Проверить hard drive или папака
   du -sh # сколько занимается по всей системе
   du -sh Desktop/ # смотрим размер папки конкретной
5. Кучу команд одной строкой
   ls ; cd ~; ls ; cd Desktop ;ls -la
   cd Desktop ; ls -la # одна строка
6. man ls # где искать
7. как mount делать?
 1.cd dev # девайсы 
 2.ls # смотрю девайсы
 3. mount # просто смотрю что можно подъсоединить
 4. sudo 
mount /dev/sda4 /home/sam/test # монтирую sda4 в папку tes
8. посмотреть какой сервис какой ip
   sudo netstat tulpn # увижу ip но есть tulpin она другая немного
10. Какой kernel, какое ядро
    uname -a
11. как узнать свой ip
   ifconfig
   ip addr
   ip addr show

12 найти файл все с расирением с и с конкретным словом
   find ./ -name ".c" | xargs grep -i "apple"            #./ ищем по всему компу ".c" расширение, xargs все аргументы яблоки
  найти все файлы в папке текущей с окончанием sh
ls * .sh
ls -al * .sh # вся инфа про них

------------------------------------------------------------------------------------------------------------------
Пример поиска проблем сервера Linux №1
%Cpu(s): 18,7 u
1.ps -uf| grep 1477 # ишу конкретный процесс по pid
покажет родительский 1476 и можно увидеть его
htop можно смотреть по дереву процессов
2.  
%Cpu(s): 12,4 us,  5,2 sy,  0,7 ni, 81,7 id,  0,0 wa,  0,0 hi,  0,0 si,  0,0 st
wa Ожидание
ps -uf| grep 1507
locate pg_log # ищем данный файл
lsof -p 1507 # посмотри
top - pid - ps - logs # если проблема log
                 lsof

3. iperf3 -c 192.168.42.100
   нету связи
   ping 192.168.42.100
   iptables -L # смотрю порты
   telnet 192.168.42.100 5201 #не работает
проблема сервера

netstat -ntulp # вывод всех iperf порт 5202
telnet 192.168.42.100 5202 # вижу что соединение есть
iperf3 -c 192.168.42.100 -p 5202 # все работает
ping - iptables - telnet - netstat -log

LPIC 200.2 Прогнозирование потребления ресурсов
ZABBIX
:color desert # классный цвет файла
что измеряем и как часто
какие пороги значений критичны
какое поведение значений критично
как получаем оповещения

отслеживает изменений когда у нас  закончится жесткий диск
срабатывание тригеров когда нам надо реагировать
забивается оперативка

1. yum install epel-release
2. yum install collectd
3. vim /etc/collected.conf
:color desert
4. loauding cpu разкоментирован 
   внизу что именно собирать loauding cpu
5./ notify email
plugin rrdtool # полностью разкоментировать
/ rrdtool LoadPlugin rrdootl # разкоментировать
yum install rrdtop1 htppd collectd-web
6.systemctl start collectd
systemctl status collectd
systemctl status htppd
systemctl start htppd # стартанули apache
7. curl http://127.0.0.1 # смотрю страничку
   vim /etc/httpd/conf/httpd.conf # настройки apache в centos
  ls /etc/httpd/conf/httpd/conf.d # смотрим тоже настройки
  vim  /etc/httpd/conf/httpd/conf.d/coollected.conf
смотри bin
  ls /usr/share/collected/collection3/
  curl http://127.0.0.1/collectd/bin/index.cgi
  ifconfig потом в браузере введи его 192.168.0.104
8. vim /etc/httpd/conf/httpd.conf 
  # Require local #закоментировать
    Required all granted # откоментировать
    systemctl reload htppd # перезагружаем
 http://127.0.0.1/collectd/bin/index.cgi зайди в браузере

yum search collectd


=======================================================================
new!!!
LPIC 108.2 часть первая. Журналирование событий: syslog

Источник Приоритет     Назначение
auth      emergency    файл
cron      alert        консоль
kernel    critical      конвейр
mail      error         удаленная система
user      warning      группа пользователей
daemons    notice       и т.д.
и т.д.     info
            debug

1. vi etc/syslog.conf
# показывает что куда сохраняет и выводит

service syslog restart # перезагрузка после настройка файла лучше

2.looger -p user.warn Please Help # СОздал событие  и отправил на локальный сервер
===================================
LPIC 108.2 часть вторая. Журналирование событий: logrotate

1. klogd 
apt-cache search klogd # уже входит в состав
ubuntu урезанная версия
2. logrotate # утилита по очишению лог файлов
3. cat /etc/logrotate.conf
rotate log files weekly # работа еженедльная
weekly


# keep 4 weeks worth of backlogs
rotate 4 # 4 файла

# create new (empty) log files after rotating old ones
create
# создавать пусытые логфайлы

# uncomment this if you want your log files compressed
#compress

# packages drop log rotation information into this directory
include /etc/logrotate.d

# no packages own wtmp, or btmp -- we'll rotate them here
/var/log/wtmp {
    missingok
    monthly
    create 0664 root utmp
    rotate 1
}

/var/log/btmp {
    missingok
    monthly
    create 0660 root utmp
    rotate 1
}


3. cat /var/log/wtmp
utmpdump /var/log
4. cd /etc/logrotate.d/
cat ufw
5.ls /var/log