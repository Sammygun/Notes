https://www.freecodecamp.org/news/the-linux-commands-handbook/
крутая книга !!!!!
pwgen 15 1 -y -s ## очень сложный пароль, 15 символов, 1 пароль
}G2Q8{E@,5@-!yK
pwgen 15 1 # простой пароль из 15 символов
kib3AezaiVahShu
pwgen 15 1 -y
lei@Jeizein9cai
pwgen 15 1 -s
5dsQrwGA9ERknMk


scp 508.sh root@vh122.hoster.by:/root ######очень удобно переносить с своего компа на сервер
chmod +x 508.sh #### на сервере право выполнения скрипта

sudo htop ### на своем компе!!!!!
touch utils.py && atom . ## создаю файл и открываю сразу в atom
atom . # вызов в терминале редактора atom


https://tldr.ostera.io ### аналог man быстрый
https://vds-admin.ru/linux/poleznye-komandy-linux
шпора сисадмина
https://lifehacker.ru/komandy-linux/
менеджер пакетов
https://sadminblog.ru/main-terminal-commands-linux/
top процессы

################
mv wordpress ../ # перенос на директорию выше !!!!!
/home/user/public_html ## нахожусь в public_html
mv wordpress/* . ## развернул содержимое из папки wordpress в public_html  . точка текущая дирктория(когда создалось папка но нужно перенести на директорию выше!!!!!!) !!!!!

##################
Логи сервера!!!!!
cat marsel.by | grep "27\/Jun\/2020:13*" |  awk '{print $1}' | sort | uniq -c | sort -rn | head ### вытаскиваю ip список

2a0a:7d80:1:7::70 - - [15/Jun/2020:11:33:14 +0300] "POST /wp-cron.php?doing_wp_cron=1592209994.8846731185913085937500 HTTP/1.0" 503 - "http://odr.by/wp-cron.php?doing_wp_cron=1592209994.8846731185913085937500" "WordPress/5.4.2; https://odr.by" ## ПРИМЕР ЛОГА

awk '{print $1}## Вывожу первую колонку 
sort  отсортирует в алфавитном порядке
uniq -c ###В НАЧАЛЕ КАЖДОЙ СТРОКИ ВЫВЕДИТ КОЛИЧЕСТВО ПОВТОРОВ
sort -rn## отсортирует в обратном порядке по числовому значению
head ## покажет верхушку

grep Красивое zen.txt ####ищет предложение в таком файле
grep -i красивое zen.txt ## слово будет искать и с большой и с маленькой буквы
grep -o Красивое zen.txt  ## чисто слово найдет
grep ^Если zen.txt ### будет искать если только в начале предложения
grep никогда.$ zen.txt ### будет искать в конце предложения слово никогда

################

https://losst.ru/komanda-strace-v-linux
strace команда пример:
strace uname
openat(AT_FDCWD, "/usr/local/cuda-6.5/lib64/tls/x86_64/libc.so.6", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory) ###параметры передаются в скобках, потом равно = -1 означает провал, пояснение No such file or directory
openat(AT_FDCWD, "/usr/lib/locale/C.UTF-8/LC_CTYPE", O_RDONLY|O_CLOEXEC) = 3 ## 0 или положительное число означает успех
uname({sysname="Linux", nodename="sergiy-pc1", ...}) = 0
pidof dd ##узнаю pid процесса dd записывает нули
sudo strace -p 31796 ## увидим данный процесс, что он именно делает

sudo strace -e trace=stat nautilus ## фильтрация
sudo strace -e fault=uname uname## прошу вернуть информацию об ошибке
#############################


cd .config ## у пользователя  #/home/sam
  cd cliper ## там просто файл через vim
перезагрузить htop kill 9

MAIN tuturialinux
uptime #load average 1 загружен на сто , 0,22 22 процента лучше меньше 
Но если 4 процессора то больше 1,4 норм
Средняя нагрузка системыf
sudo apt list | grep installed ### смотрю что установлено
ifconfig          - показать мой IP адресс

sudo su ###root
sudo -i ## тоже самое

echo "" > php-fpm.conf ## очищаю файл перезаписываю пустые строки "" без пробелов
echo "" >> php-fpm.conf ## добавляю новую строку



https://losst.ru/fajl-podkachki-linux#%D0%9A%D0%B0%D0%BA_%D1%83%D0%B4%D0%B0%D0%BB%D0%B8%D1%82%D1%8C_%D1%84%D0%B0%D0%B9%D0%BB_%D0%BF%D0%BE%D0%B4%D0%BA%D0%B0%D1%87%D0%BA%D0%B8_%D0%B2_Linux
swap
sudo swapoff -a ## отключение swap
swapon -a ### включаю обратно
sudo swapoff -a && swapon -a ### очистка swap
sudo swapoff -a && sudo swapon -a
https://jeka.by/post/1027/linux-swap/

scp 508.sh root@vh122.hoster.by:/root
очень удобно переносить с своего компа на сервер
lsof -p PID #### какие файлы задействованы для конкретного процесса!!!!!!

lsof /home/user1 # смотрю все файлы которые запущены из директории 

awk '$2 == "Jones'" {print $0}' awkusers.txt  # вытащу все строки с Jones
Mike Jones
Kathy Jones
$2 это второе слово, $1 это первое слово, $0 символизирует целую строку, если второе слово равно $2 равно jones то print $0 целую строку файла awkusers.txt
=================================================
тип оперативной памяти
https://www.linuxnix.com/find-ram-details-in-linuxunix/
sudo dmidecode -t 17
sudo dmidecode --type 17 | more ## можно less использовать
sudo dmidecode --type 17 | less
Size: 8192 MB
Form Factor: SODIMM
Type: DDR4
Speed: 2400 MT/s
Manufacturer: Samsung
https://catalog.onliner.by/dram?dramkit%5B0%5D=ddr4sodimm&dramkit%5Boperation%5D=union&volummemcards%5Bfrom%5D=8gb&volummemcards%5Bto%5D=8gb&dramkitt%5B0%5D=singlechannel&dramkitt%5Boperation%5D=union&dramfeq%5Bfrom%5D=dram2400&dramfeq%5Bto%5D=dram2400

https://catalog.onliner.by/dram/crucial/ct8g4sfs824a/reviews/~sort_by=date~dir=asc~page=2?region=minsk
с samsung работает нормально отзыв

newegg.com and crucial.com можешь использовать эти магазины
sudo dmidecode -t 1  ##модель ноутбука и серийник
      Manufacturer: LENOVO
Product Name: 20NE001QRT
Version: ThinkPad E495
===================================================
Безопасность
last ## последние подключения к серверу по ssh
w ### смотрю кто сейчас в сети
1 history
history -r # стер кто что делал
$HISTFILE # История команд команда
в домашнем каталоге пользователя cat .bash_history, кто что делал
2 /var/log ##журнал сервера, dns-Сервера, брандмауэра, обнаружения вторжений linux
3 file unknownfile
unknownfile: Microsoft word 2007+
4 ЛОГИ
1 /var/log/apache2 # журналы доступа и ошибок сервера apache
2 /var/log/auth.log ## сведения о входе пользователя в систему привилигированном доступе и удаленной подлинности
3 /var/log/kern.log ##журналы ядра
4  /var/log/messages #общая некритическая системная информация
5/var/log/syslog # общие системные журналы
6 Где хранятся журналы в linux, можно  посмотреть журналы
syslog.conf    или /etc/rsyslog.conf  ## можно найти где журналы храняться


UBUNTU  обновление
sudo apt update && sudo apt upgrade
sudo do-release-upgrade


du -a -d 1 -h | sort -h ## показать  cколько папок сколько весит

egrep -w 'word1|word2' /path/to/file ### поиск несколько слов в конкретном файле
egrep -i '(name|pass|user)' wp-config.php ##ищу  базу данных

egrep -i 'name|pass|user' wp-config.php ### база данных пользователь пароль alias db попробуй!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
nano .bashrc # захожу в данный файл (найти файл \home\sam      ls -al и там прописываю alias db ="egrep -i 'name|pass|user'" )
db wp-config.php

grep -R -i 'password' /home ## R(r) рекурсивно , i игнорировать регистр букв, ищем password
Общие параметры команды grep 
-с #вывести количество строк
-E # включить расширенные регулярные выражения egrep
-f # file брать шаблон из конкретного файла
-i #игнорировать регистр букв
-l # вывести имя файла и путь в котором было найдено искомое
-n  # вывести номер строки файла в котором было найдено искомое
-P # включить механизм регулярных выражений perl
-R -r # выполнить поиск рекурсивно


history ##с датой настройка
export HISTTIMEFORMAT='%F %T '
history
https://losst.ru/istoriya-komand-linux
когда ставишь первую букву в терминале и щелкаешь вверх оно ищет по первой букве команды

lsattr
chattr -i
Когда удалить не получается файл rm -rf
rm -rf public_html_old-2020-05-02/
rm: невозможно удалить «public_html_old-2020-05-02/cgi-bin/index.php»: Операция не позволена
rm: невозможно удалить «public_html_old-2020-05-02/modules/aggregator/aggregator-wrapper.tpl.php»: Операция не позволена
Перемещаюсь в папку с проьлемным файлом
lsattr  вижу -i защита от удаления
chattr -i index.php ### убираю и так со всеми файлами такого рода
rm -rf public_html_old-2020-05-02 ### теперь можно удалить этот файл


cutfile.txt
12/05/2017 192.168.10.14 test.html
12/30/2017 192.168.10.185 login.html
cut -d ' ' -f2 cutfile.txt # -d в качестве разделителя полей используется пробел,  -f2 определяет, что команде нужно вырезать и отобразить второе поле в данном случае ip-адреса
192.168.10.14
192.168.10.185


СКРИПТ 508
3 вариант
### Итоговый вариант 
### scp 508.sh root@vh122.hoster.by:/root ######очень удобно переносить с своего компа на сервер
### chmod +x 508.sh #### на сервере право выполнения скрипта
###  ./508.sh 2 host0401 ## запуск 2 дни имя пользователя host0401

#!/bin/bash

lveinfo --period "$1"d -o total_cpu_faults --show-columns From,To,ID,CPUf,EPf,NprocF,PMemF,IOf,IOPSf  --display-username --user "$2" --time-unit 1h

echo "cd /home/"$2"/access-logs"

### потом выделяешь всю строку  и средней мышкой по новой строке


#############################################################################
KALI LINUX
1 host linux.of.by ## можно узнать ipv6
dig linux.of.by ### можно получить основную информацию по домену
traceroute www.example.com ### по запросу 15  30 увидим *** звездочки это значит брандмауэр настроен
tcptraceroute www.example.com  ### тут будет предоставлен полный ответ
2  Redhawk2 !!!!!!!!!!
https://github.com/Tuhinshubhra/RED_HAWK ## инструкция

1 git clone https://github.com/Tuhinshubhra/RED_HAWK
2 cd RED_HAWK
3 php rhawk.php ### запуск приложения
может попросить php поставить hvm  ставишь и запускаешь
4 basic recon  можно узнать cms

https://2ip.ru/cms/ ### также можно узнать и здесь cms

nmap 178.172.136.79
22/tcp open  ssh  ## просто посмотрю порты
80/tcp open  http



3 NMAP
1 sudo nmap 93.125.99.133 -sV ## определяем службу и версию, очень крутая штука!!!
PORT    STATE SERVICE VERSION
21/tcp  open  ftp     ProFTPD 1.3.5b
22/tcp  open  ssh     OpenSSH 7.4p1 Debian 10 (protocol 2.0)
80/tcp  open  http    Apache httpd 2.4.25 ((Debian))
111/tcp open  rpcbind 2-4 (RPC #100000)

1.1 
 -sV # обнаружение версии сервиса
-O # обнаружение операционной системы
-sC # сканирование сценариев
--traceroute ## трассировка

  nmap -sV 172.16.43.156 -p 22 ## определяю версию службы ssh тут увижу, что openssh версии 4.7р1 и протокол ssh 2.0 !!!!!
nmap -sV 172.16.43.156 -p 80 ## также можно узнать версию apache или nginx или службу по определенному порту

1.3 nmap -O 172.16.43.156 ## определяю версию ядра linux 2.69-2.6.33 !!!! 

2 nmap 172.16.43.156 ## смотрю какие порты открыт
open 
closed
filtered ##брандмауэр
unfiltered ##nmap не может определить открыт он или закрыт
open /filtered # не может определить открыт закрты межсетевой экран возможно
closed/filtered ## закрыт отфильтрован

3 tcpdump -nnx tcp and host 172.16.43.150 ### смотрю что происходит наблюдаю за агрессором !!!!!!!!!!!
172.16.43.150.49270 > 172.16.43.156: flags [S]
атакующая машина 172.16.43.150 с  порта 49270 отправил на машину  172.16.43.156  на порт 23 (terlnet) syn пакет

4 nmap -sU 172.16.43.156 -p 53,161 ## сканирую  на какие открыты порты Udp sU
Флаги 
-p диапазон портов 
-F  быстрое сканирование общих 100 портов
-r # Сканирование портов указываешь с какого по какой 
--top-ports <1 или больше >## топ портов со значение больше

5  nmap 172.16.43.156 -oX myscan.xml ## сохраняю результат сканирование в файл формата xml
xsltproc myscan.xml -o myscan.html ##формат xml не удобен делаю формат Html 

6 Флаги, ФЛАГ А это все ниже
 -sV # обнаружение версии сервиса
-O # обнаружение операционной системы
-sC # сканирование сценариев
--traceroute ## трассировка

все выше включает флаг -A !!!!!

nmap -A 172.16.43.156 ### займет время но покажет, сервисы, ядро, скан сценариев, traceroute

7 Скан ipv6
nmap -6 fe80::20c::29ff:fe18:f08 ## сканирую ipv6


###############################################################
Настройка Wordpress на серевере !!!!!

Create database and db user in Mysql ## создаю базу данных пользователя
1 mysql -u root -p ## авторизация от рута в базе данных

echo -n @ && cat /dev/urandom | env LC_CTYPE=C tr -dc [:alnum:] | head -c 15 && echo
создание пароля для ного пользователя

2 CREATE DATABASE tutorialinux; ## создаю базу
CREATE USER 'tutorialinux'@'localhost' IDENTIFIED BY 'chooseapassword'; ## создаю пользователя и пароль
GRANT ALL PRIVILEGES ON tutorialinux.* TO tutorialinux@localhost; ## даю все права
FLUSH PRIVILEGES;  ### обновляю

Рекомендательно создавать пользователя и базу данных по имени одинаковыми

5 Cкачиваем wordpress и настраиваем
1 su - tutorialinux
2 cd public_html
3 wget https://wordpress.org/latest.tar.gz ## скачиваю устновочный файл, latest всегда последния версия

4 tar -zxvf latest.tar.gz ## можно zxf без v verbose видеть что происходит разахивирую архив

5 rm latest.tar.gz ## удалил скаченный архив

6/home/user/public_html ## нахожусь в public_html
mv wordpress/* . ## развер нул содержимое из папки wordpress в public_html (когда создалось папка но нужно перенести на директорию выше!!!!!!) !!!!!

ls -al wordpress/ ## она будет пустой после команды выше
rmdir wordpress ## удаляем пустую папку

7 в public_html файлы wordpress

8 whoami ## покажет tutuoriallinux пользователь не root
ctrl-d # выхожу в root
Запускаю:
systemctl restart php7.4-fpm
systemctl restart nginx

9 ifconfig ### могу узнать свой ip
могу зайти по ip на страницу а могу по домену
http://example.com/wp-admin/setup-config.php
Настройка wordpress
1 continue
2 lets go
3 база данных, пользователь, пароль
Database tutorialinux
User name tutorialinux
Password ## пароль базы данных
Databasehost localhost ## база на самом сервере
Table Prefix не трогаю

4 run install it
site title ## название сайта
username admin (secretadmin лучше admin не безопасно)
Password
your email: filin@kat.of.by
search ingine visibility не трогай###
discourage отключить индексаци в поисковых системах

Install Wordpress
log in

5 в Админке
update plugins ## обновление всех плагинов




#########################################
uname -a ## тоже можно
 lsb_release -a ## узнать версию ubuntu
/etc/NetworkManager/system-connections/<имя подключения> ### можно посмотреть пароль от соединение при использовании NetworkManager пароль  wifi

шлюз ## это локальный комп  который предостваляет доступ к интернету
шлюз выполняет маршрутизацию пакетов
Маршрутизация это процесс перенаправления пакетов по сетям находящимся между отправителем и получателем

usb flash через терминал то все при монтированные устройства в папке dev

rwx - 7 (4+2+1)  777 rwx rwx rwx
rw-  - 6 (4+2+0)
r-x - 5 (4+0+1)
r-- 4 (4 +0+0)

7 rwx  read write execute
6 rw read write
5  rx read execute
4  r read

0644 rw,  r,  r
-rw-r--r--
0755  rwx rx rx
drwxr-xr-x


СМОТРИ какие файлы редактировались в корневой папке домена за 2 дня
find . -type f -mtime -2
когда надо поменять права у пользователя в его директории на файлы и папки
find /home/mondaypa/public_html -type d -exec chmod 755 {} +
find /home/mondaypa/public_html -type f -exec chmod 644 {} +
Меняю владельца папки рекусивно
chown -R user:user public-html ### user user


id кто в системе ## w , who
Kali linux
sudo su получение рута прав
sudo passwd меняю пароль root

lspci | grep -i VGA #### смотрю видеокарту подключенную по vga

!!!!ssh подключения без пароля!!!
1. ssh-keygen -t rsa
2. cd .ssh
3. id_rsa.pub (публичный ключь)  id_rsa(закрытый ключь)
4. ssh-copy-id -i .ssh/id_rsa.pub host0401@vh113.hoster.by ## надо запускать не находясь в папке .ssh
5. ssh-copy-id -i id_rsa.pub host0401@vh113.hoster.by   ###   находись в директории .ssh/ тогда запускать такую команду
6. везде еnter, но если хочешь парольная фразу вставь
7. теперь просто:
ssh host0401@vh113.hoster.by

mysql --user=wgforge --password=ry9gkvOUaJdrUS --host=forge.gw.tc
#подключение к базе данных на стороннем хостинге по логину и паролю

### удаленное подключение конкретного сайта ######
Что бы подключиться к удаленному серверу MySQL из консоли, если сервер находится например по адресу  hosmysql.exempe.ru вам нужно будет ввести такую команду к консоли сервера:

mysql> -u username -p -h hosmysql.exempe.ru;

tcpdump linux приложение анализ трафика 

Создание базы пользователя и привилегии
mariadb -u root
CREATE DATABASE new_db_name COLLATE 'utf8_general_ci';
CREATE USER new_db_user IDENTIFIED BY 'sam2250885';
GRANT ALL privileges ON new_db_name .* TO new_db_user;
\q ## выход
https://github.com/alexey-goloburdin/debian-set-up-for-php
здесь пример

su - websituser #### перехожу на пользователя нового по бокам у тире пробелы

sudo apt-get install uduntu-desktop ### установка графического интерфейса на сервер !!!!!!
sudo apt-get install bum #### настройка сервисов
81 страница какие сервисы можно отключить для ускорения работы !!!


1 mail -s "importnat information" dave@mail.ru < file.log ### отправка сообщения содержимое из файла file.log
2 date ###дата  и время сервера
3 which date ## покажет где команда находится /bin/date
4 echo "$(/bin/date) - hi there" >> logfile.log  ## результат команды date, hi there в файл
cat logfile.log### дата и текст hi there

which zsh
/usr/bin/zsh ## где находится zsh

top ### time время выполнения,     процессорное время
PR приоритет максимальный 20(чем выше тем быстрей будет выполнение процесса ) минимальный 19, приоритет по умолчанию 10
nice -n <приоритет> команда аргументы
renice -n <приоритет> -p PID ###если процесс запущен, то увеличиваем приоритет в реальном времени

passwd имя_пользователя ### меняю пароль пользователя !!!!!!!
w  ### список пользователей подключенных в данный момент время входа статистика использования системы (idle время простоя, JCPU - использования процессора), выполняемые пользователем задачи
who ## список пользователей подключенных к системе время и дату входа для каждого пользователя
whoami # кто я имя пользователя кто ввел эту команду

passwd root ## меняю пароль пользователя root

Sudo
1 /var/log/auth.log ### Каждая команда sudo записывается в журнал
2 sudo passwd root ### меняю пароль root
спросит текущий пароль
попрости ввести  новый пароль
Подтверждение пароля
3 sudo passwd -l root ### блокирую пользователя

chmod +x routing ### делаю скрипт (сценарий) исполнимым

lynx mail.ru##текстовый браузер

команды системного администратора
df -h ## использование дискового пространства
used avaiable # сколько занято, сколько доступно

free -h ### использование оперативной памяти и виртуальной
used free # сколько занято сколько свободно

du -h # сколько что в конкретной папке занимает disk usageсколько что использует
du -sh # сокращает вывод показывает сразу сколько использует каждая папка

cmp параметры  файл1 файл2  ### более универсальная команда сравнение файлов текстовых документов
Параметры
-с ## вывод отличающихся символов
-i n ## игнорировать первые n символов
-l  # вывод позиций всех отличий а не только  первого
-s ##не выводить инфу на экран
0 файлы одинаковые
1 файлы отличаются
2 ошибка при открытии одного из файлов

nginx -T ### проверка списков сайтов на облаке

journactl --list-boots ## это список всех загрузок 0 текущая, 1 предыдущая и так далее
journactl -u nginx.service ## логи конкретной службы
journalctl -p err -b ### выводит все ошибки при текущей загрузке
journalctl -xe ## просмотр логов сервисов различных apache и т.д. !!!
journalctl -eu apache2.service  ## конкретный сервис !!!
journalctl -list-boots ## всех сохраненных загрузок  !!!!
  journalctl -b 37d5c906c9c6404682f029b2c34ec9dc ### конкретный идентификатор

Глава 27 Протоколирование системы ПОМНИ journal + ctl как и system + ctl
https://losst.ru/shpargalka-po-journalctl-v-linux
Демоны программы которые пишут логи сервера
1 journactl
/var/log #### седа пишутся логи сервера
2 journactl -b ## логи c момента текущей загрузки
3 Все логи пишутся исходя из даты установленной в системе
timedatectl set-timezone  <часовой пояс> ### установка часового пояса
timedatectl list-timezones ## список часовых поясов стрелкой вниз листать
timedatectl  status #  узнать какой часовой пояс сейчас установлен
4  journactl -b ## логи c момента текущей загрузки
    journactl --list-boots ## это список всех загрузок 0 текущая, 1 предыдущая и так далее !!!!!!!!!!!!!!!!!!!!!!!!!!!!
   journactl -b -1  ### смотрю журнал с предыдущей загрузки
5 Просмотр логов по дате  --since --until
journactl --since "2015-11-11 07:00:00" ## смотрю логи с 11 11 2015 7:00
если не укажу дату то будет взята текущая дата
если указана дата, но не время то будет взято время по умолчанию 00:00:000
6 journactl --since yesterday ##логи с вчерашнего дня по текущий
  journactl --since 09:00 --until now ## логи с 9:00 по текущий момент
  journactl --since 09:00 --until "1 hour ago" ### логи с 10:00 и  до прошлого одного  часа назад если сейчас 19:00 то покажет 18:00
7 Фильтр по сервису
journactl -u nginx.service ## логи конкретной службы !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
journactl -u nginx.service --since  yesterday ##логи начиная со вчерашнего дня в примере (today) возможно описка
8 Фильтр по пути
journactl /usr/bin/docker
9 journactl _PID=<ID процесса> ##фильтр журнала  по конкретном процессу его pid номер
10 можно узнать по uid пользователя его логи что он делал
id ## узнаю здесь  uid
id -u sam ## узнаю конкретного пользователя uid
journalctl _UID=1000  ### все логи конкретного пользователя
journalctl _UID=1000 --since yesterday ## все логи конкретного пользователя со вчерашнего дня
10 Сообщения ядра
journalctl -k ## сообщения ядра можно и через dmesg тоже вводить  journactl --dmesg
journactl --dmesg
journalctl -k -b -2 ## смотрим логи с предыдущей загрузки
11 ФИЛЬТР по уровню ошибок
0 EMERG система неработоспособна
1 ALERT (требуется немедленное вмешательство)
2 CRIT (критическое состояние)
3 ERR (ошибка)
4 Warning (предупреждение)
5 NOTICE (просто обратите внимание)
6 INFO информационное сообщение
7 DEBUG отложенная печать
journalctl -p err -b ### выводит все ошибки при текущей загрузке !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
journalctl -f ## в реальном времени
Можно настроить логи чтобы удаленно находились на конкретной тачке страница 453
8 sudo journalctl -xe ## просмотр логов сервисов различных apache и т.д. !!!
9 sudo journalctl -eu apache2.service  ## конкретный сервис !!!
10 sudo journalctl -list-boots ## всех сохраненных загрузок  !!!!
   sudo journalctl -b 37d5c906c9c6404682f029b2c34ec9dc ### конкретный идентификатор


crond ## планировщик задач
минуты (0-59)  часы (0-23)  день (1-31) месяц (1-12) день недели(0-6, 0-Вс)
0 7 * * * /usr/bin/command1 arguments ### каждый день в 7 утра
20 7 * * * /usr/bin/command1 arguments ### каждый день в 7:20 утра

cd /proc  = ll
Виртуальная файловая система proc
cat /proc/version ## содержит версию ядра
cat /proc/cmdline # список параметров при загрузке ядру
cat /proc/cpuinfo### информация о процессоре
cat /proc/meminfo ### информация об использовании оперативной памяти аналог free
cat /proc/devices # список устройств
cat /proc/filesystems ## файловые системы которые поддерживаются системой
cat /proc/mounts ### список подмонтированных файловых систем
cat /proc/modules ## список загруженных модулей
cat /proc/swaps ## список файлов подкачки которые активны на текущий момент


Конфигурационные файлы etc
1 /etc/abrt #automatiun bug detection and reporting tool для разрабов
2 /etc/NetworkManager/system-connections ### NetworkManager программа настройки сети
Тут можно посмотреть пароли имя файла имя соединения c интернетом
3 /etc/crontab
/etc/at.allow ## список команд которые можно вставить
/etc/at.deny ### список команд которые нельзя вставлять и они запрещены список запрещенных команд
touch at.allow ### список разрешенных команд
4 /etc/fonts/fonts.conf ### настройка шрифтов
5 Сервер конфигурации
/etc/ssh/sshd_config  ##ssh сервер
/etc/httpd/conf/httpd.conf  ### web server apache или папка apache
/etc/proftpd/proftpd.conf ## ftp сервер ProFTPD
/etc/bind/named.conf ## DNS сервер
/etc/squid/squid.conf ## Прокси сервер SQUID
/etc/exports  ## NFS NETWORK FILE System
/etc/samba/samb.conf ## Samba доступ к windows сети
6 /etc/mail ## sendmail
7 /etc/ntp ### время
8 /etc/openvpn ### настройка vpn
9 /etc/skel ## при создании пользователя всего его будущие папки берется информация отсюда здесь все настройки
10 /etc/groupe ## группы в системе
    /etc/passwd ###пароли пользователей
     etc/sudoers ## информация кто имеет право sudo

/etc/sudoers ## тут могу настроить или посмотреть как запускать sudo
den localhost = NOPASSWD: /bin/kill, /sbin/reboot, /sbin/halt # den может от sudo запускать эти команды (kill reboot halt) без пароля root
den localhost = PASSWD: /bin/kill, /sbin/reboot, /sbin/halt ## тоже самое что выше только будет просить пароль учетной записи Den

/etc/passwd
root:x:0:0:root:/root:/bin/true ###теперь все если кто-то узнает пароль root то он все равно не попадет в систему


iptables
INPUT ## для входящих пакетов
OUTPUT ## для исходящих пакетов
FORWARD ### для транзитных пакетов
имя цепочки пакет будет отправлен в цепочку с этими именем
Accept принять пакет
Drop ## отбросить пакет
Masquerade ## маскарад скрыть ip адрес пакета
sudo iptables -P INPUT DROP### входящий отбрасываем
sudo iptables -P FORWARD ACCEPT ### транзитный отбрасываем
sudo iptables -P OUTPUT DROP ## изсходящий отбрасываем
https://ru.wikipedia.org/wiki/Iptables ВИКИПЕДЕЯ ХОРОШАЯ статья по iptables
http://opennet.ru/docs/RUS/iptables/ ## крутое руководство по iptables
https://help.ubuntu.ru/wiki/iptables

0.iptables
1 sudo iptables -L -n #Показать все правила, адреса\порты в числовом формате
input входящий трафик
output Исходящий трафики
froward маршрутизированный трафик
2 sudo iptables -F #Удалить все правила
3 sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT # A разрешаем А записи input входящий трафик по p  протоколу tcp -- dport (destination port) на какой порт 22 j действие разрешить
Создаем правило в цепочке INPUT, разрешающее весь траффик на порт 22 по tcp
sudo iptables -L -n увижу это правило
4 sudo iptables -A INPUT -s 10.16.103.0/24 -p tcp --dport 80 -j ACCEPT # s источник ресурс адресс 10.16.103.0/24 подсеть  -p порт tcp 80 и j действие  ACCEPTразрешить
Создаем правило в цепочке INPUT, разрешающее весь траффик на порт 80 по tcp с подсети 10.16.103.0/2
5 sudo iptables -L -n --line-numbers #Показать все правила, адреса\порты в числовом формате, с номерами строк
смотрю приоритет  1 2 очень важно если правило поподает по пятое то все последующими оно обрабатываться не будет
6.sudo iptables -I INPUT 2 -p tcp --dport 443 -j ACCEPT #  I input (входящий) 2 номер строки порт какой destination port 443 j Действие Разрешить(открываем https)
Вставляем правило в цепочке INPUT на 2 строку, разрешающее весь траффик на порт 80 по tcp
7 sudo iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT #Разрешаем обратный траффик для установленных исходящих соединений
sudo iptables -I INPUT 1 -m state --state RELATED,ESTABLISHED -j ACCEPT #Разрешаем обратный траффик для установленных исходящих соединений
он указывал
8 sudo iptables -P INPUT DROP #Устанавливаем поведение цепочки INPUT по умолчанию в DROP(весь явно неуказанный траффик будет отброшен)
P policy политика
9 sudo iptables -A INPUT -p icmp -j ACCEPT #Разрешаем ICMP то есть разрешаем пинговать нас с других машин
10 sudo iptables -D INPUT 4 #Удаляем 4 строку в цепочке INPUT удаляем 4 строку с правилом
sudo iptables -L -n --line-numbers ### тут смотрю на все правила
11 sudo iptables-save ## сохраняем текущие правила чтобы после перезагрузки они сохранились
sudo apt-get install iptables-persistent #Установить iptables-persistent чтобы сохранять правила persistent присуствие iptable
при установки спросит сохранить текущие правила
sudo service netfilter-persistent save ### сохранит наши текущие настройки после перезагрузки все останется
sudo iptables -L -n #Показать все правила, адреса\порты в числовом формате
sudo iptables -L # покажет не полные правила


0.1 Простенький firewall
sudo apt install gufw ставим
sudo ufw enable  ### чтобы после перезагрузки включен в автозагрузку


командная строка FTP
sudo dnf install ftp ### установка как правило уже установлена fedora
ftp <Имя или адрес ftp-сервера> ### подключение
open <Имя или адрес ftp-сервера> ### включение
ОСНОВНЫЕ КОМАНДЫ
ls
get  ### загрузить с сервераа
put ### Загрузить на сервер
mget ### скачать несколько файлов с сервера
mput ### загрузить несколько файлов на сервер
cd 
mkdir
rmdir ## удаление пустого каталога
delete ## удалить файл


RAID массив
Объединение 2 винчестеров в один RAID-массив все, что будет записано на первый винчестер автоматически продублируется на второй. Если первый поломается то можно восстановить со второго винчестера все.
Есть аппаратный и программный. Программный более медленный зато включен в linux.
Проверка наличие RAID
dmesg ## как правило включен в linux при загрузке должно быть RAID arrays
raidtools ## Инструменты для работы с raid
raidhotadd ### первая добавляет в него диск
raidhotremove ### удаляет диск из массива
mkraid ## создание raid массива
массив 1 уровня зеркало два диска
1 Объединим два диска /dev/sda /dev/sdb
Разметка диска /dev/sda ## два раздела  первый раздел подкачки (2 гб), второй все оставшееся дисковое пространство
sudo sfdisk -d /dev/sda | sfdisk /dev/sdb #### копируем такую же разметку на диск  /dev/sdb

sudo mdadm --create /dev/md0 --level=1 --raid-devices=2 /dev/sda1 /dev/sdb1
sudo mdadm --create /dev/md1 --level=1 --raid-devices=2 /dev/sda2 /dev/sdb2
Первая команда создает RAID массив разделов подкачки  (/dev/md0), вторая разделов данных (/dev/md1)
Первый параметр команды mdadm (--create) указывает, что мы создаем RAID массив за ним следует имя устройства. Параметр --level задает уровень RAID параметр --raid-devices -количество устройств а далее через пробел приводится список устройств формирующих RAID-массив

После этих команд создается два устройства:
/dev/md0 # для подкачки
/dev/md1 которое будет использоваться для хранения данных
sudo mkswap /dev/md0 setup ### помечаю как устройство подкачки

Теперь устанавливаем систему как обычно, при выборе разделов следует определить устройство /dev/md0 для использования в качестве подкачки, а для устройств задать точку монтирования, загрузчик нужно установить MBR
RAID


Поиск в LINUX

grep поиск по содержимому
find поиск по свойствам файла
locate быстрый поиск файла
which поиск команды
type вывод точной команды
whereis поиск комады исходники мануалы

1. find / -name mail  # / поиск в корне везде, name по имени mail все что содержит
в реальном времени долго
2. locate mail # быстро все что включает mail
3. find / -user sam # все что относится user к юзеру sam
sudo find / -user sam # все нашел
locate sam # во временных файлах не ищет
cat /etc/updatedb.conf # конфиг locate
4.sudo touch kirill.txt
  locate kirill.txt # не найдет раз в день запускает find и создает базу данных поэтому так быстро ищет но не достаток что раз в день
  sudo updatedb # обновить db базу данных locate 
  locate kirill.txt # сразу найдет
  find kirill.txt # найдет сразу же
  sudo updatedb # обновить db базу данных locate 
locate быстрей но после обновления


ssh подключения
Пример jenkins

1.ssh-keygen # генерирум ssh
enter
enter # парольная фраза не нужна
enter
2.  cat .ssh/id_rsa.pub # смотрю ssh сгенерированный ключь

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDB2uJjmYRKdFu9mVQ1AcycFoBI2t+jlb3BtnRfd+3DIdYYo2AncDEmbmZ30uu9465CjkDhSojdw+FLv5/SZrj5PlaNvUs34UoyDfTnDrwIzMxCy/aEvDvGRYJvEiOz4WN8Z6EZ2/y2oMaqMICjKDG6VAQ4bctDL7rOQrqx530TF+Ms/aqX/Kn6CQCE6kJ+yEUnIOorXSkJiXWe8dZcUNyFYQP6Rv73grjhUbm0MmxDs/8nze3Rs1Sk1M3b49tgFPeDC2fD/iI5yM9XB9HemcK8AAWD7uJyf+12eL1YoM886BV4m1CGI4uwRC5Sl+PZFpJpv4NRHsK90IdmNdjenb4z jenkins@ubuntu

# копируй
3. захожу на другой сервер
ssh vasya@192.168.0.102
sudo -i # jenkins получит права рут
vim .ssh/authorized_keys # захожу вставляю ssh ключь сохраняю shift +


==========================
sudo apt-get install mysql-server mysql-client
sudo mysql_secure_installation # выбираешь сложность пароля, устанавливай пароль и по шагам

     Remove anonymous users? удалить ананонимных юзеров # да на local на рабочем нет
      Disallow root login remotely? [Y/n]  # может удаленно подключаться нет но можно
      Remove test database and access to it? # удалить ли тестовые базы данных yes
      Reload privilege tables now? [Y/n]  # перезагрузить ли таблицу с привелегиями да
======================
ctr a начало строки
ctrl e конец строки
ctrl стрелки перемещения по словам

systemctl status mysql ## тут смотри статус
journalctl -xe ### также здесь ошибки смотри

shutdown -h 19:30 ## в конкретное время
shutdown -r now # перезагрузка

1.ls /home/dave/Desktop/  # когда я у казываю / я как будто с самого начало
2.ls /home # смотрю что внутри
3.cd /home/sam/Downloads # абсолютный путь с любого места могу зайти
cd ~dave # к юзера директории короткий путь аналог
cd ~ # сразу попадешь в директорию home пользователя под которым зашел
cd /home/dave
cd `wis http://teaprese.vh119.hosterby.com/`   ## кнопка ё сразу в пользователя захожу
4. rm -r RMDIR # удаляю не пустую директорию
    sudo rm * # удалить все в папке
               rm -rf * # удалить все в папке по жесткому
rm -rf *.zip # удаление архива zip папки не трогаем
5. sudo netstat -tupln  # дает больше возможностей по сети
t  список портов tcp, u тоже самое udp, p приложение использующие порт id его название,l listen те порты что прослушиваются, n number ip  адреса в виде чисел
netstat -tupln # смотрб какие порты открыты через рут больше инфы
6.echo "hi how are" > somefile.txt # отправлю эту фразу туда
7.echo "I am fine" > somefile.txt # перезапишет по новому уберет предыдущие
8.echo "I am fine" >> somefile.txt # создаст новоую строку не удаляя старой 
echo y | rm file.txt ## rm спросит можно ли но echo ответит yes за нас !!!!!!!
9.ps aux # выведит таблицей процесы
10.ps aux | grep firefox
11.ps aux | less # меньше информации объединение двух команд
12.ps aux # выкинет pid разных процессов 2196 пример
     pstree # дерево процессов
ps -eo user,pid,pcpu,nice,comm# e everything o output что запущено  и перечисление пользователя, пид, процент процессора, nice приоритет, comm какая команда
ps aux | grep /usr/bin/cronlog| wc -1 ## смотрю процессы службы а именно колличество
84 ### процессы
killall cronlog
ps axjf #  просмотр дерева процессоров j job f forest
PPID родитель PID
ps U scott # по имени пользователя можно и по номеру из /etc/passwd
ps aux -w # чтобы не урезало вывод
R выполняется
S спящий sleap
T Остановленный
Z zombi на пк плохо нужно перезагрузка или пересборка виртуальной файловой системы
killall -9 -u programd
cagefsctl -m programd
   kill 2196 # убиваю конкретный процесс
  killall sleep # убить все процессы sleep
nohup sleep 1000 & # при выходе из терминала команда будет все равно выполняться
jobs  # задачи показывает процессы
13.cat file.txt | uniq # если есть дупликаты то их не тронет, а выведит только уникальные значения
14. grep user file3
php -v # версия php
php -i ## i info
php -i | grep memory
php -i | grep php.ini ## нахожу местоположение php.ini
помни bitrix vm dbconn.php в приоритете
15.0 sudo apt-get install mysql-server php-musql php5-fpm monit  ## сначало поставь а потом делай обновления
```
apt-get install mysql-server
apt-get install php-mysql php-fpm monit
```
15.1
sudo apt-get update # обновляем систему
sudo apt-get upgrade ## следующая команда такая последовательность
sudo apt-get -y upgrade # чтобы не видеть что происходит

sudo apt update && apt-get upgrade ## можно так

16.

```
add-apt-repository ppa:nginx/stable
apt-get update
apt-get install nginx
```
пример добавки репозиторий обновления и скачивания

sudo apt-get install name # установка чего-то
sudo add-apt-repository ppa:gnome-terminator & sudo apt-get update # сразу две команды &
sudo apt-get install terminator
17. sudo apt install name # установка чего-то
sudo apt-get install -y vim mosh tmux htop git curl wget unzip zip gcc build-essential make ## y чтобы инсталятор не спрашивал ставить ли программу или нет
   sudo apt-get install phpmyadmin php-mbstring php-gettext # cразу кучу всего
18. 
apt-cache search php | grep mysql # пример происка как искать ищу пакет в котором встречается словосочетание mysql
apt-cache search tmux # ищу tmux
   sudo apt-get install tmux # нашел ставлю
   sudo apt-get remove name # удаляем программу
19.chmod 7 everything,6 read write, 4 read, 0 no rights
   chmod 777 # все могут все
   chmod 640 app.py # 6 owner read write,4 
  chmod -r 750 app # рекурсивно и то что в папке 
sudo chmod -R 744 /var/www # R recursivno не только данной папке www даем права но и всему что внутри
groupe read , 0 others no rights
20.whoami # кто я
w # кто подключен
21.id # мои права
22.useradd -m -d /home/schnerg -s /bin/bash - schnerg #m create home directory, d direction home где она будет находиться
   passwd schnerg
   usermod -L schnerg # блокируем юзера пароль
   usermod -U schnerg # разблокирум юзера пароль
   userdel schnerg # Удалил его
su -l andrey # перейти на другого пользователя l login как будто мы логинимся
whoami # проверяю пользователя
23.sudo pkill -u dave
24. htop #выбираю процесс
    F9 # kill
    Выбираю какой Signal Отправить  15 SIGTERM более частое
    9 SIGKILL более жесткий метод

top # > по оперативке, < по процессу сортировка
k потом вводи 12319 убьешь процессор по его id
15 # спросит какой сигнал 15 мягкий сигнал kill sigter,
9 # жестко грохнет на плевав на процессы которые зависят от него
25.htop -u sam # смотрю процессы sam
26. htop # тут выбираю процесс
    F7 # понижаю nice
    F8 # повышаю nice приоритетность
27.ls ыфвывфы && echo "Success!" # первый не сработал значит и второй не сработает аналог AND
ls ыфвывфы || echo "Success!"  # аналог OR или если первое не сработает, то второе все равно сработает если корректно
sudo apt update && apt-get upgrade
&& AND
|| OR
28.which bash # смотрим где находится bash
/bin/bash # вывод

which ls
/bin/ls # покажет где находится команда
type ls # смотрим какие ключи срабатывает при запуске ls
ls — это псевдонимом для «ls --color=auto»
/bin/ls ls --color=auto # получается вот так запускается команда когда пишем ls

whereis ls # аналог which но дает еще доп инфу
ls: /bin/ls /usr/share/man/man1/ls.1.gz # где находится и в каком пакете находятся
$ nano .bashrc # захожу в данный файл (найти файл \home\sam      ls -al и там прописываю alias lr="ls -lra" )

29. #!/bin/bash
30. alias lr="ls -lra" # создал сокращеннуб команду повыводу списка ls -lra подробней читай tutorial общий
$ nano .bashrc # захожу в данный файл (найти файл \home\sam      ls -al)
31. lsof # listen open file
    lsof | less # сокращенно
    lsof | grep user # ищу
    lsof -u sam # смотрю что юзер делает
lsof # любой объект в linux это файл  сетевое соединение устройства и программ и файлы
lsof -u scott ## смотрю какие файлы открывал пользователь и подключал устройства
lsof /usr/sbin/sshd # смотрю кто использовал демона ssh, или подключался по ssh можно вычислить взломщика
  32.df -h #  disk space usage free, h human readable
    du # disk usage что занимает
   du -h
5. du -h /home/sam/* # взвесь мне эту папку покажет все и все что внутри
---
ADVIT DENIS ESSENTIALS
Начало команды tab  и подсказывает команду
file folder1 # напишет что это директория
    file folder1/1.txt # если там есть текст укажет что есть текст

. #текущая
    .. # на один вверх
/home/sam/storm
     ./storm # запуск в текущем каталоге если там же нахожусь /home/sam/

1.locate name
   find  - найти файл
   find . # поиск в текущем каталоге
    find . -name "In*" # . в текущей директории поиск по имени и все что начинается с In
    find . -name "[A-Z]*.*" # поиск в текущей директории по имени начиналось с любой заглавной буквы, * любое количество символов . * лубой формат.
    find . -size +5M #  в текущем каталоге поиск по объему все что больше 5 мб
    find . -size -5M # в текущем каталоге поиск по объему все что меньше 5 мб
    find . -atime +5 # то что имели доступ 5 дней назад
    find . -сtime +5 # change time
   grep --help # помощь по команде
ls -la /home # нахожусь в директории sam но хочу глянуть home делаю дистационно
ls * # показывает папки и все содержимое папок
ls *.* # покажет все расширения  в директотрии
     ls folder1 *.* # тоже самое
     ls ???.??? # три любых символов впереди и в конце все с 3 символами и форматом 3 символа
cat.txt но не catty.txt
     ls ?at.txt # покажет все файлы заканчивающиеся at
     ls [ab]* # все файлы имеюшие a или b
     ls [bc]* # любой из этих симоволов
     ls [a-m]* # любой с символом от a до m
     ls [!a-m] # все файлы кроме данных диапозонов
      wc < file.txt  # wc передать ей данные взять даныне и отправить команде
    # вывод такой же 4 8 29 file.txt # 4 строки 8 слов 29 символов
ls > list.txt #появиться файл и будет перечень данных ls
  cat list.txt
  ls >> list.txt # если перейду в новую дирикторию и опять сделаю просто допишет и все  добавит файл новые данные а не перезапишит
2.whatis – показывает что делает комманда
whatis history
history (3readline)  - GNU History Library # расказвает что за оно
3.whereis – показывает где файл
4.Ctrl+Z  - отправить процесс на background (загоняю процесс на background)
   fg просто в строке Это fourground вернуть с background обратно на экран
5.Ctrl+C – прекратить процесс вообще
6.sudo команда - Super user do потом вводишь пароль привелегия команде
7.sudo -i # становлюсь супер юзером
8.pwd – вывести путь где мы сейчас
9.less readme.txt в нем самом можно нажать /Привет и оно будет искать это слово в тексте q выйти
less /etc/ssh/sshd_config ## типо cat только less удобней
/port # поиск в less
стрелки вверх вниз
q выход
less big_text ## Тоже самое но лучше постраничный вывод файла
sort -n numbers.txt будет сортировать по цифрам
sort hello1.txt # отсортирует в алфавитном порядке
sort -r hello1.txt #отсортирует в обратном порядке наоборот
tail /var/log/syslog # показывает последние события
tail -n 5 /var/log/syslog # показывает последние 5 событий
tail -n 5 /var/log/dmesg
tail -f /var/log/syslog # показывать все события в живую все что происходит в реальном времени
tail -n 10 /var/log/messages ### смотрю хвост протокола 10 сообщений # если интерфейс не поднят тут смотрю
10.cat readme.txt прочитать что внутри файла не заходя в него
    cat ~/.ssh/id_rsa.pub # читает дистационно
11.more readme.txt в больших файлах более удобней читать (q выйти enter ниже смотреть)
12.cp somefolder/text.txt textcopy.txt # coздаю копию файла
13.cp linux.txt ~/Docements/Dir1 просто копирую файл туда прямо
14.cp python.txt -v hello (view увидеть) копируется в папку hello
      cp -R folder1 folder2
      cp -r folder1 folder2 # копируем по жесткому всю папку и сразу же создаем folder2 папку без r не сработает
      cp-r db public_html ### создаю копию папки совсем ее содержимым и называю ее public_html
     cp gun.zip "Inside folder"/double.zip # берем в кавычки так в нашем название есть пробел Inside folder
cp /boot/grub/grub.conf /boot/grub/grub.conf_backup ##создание резервной копии  файла

15. mv /etc/php/7.4/fpm/php-fpm.conf /etc/php/7.4/fpm/php-fpm.conf.ORIG ## переименовываю файл, вернее делаю резервную копию php-fpm.conf.ORIG
mv Dir4 Dir5 переименовываю папку
mv рассылка /home/sam/Desktop ### перенос в выше указанную директорию!!!!!!
sudo mv xorg.conf.new /etc/X11/xorg.conf ### заменяю конкретный файл на который мне нужно

16.mv rock.txt .. перенести на верх
mv wordpress ../ # перенос на директорию выше !!!!!
/home/user/public_html ## нахожусь в public_html
mv wordpress/* . ## развернул содержимое из папки wordpress в public_html (когда создалось папка но нужно перенести на директорию выше!!!!!!) !!!!!
       mv myawesomefile.txt apacesomefile/ # перенес файл в папку
      mv 456.txt something.txt # переименовал файл!!
      mv 123.txt folder1/ # перенес в папку главное будь в этой папке где есть папка
      mv folder1/123.txt . # точка в текущую папку из которой смотрим данную папку
       mv folder1/123.txt .. # а это еще на папку выше
      mv wordpress/* /var/www/site1 # /* переножу не папку а все содержимое внутри папки в папку var
17.rm -r Folder? все Folder удаляем
         rm -rf folder1 # удалим папку не пусту f  force супер принудительно
         rm practise/123.txt # удаление из папки
rm -rf wp ### удаление не пустой папки
18.mkdir Dir3/Dir5 создаю директорию уже в созданной директории
   mkdir -p Dir5/Dir7 создаю директорию в директории !!!(p parent родитель)
mkdir -p /usr/share/nginx/cache/fcgi### создаю папку -p так как несколько папок, cache создаю для скорости!!!
просто открытую страницу пользователем делаю ее cache не надо включать базу данных php при обращение второй к странице !!!

19.ln   - создать дубликат файла
   ln –s   - создать symbolic линк на файл или директорию типа Shortcut
20./dev/null   - устройство находящиеся в ж#$е
21.  > - новый файл перезапись старый
     >> добавить в новый файл или старый
22.zip -r myZIP.zip Folder1  в myZIP файл закидываю Folder1 r recursively
   unzip myZIP.zip распаковывеам из myZip.zip Folder1
23.free -h     h human показвает в гигабайтах оператива
24.ps -u   все процессы юзеров
25.id   - просто вводишь показвает все твои данные, все твои группы 27 sudo это главное вижу что превелигированный пользователь
   id vasya  - смотрю группы пользователя
26.who - показать кто сейчас в системе
   w показывает кто сейчас в системе и что делает
27.sudo useradd -m user1   -- создаем m home директорию для user1, cоздаем user1
   sudo passwd user1 создаем пароль данной учетке или изменяем его
28.sudo userdel user1  -- удаляем юзера просто но его директории не трогаем
   sudo userdel -r user1 --удаляем юзера и его директорию
29.sudo groupadd Programmers  --- создаем группу программтстов
   sudo groupdel Programmers  --- удаляем группу прогарммистов
30.sudo usermod -aG Marketing vasya  ---  mod modification a append добавить G -group
   id vasya - Там будет группа видна
31.sudo usermod aG sudo vasya --- Делаем так Super user do суперпользователя из Васи
32.sudo deluser vasya Marketing ---- удаляю васю из группы  помни userdel удалить user,  del user удалить из группы
   id vasya ----Без маркетинга
33.sudo chown petya zzz/ #chown change owner на petya файла zzz
chown root:root ./dir2
Меняется сразу владельца и группу каталога или файла

chown -R root:root ./dir3
Меняется сразу владельца и группу каталога не только к этому каталогу, но и ко всем его подкаталогам, добавьте опцию -R

sudo chown sam:sam adv-it.txt
-rw-r--r--  1 sam sam 46516 сен 14 14:59  adv-it.txt   #### станет такие владельцы

sudo chown sam:root adv-it.txt
-rw-r--r--  1 sam root 46516 сен 14 14:59  adv-it.txt ####станет такой владелец

34.sudo chgrp Programmers vasya.txt   -chgrp change groupe  теперь к данному файлу будут иметь все доступ кто состоит в этой группе
35.chmod o+x denis.txt  -others Добавляем x exzicute(write)denis.txt
36.chmod g-w denis.txt - group убираем w write записывать писать
37.chmod g+w denis.txt - group добавляем w write записывать писать
38.chmod o-w denis.txt - group others забиарем w write записывать писать
39.chmod ugo=r denis.txt user group others = read все юзеры могут только читать
u = user
g = group
o = other
a = ugo # all
40.
r = 4
w = 2
x = 1  #выполнить
rwx - 7 (4+2+1)  777 rwx rwx rwx
rw-  - 6 (4+2+0)
r-x - 5 (4+0+1)
r-- 4 (4 +0+0)
-wx -3 (0+2+1)
--x -1 (0+0+1)  611 rw x x
--- 0 (0+0+0)
41.chmod 777 denis.txt -read write exzicute
   chmod g+x zzz/ директории groupe добавляем exzicute
42.sudo chmod o+t MySHARE others в директории могут удалять только юзеры или суперюзер
создаем директории где могут только создатели файлов удаллять данные файлы
43.sudo chmod o-t MySHARE убираем t и теперь все могут удалять
44.sudo chmod 1777 MySHARE  ------ добавляем t тоже самое что в самой строке включить stickybit
45.ifconfig - показать мой IP адресс
46.ping -c 4 8.8.8.8     с count 4 раза  8.8.8.8 dns google
ping -4 shop4x4.by ####IPv4
ping -6 shop4x4.by ###IPV6
ping shop.by ## просто смотри какой ip отдается
47. netstat какие порты открыты закрыты
48.sudo ufw allow 22 открываю порт 22
49.ssh Mylinux  подключаюсь к своему linux ssh secure shel conection
50.sudo apt-get install openssh-server     устанавливаю приложение для того чтобы  мог конектиться к другим серверам и т.д.
51.ssh secure shel conection чтобы можно было подключиться через данное подключение
ssh установка подключения с другим компьютером
52.
ifconfig          - показать мой IP адресс
ip addr show  - показать мой IP адресс
route      - показать адресс раутера Gateway
ip route show  - аналог команды выше
ping        - протестировать коннекшен к адрессу
host       - дать IP адресс вэб сайта
dig         - дать IP адресс вэб сайта
netstat  – выдать сетевые подключения компьютера
53.wget http://adv400.tripod.com/v1.jpg качаю картинку напрямую
      wget https://ru.wordpress.org/latest-ru_RU.tar.gz # качаю сразу на сервер путем копирования ссылки на файл
   tar -xzf latest-ru_RU.tar.gz # разархивация формата tar.gz два архива
54.sudo apt-get install chromium-bsu  скачиваю игру и устанавливает с репозитория типо playmarket
55.whereis chromium-bsu  ищим файл скаченный с интернета
56.chromium-bsu  Запускаем игру или заходим в папку
apt search имя_программы
57.sudo apt-get remove chromium-bsu   --удаляем игру пишем название package chromium-bsu
58.cat /etc/apt/sources.list  список репозиторий
59.sudo dpkg -i app.deb    ------deep package i install название приложения
60.app   - просто запускаем его
70.
Ubuntu/Debian/Kali/Mint Linux:           все packages .deb
~~~~~~~~~~~~~~~~~~~~~
apt-get install     - скачать и установить программу
apt-get remove   - удалить программу
dpkg –i                - установить программу из файла .deb
dpkg –r                - удалить программу
sudo apt-add-repository ppa:ansible/ansible # добавил репозиторий

RedHat/CenOS Linux:               все packages .rpm
~~~~~~~~~~~~~~
sudo yum install          - скачать и установить программу
sudo yum remove         - удалить программу
sudo rpm –i                  - установить программу из файла .rpm
sudo rpm –e                 - удалить программу

sudo yum install epel release # подключаем репозитарий

71.
nano myscript1.sh #.sh  формат скрипта
#! /bin/bash   указываем что будет использоваться bash
echo "Hello word"
echo "hi"
ls
xterm &    загружаю терминал & чтобы сразу грузилось
ls -l
echo "Done"   в общем даю список команд данному скрипту выхожу и сохраняю
ls -l
rw -rw -r 1 denis denis myscript1.sh    - нам надо первому rw Добавить x для загрузки но можно и так
bash mycript1.sh   запускаю скрипт
sudo chmod a+x myscript1.sh   добавляю all всем юзерам и группам x extentional myscript1.ssh

:color desert # классный цвет файла мен
---
Kiril Linux

LPIC 103.3 Основные операции с файлами и директориями
1. touch 123.txt # создали файл
2. mkdir
3. mkdir folder1 # создали папку
4. ls # содержимо папки
5. touch 456.txt
     touch {6,7,8}.txt # сразу несколько файлов 6.txt 7.txt 8.txt
touch .secret #### создаю скрытый файлы
6.  touch folder1/1.txt
    touch folder1/2.txt
    touch folder1/3.txt  # создаем файлики сразу же в папке
  echo "Source file1" > file1.txt # тоже создал файл

7. ls folder1/ # смотрим что в папке
    ls * все что в папке и внутри
8. cp 123.txt copy123.txt # просто делаю копию
9. cp -R folder1 folder2
   cp -r folder1 folder2 # копируем по жесткому всю папку и сразу же создаем folder2 папку без R не сработает
10. ls folder2/ # смотрим скопированные файлы
11. mv 456.txt something.txt # переименовал файл
12. mv 123.txt folder1/ # перенес в папку
13.  mv folder1/123.txt . # точка в текущую папку из которой смотрим данную папку
    mv folder1/123.txt .. # а это еще на папку выше
14.rm practise/123.txt # удаление из папки
15. rm -r folder1 # удалим не пустую папку
    rm -rf folder1 # удалим force супер принудительно
rm -rf wp ## удаление папок и все содержимого
rm -rf *.zip # удаление архива zip папки не трогаем
16. file folder1 # напишет что это директория
    file folder1/1.txt # если там есть текст укажет что есть текст
17. * все что угодно
    ? любой символ
    ! не
    [ac]  - a или с
    [a-c] - a,b,c
18. ls * # показывает папки и все содержимое папок
     ls *.* # покажет все расширения  в директотрии
     tree # покажет все папки и что в папках
     ls folder1 *.* # тоже самое
     ls ???.??? # три любых символов впереди и в конце все с 3 символами и форматом 3 символа
cat.txt но не catty.txt
     ls ?at.txt # покажет все файлы заканчивающиеся at
     ls [ab]* # все файлы имеюшие a или b
     ls [bc]* # любой из этих симоволов
     ls [a-m]* # любой с символом от a до m
     ls [!a-m] # все файлы кроме данных диапозонов
     ls -la аналог ll
     
19. find . # поиск в текущем каталоге
    find . -name "In*" # . в текущей директории поиск по имени и все что начинается с In
    find . -name "[A-Z]*.*" # поиск в текущей директории по имени начиналось с любой заглавной буквы, * любое количество символов . * лубой формат.
    find . -size +5M #  в текущем каталоге поиск по объему все что больше 5 мб
    find . -size -5M # в текущем каталоге поиск по объему все что меньше 5 мб
    find . -type d #  в текущей папке по типу директория
    find . -atime +5 # то что имели доступ 5 дней назад
    find . -сtime +5 # change time
20 cp gun.zip "Inside folder"/double.zip # берем в кавычки так в нашем название есть пробел Inside folder
21. ls | cpio -o > ../test.cpio # cделать список скопировать в архив o куда, > уточнение  на директорию выше / создать файлы cpio
22.find . -name "*.txt" | cpio -o > test2.cpio # найти в текущей папке все файлы по имени все с форматом txt и перенести их в архив cpio в документ test2.cpio
23.mkdir extract
mkdir .hidden ### скрытая папка
24. cd extract
25. cpio -id < ../test2.cpio #  из папки выше взять архив и перенести его в текущую папку разархирированным
26.man dd
27. dd if=/dev/sdb of =drivee.img
28. ls -l
29. gzip drive.img
30. ls -l # drive.img.gz появиться
31. gunzip drive.img.gz разархивировать
32. bzip2 drive.img # появиться drive.img.bz2 сжал лучше чем выше
33. bunzip drive.img.bz2 # разархивировали
34. xz drive.img # сжимает drive.img.xz лучше gzip но не bzip
35. unxz drive.img.xz # разархивровали
36. tar cvf archive.tar folder# tar cvf create verbow file само название файла archive.tar, folder из чего создает
37. tar cvfz archive.tar.gz folder # тоже самое только z добавил поэтому gz на конце файла и получится архив archive.tar.gz он крошечный
     
38. tar xvf archive.tar #extract разархивируй verbow покажи процесс file файл archive.tar и в папку все распакует

latest-ru_RU.tar.gz
tar -xzf latest-ru_RU.tar.gz # разархивация файла формата tar.gz

39
rar a file1.rar test_file  #####Упаковать в rar архив file1.rar файл test_file#(название архива далее название файла)     
rar x file.rar ####Разархивировать rar архив file.rar
    
zip file1.zip file1 ######Создать сжатый zip-архив#
zip -r file1.zip file1 file2 dir1 ######Запаковать в архив несколько файлов и/или директорий#
unzip file1.zip ####Разжать и распаковать zip-архив
unrar x file1.rar #####Распаковать rar-архив

---

===========================================
Восстановление базы данных Wordpress

1.mysqldump -u wordpressuser -p wordpress > wordpress.sql 

## mysqldump u user wordpressuser p просит пароль,  wordpress указываю базу , далее >> какой конкретно файл дампить

2. появится файл wordpress.sql 

3. mysqldump -u wordpressuser -p
## захожу в консоли базы данных u user wordpressuser название пользователя  и пароль запросит

4.  use worpress; # переключился на базу wordpress
SHOW TABLES;
## смотрю всех пользователей
Tables_in_wordpress
wp-options #вижу

5. DROP TABLE wp_options;
удалил таблицу
SHOW TABLES; ### видим что нету таблицы  сайт слетел

6.exit; # вышел из консоли базы данных

7.
mysqldump  # снимает только сам dump
mysqldump -u wordpressuser -p wordpress > wordpress.sql   ### делаем резервную копию то что было

mysql -u wordpressuser -p wordpress < wordpress.sql    ###  wordpress это база которую хотим восстановить, из резервной копии мы восстанавливаем базу данных (из файла мы закатываем базу данных резервной копии )
Все сайт снова работает
=======================================================

=====================================================
Kiril Linux SQL

105.3 Создание БД MySQL
Mysql реализация от Oracle
1.sudo apt-get install mysql-server
2. mysql -u root -p зайти u user p password
3. sudo mysql -u root # без пароля
4.  CREATE DATABASE cars; # создали
5. USE cars; # актвировали
6. CREATE TABLE new (brand VARCHAR(10), model VARCHAR(10), year YEAR, price INT);
7. CREATE TABLE used (brand VARCHAR(10), model VARCHAR(10), year YEAR, price INT);
8.SHOW TABLES; # ПОСМОТРЕТЬ ТАБЛИЦЫ
 
9.DESCRIBE new; # даст описание табл с команды выше!!!!!!!!!!
 
10.exit выйти с mysql или ctrl + Z на background
 
LPIC 105.3 часть вторая: Заполнение БД MySQL
11.nano new.txt
KIA     CERATO  2014    780000
KIA     RIO     2015    530000
FORD    FOCUS   2015    620000
 
nano used.txt
KIA    CERANO    2011    460000
HYUNDAI    Solaris    2012    490000
LADA    Granta    2013    180000
12. sudo mysql --local-infile=1 -u root # infile input file 1 yes разрешить u user просто без пароля
запуск режима импрота данных
13.USE cars; # переключились на базу данных с машинами
14.LOAD DATA LOCAL INFILE "new.txt" INTO TABLE new;
# главное чтобы mysql была запущена с папки или места где эти файлы лежат, то есть вставляем данные
15.LOAD DATA LOCAL INFILE "used.txt" INTO TABLE used;
# тоже самое только для старых машин
16. SELECT * FROM new; # смотрим таблицу новых машин
17. SELECT * FROM used; # старые машины
18. INSERT INTO new (brand, model, year) VALUES ('Daewoo', 'Nexia', '2015'); # можно вводить в любой последовательности год и модель значения в кавычках
19. INSERT INTO new (brand, model, year) VALUES ('Daewoo', 'Matiz', '2014');
20.DELETE FROM new WHERE model="Matiz"; # удаляю по любому ключу указанному в таблице выше
21.SELECT * FROM new; # смотрю что удалена строка вся
 
LPIC 105.3 часть третья: Получение информации из БД MySQL
22.mysql cars -u root # подключаюсь к базе даных
23. SHOW TABLES; # смотрю таблицы какие есть
24.SELECT * FROM new; # смотрю таблицу
25. SELECT model FROM new; # вытягиваю модели ячейку модель
26. SELECT * FROM new WHERE brand="KIA"; # достанет всю инфу по KIA со всей моделью
27.SELECT * FROM new WHERE brand="KIA" AND year="2015";
# выбрать и по модели и погоду
28.SELECT model FROM new WHERE brand="KIA" AND year="2015"; # выдаст модель этого года
29. SELECT * FROM new;
30. UPDATE new SET model='KUGA' WHERE model='FOCUS'; # new таблица
31. SELECT * FROM new; #смотрю все поменино
32. SELECT * FROM new JOIN used
33. SELECT * FROM new JOIN used ON new.brand = used.brand;
# объединить on где у таблицы new, графа brand совпадает с таблицей used графа brand, будут склеены как бы две таблицы,  но путь к значению можно писать полный cars.new.brand # cars база данных
34. SELECT * FROM new;
35. SELECT * FROM new ORDER BY brand; # в алфавитном порядке по brand;
36.SELECT * FROM new GROUP BY brand; # объединит все KIA в одну колонку;
 
 
http://artemfedorov.ru/etc/mysql/field-types/
типы данных
---
Практика
ЗАДАНИЕ 1.1
/*Вывести логин и пароль тех пользователей, у кого имя не Mike */
SELECT login,password FROM supportContacts
WHERE NOT name = 'Mike';
ЗАДАНИЕ 1.2
/* Вывести 3 записи, где пароль начинается с 12*/
SELECT * FROM supportContacts WHERE password LIKE '12%' LIMIT 3;
ЗАДАНИЕ 1.3
/* Вывести все поля для Nick Bonner */
SELECT * FROM supportContacts WHERE surname = 'Bonner';
Задание 1.4
/*Выбрать из таблицы значения для Nick, у которого логин LogNick */
SELECT * FROM supportContacts WHERE login = 'LogNick';
Задание 1.5
/*Вывести поля имя, логин и пароль, отсортировать по убыванию по Name */
SELECT name,login,password FROM supportContacts
ORDER BY name  DESC;
Задание 1.6
/*Вывести уникальные имена */
SELECT  DISTINCT name FROM supportContacts
Задание 3
Select level,race FROM character
WHERE level > 45 and race = 'dwarf';
Задание 4
/*Зайти на главную страницу SQL fiddle и создать свою таблицу.
Использовать команды Create, Insert into, Update, Delete*/
CREATE TABLE Employee
    (
     id int auto_increment primary key,
     firstname varchar(50),
     lastname varchar(50),
     age varchar(10),
     city varchar(20),
     experience varchar (100),
     phonenumber varchar(7)
    );
INSERT INTO Employee (firstname, lastname, age, city, experience,phonenumber)
VALUES ('Sam', 'Rybkin', '30', 'Minsk', '5', '3030034'),
       ('Katy', 'lash', '31', 'Chicago', '10', '2937031'),
       ('Vlad', 'Niger', '24', 'Minsk', '1', '2744382'),
       ('Vladimir', 'Kurilkin', '24', 'Minsk', '10', '674384'),
       ('Natasha', 'Rybkova', '27', 'Minsk', '8', '6754356');
      
  UPDATE Employee
  SET age = 31 WHERE ID=1;
 
  DELETE FROM Employee
  WHERE ID=3;


Задание 5.1
/*Вывести всех, что живет в Лондоне*/
SELECT * FROM Customers
WHERE City = 'London';
Задание 5.2
/*Выбрать имена контактов и имена заказчиков, где адрес заканчивается
на 23*/
SELECT ContactName, CustomerName FROM Customers
WHERE Address LIKE '%23';
 
Задание 5.3
/*Выбрать уникальные города.*/
SELECT DISTINCT City FROM Customers;  # уникальное значение
Задание 5.4
/* Выбрать тех пользователей, у кого код начинается с 0 (нуль)*/
SELECT * FROM Customers
WHERE PostalCode LIKE '0%';
 
Задание 5.5.
/*Вывести клиентов не из США*/
SELECT * FROM Customers
WHERE Country NOT IN('USA');
 
Задание 5.6.
/*6.Вывести всех, кто из Франции и отсортировать по убыванию по имени
контакта*/
SELECT * FROM Customers
WHERE Country IN('France')
ORDER BY ContactName DESC;
Задание 5.7.
/*7. Вывести клиентов из Германии и США, ограничить выбор 10 записями*/
SELECT CustomerName FROM Customers
WHERE Country='Germany' OR Country='USA' LIMIT 10;
  
https://sitear.ru/material/mysql-zaprosy
хорошая статья!!! sql запросы

https://neoblogs.net/2013/10/23/rabota-s-mysql-serverom-s-pomoshhyu-komandnoj-stroki-terminala-linux/
SQL для linux


—————————————------------------------------------------------------------------------------------------------------------------------
INTERVIEW
1. uname -a # all смотрю полностью версию
2. ifconfig # смотрю ip аддрес
    ifconfig eth0 # смотрим конкретно
    ip addr show # ip address
    ip addr show eth0
    ip a
3. df -ah # место свободное на диске a -all h -human readeble
4. service udev status # udev это название сервиса
    systemctl status udev
jornalctl -u <unit> # смотрю по сервису логи че было
jornalctl --since "10- min ago" ## смотрю что было 10 минут назад
5.  du -sh code # estimate file space usage s summarize h human readeble
6. netstat # смотрю порты, tcp ip, сокеты
   netstat -tulpin
   sudo netstat -tulpin # доп информация Proto Это TCP IP, local address, PID Номер процессора который слушает
7. ps -aux | grep nginx # конкретный процессор ngignx его название
   ps -aux | grep sam конкретно процессы sam
   top
   htop # better
8. ls /mnt   # смотрим папку монтирования
   mount /dev/sda2 /mnt # mount
   mount # показывает что подсоединено

4.  sudo mount /dev/sdb1 /mnt/hard_drive # план устройство куда монтирую
# монтирую устройство /dev/sdb1 в папку /mnt/hard_drive
5. cd /mnt/hard_drive # смотрю что в новое в  нашем устройстве
6. mount # покажет что куда смонтирована
/dev/sdb1 on /mnt/hard_drive
7.sudo umount /dev/sdb1 # отмонтируем
     sudo umount /mnt/hard_drive  # тоже самое
blkid # block id смотрю устройства
sudo blkid /dev/sdb1 # cмотрю id устройства
можно монтировать куда хочешь но правило хорошего тона съемные устройства в mnt
9. man ps10.google stackoverflow
-------------------------------------------------------------------------------------------------------------------------------
Русская версия собеседования

history | grep host
 
Собеседование linux
1.как проверить сколько памяти осталось
df -h
df -h /dev/sda4 # память конкретного драйва
2.Разрешения как забрать как дать
u user g grope o other a all
r read w write  x exzicute запускать
1.touch file
2.ls -la file
3.chmod +wrx file # дал юзеру права
4. chmod -wrx file # забрал все даже удалить не смогу
 
33.sudo chown petya zzz/ #chown change owner на petya файла zzz
34.sudo chgrp Programmers vasya.txt   -chgrp change groupe  теперь к данному файлу будут иметь все доступ кто состоит в этой группе
35.chmod o+x denis.txt  -others Добавляем x exzicute(write)denis.txt
36.chmod g-w denis.txt - group убираем w write записывать писать
37.chmod g+w denis.txt - group добавляем w write записывать писать
38.chmod o-w denis.txt - group others забиарем w write записывать писать
39.chmod ugo=r denis.txt user group others = read все юзеры могут только читать
u = user
g = group
o = other
a = ugo # all
40.
r = 4
w = 2
x = 1
rwx - 7 (4+2+1)  777 rwx rwx rwx
rw-  - 6 (4+2+0)
r-x - 5 (4+0+1)
r-- 4 (4 +0+0)
-wx -3 (0+2+1)
--x -1 (0+0+1)  611 rw x x
--- 0 (0+0+0)
41.chmod 777 denis.txt -read write exzicute
   chmod g+x zzz/ директории groupe добавляем exzicute
42.sudo chmod o+t MySHARE others в директории могут удалять только юзеры или суперюзер
создаем директории где могут только создатели файлов удаллять данные файлы
43.sudo chmod o-t MySHARE убираем t и теперь все могут удалять
44.sudo chmod 1777 MySHARE  ------ добавляем t тоже самое что в самой строке включить stickybit

3. Сколько процессов и сколько занимают памяти
   ps aux
   htop # смотри pid
   kill ...  # убиваю процесс
   vmstat # по памяти
   top # тоже процессы посмотреть смотри проценты
   ps aux | grep gnome # конкретный процессор но лучше через htop
   cat proc/meminfo # все про память
4. Проверить hard drive или папака
   du -sh # сколько занимается по всей системе disk usage что сколько весит
   du -sh Desktop/ # смотрим размер папки конкретной
df -h # все что весит и файловая система  # disk free сколько свободно
   df -ah # вообще все
    ncdu # крутая утилита по размерам папок файлов

5. Кучу команд одной строкой
   ls ; cd ~; ls ; cd Desktop ;ls -la
   cd Desktop ; ls -la # одна строка
6. man ls # где искать
7. как mount делать?
1.cd dev # девайсы
2.ls # смотрю девайсы
3. mount # просто смотрю что можно подъсоединить
4. sudo
mount /dev/sda4 /home/sam/test # монтирую sda4 в папку test
8. посмотреть какой сервис какой ip
   sudo netstat tulpn # увижу ip но есть tulpin она другая немного
10. Какой kernel, какое ядро
    uname -a
11. как узнать свой ip
   ifconfig
   ip addr
   ip addr show
 
12 найти файл все с расирением с и с конкретным словом
   find ./ -name ".c" | xargs grep -i "apple"            #./ ищем по всему компу ".c" расширение, xargs все аргументы яблоки
  найти все файлы в папке текущей с окончанием sh
ls * .sh
ls -al * .sh # вся инфа про них

 
---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------
Bash Shortcuts Every Linux User Should Know
ГОРЯЧИЕ КЛАВИШИ


ping 8.8.8.8 # ping google
ctrl + c # остановить
ctrl + d # выйти из sudo пользователя
также выйти из командной строки

ls /var/log
la -alh /var/log/gpu.manager.log
#Используй TAB даже если та пишешь путь в папке ты знаешь есть файл пиги его начало и tab
clear # или ctrl + L

ctrl + A #В начало команды
ctrl + E # конец строки

alt + f # скачим по пробелам
alt + b
history # история
history | grep host # !!!!!

ctrl + R # похожие но поиск по ключевым словам, буквам
несколько раз нажимай!!!!
ctrl + G # или  ctrl + с
----------------------------------------------------------------------------------
Vim Basics
ИТОГО

vim может открывать файлы большого размера
vi  # более старая версия
vim
1. I (insert)   #режим ввода
2. esc   # выход из режима ввода возврат в командный режим
3.  :w    # write записать и название файла
4.   :q     # выйти
5.   :q!    # выход без сохранения
6.   :wq  # write записать  quit выйти
7.   h  j k l перемещение курсора
h вправо
l влево
k вверх
j вниз

8.f2     # find символ 2 
/ поиск по документу
/ APACHE  подсветит слово
/ APACHE  подсветит слово    n # next подсветит следующие слово
/555 поиск по низу документа  # когда курсор в самом вверху идет вниз поиск
? 555 поиск по верхней части документа  # когда курсор в самом внизу идет вверх поиск

9. v  # visual выделяю текст
V   # visual выделяю несколько строк сразу
d   #  удалить их удаляю выделенное
x   вырезать текст
P слева от курсора вставить
p  справа от курсора вставить
u      отменить данное действие  в командном режиме   !!!!!!!


в начале загружается command mode
:q # просто выхожу
:wq # write quit save and exit
i # insert mode
esc # вернуться command mode
в command mode выбираю строку нажимаю dd удаляю линию
ddd # удалит три строки сразу в command mode
В command mode U  вернет тебя во времени
ctrl + r
В command mode / search
shift n
:%s/provis/frovis/gc # replace


vi vim
vi test.txt # Открываем редактор vi
    :q! выйти без сохранения #:shift + 6 :
    :wq выйти и сохранить
    :w write сохранить
    :q выйти

-----------------------------------------------------------------------------------------------------------------------------------
LPIC 103.8 Текстовый редактор Vi
1. man vi
2. vi file.txt создаем файл и открываем в vi
3. перемещение стрелки
   h j k l
4. b begin начало слова
   e end конец слова
   ( начало предложения конец ) предложения
   {}  абзац
   shift + 6 ^ начало предложения # англ раскладка
   shift + 4 $ конец предложения
   ctrl + home # начало файла
   ctrl + end # конец файла 
5. i insert могу писать # наиболее частая
   esc выйти
   a редактирование файла  
I** ** (режим вставки перед текущим символом);
a** ** (режим вставки после текущего символа);
o** ** (вставить новую строчку);
**s ** (стереть символ и вставить).

6.b это командный режим
  yy # скопировал строку
  p # paste вставить
  yw # скопировать слово word
  p # вставляю
  dd # удалить строку
  yl # копируем символ l letter
  d # просто вырезать
  p # вставить
7.d$ # стою в середине строки англ раскладка и с середины до конца
8. d^  нахожусь середины удалит с начало до середины строки

9. Командный режим b
/ начать поиск ниже
? начать посик выше
N и n продолжить поиск выше ниже

:e отменить изменения  # помни : shift + 6 : только
:w записать изменения
:q выйти из файла

:q! или zq выйти не сохраняя
:wq! или zz выйти и сохранить

https://i-notes.org/vimtutor-uchebnik-vim-versiya-1-7/ !!!
---
ssh 178.172.235.75 # по умолчанию попробует поставить юзера

ssh
1) ifconfig
192.168.0.103  netmask 255.255.255.0
2)ping 192.168.0.103 # проверка соединения
3)ssh работает через порт 22 но он по умолчанию заблокирован
4)service ssh status # статус просто смотрю но не найдет его
5)sudo apt-get install openssh-server # установка и активируется сразу же
6) service ssh start #  если где-то неактивен то пиши так
7)ssh 192.168.0.103 # подключаюсь ip Kali linux, потом yes
но не подключится так как там скорее всего не будет юзера
8) ssh petya@192.168.0.103 # юзер петя на том компе и попросит его пароль на том компе
9)uname -a # смотрим что показывает kali linux
10)на kali можно написать w # и увидим подключенного юзера
11) закрыть подключение exit
Windows putty
192.168.0.1.131  # ip указывай
port 22 # обязательно
Yes , username: vasya
      password 1234 # пароль васи его с ubuntu
12)mobaXterm session ssh
ip 192.168.0.1.13
username vasya
port 22
connect
и введи пароль
можно поделить на два терминала или 4 экрана

ssh-keygen -f "/home/sam/.ssh/known_hosts.old" -R "192.168.0.103" # удаляю инфу о сервере

Когда пересоздаешь облако тот же ip будет ругаться known_hosts
ssh-keygen -f "/home/sam/.ssh/known_hosts" -R "178.172.137.173"
Запускай команду чтобы почистить информацию о старом сервере
--------------------------------------------------------------------------------------------------------------------------
1.ssh-keygen # генерирум ssh
enter
enter # парольная фраза не нужна
enter
2.  cat .ssh/id_rsa.pub # смотрю ssh сгенерированный ключь

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDB2uJjmYRKdFu9mVQ1AcycFoBI2t+jlb3BtnRfd+3DIdYYo2AncDEmbmZ30uu9465CjkDhSojdw+FLv5/SZrj5PlaNvUs34UoyDfTnDrwIzMxCy/aEvDvGRYJvEiOz4WN8Z6EZ2/y2oMaqMICjKDG6VAQ4bctDL7rOQrqx530TF+Ms/aqX/Kn6CQCE6kJ+yEUnIOorXSkJiXWe8dZcUNyFYQP6Rv73grjhUbm0MmxDs/8nze3Rs1Sk1M3b49tgFPeDC2fD/iI5yM9XB9HemcK8AAWD7uJyf+12eL1YoM886BV4m1CGI4uwRC5Sl+PZFpJpv4NRHsK90IdmNdjenb4z jenkins@ubuntu
# копируй
3. захожу на другой сервер
ssh vasya@192.168.0.102
sudo -i # jenkins получит права рут
vim .ssh/authorized_keys # захожу вставляю ssh ключь сохраняю shift + 6
----------------------------------------------------------------------------------------------------------------------------------------------
touch text.txt
  scp text.txt vasya@10.0.1.16:/home/sam # копирую файл по scp на удаленный комп
  пароль введи скорее всего учетки удаленки
  scp admin@10.0.1.6:/home/admin/secret.file /home/sam # здесь качаю с удаленного        сервера себе на комп все тоже самое только задом на перед

gpg --out secret.file --recipient 'siamiom' - encrypt file.txt # out какой файл на выходе secret.file recipient получатель смотри выше создатель ключа 'siamion' поэтому полю ищет ключи encrypt зашифровать конкретный файл file.txt

gpg --out some.file --decrypt secret.file #out на выходе some.file  decrypt разшифровать конкретный файл secret.file

НА хостинг или на свой новый сервер с своего компа
ssh-keygen -t rsa ### simplenote проброс своего ключа
sam@sam:~/.ssh$ ssh-copy-id -i id_rsa.pub host0401@vh113.hoster.by
когда нахожусь в директории .ssh просто файл указываю
Сервер
ssh-copy-id -i id_rsa.pub root@178.172.136.79
ssh-copy-id -i id_rsa.pub root@sam.linux.of.by ###можно по домену



Итого
Linux для Не Начинающих - SSH подключение к удаленному Linux с Linux и Windows

service ssh status   - статус SSH сервиса
service ssh start   - запустить SSH сервис
apt-get install openssh-server   - установить SSH

ssh vasya@192.168.10.130   - подключится к компу (192.168.10.130) как пользователь (vasya)

Для подключения с Windows используйте это:
PuTTY: http://www.chiark.greenend.org.uk/~sg...
MobXterm: http://mobaxterm.mobatek.net/download...
---
мягкие жесткие ссылки

1)touch file.txt
2)ln file.txt hard.txt # жесткая ссылка
3)ln -s file.txt soft.txt #s symvolic мягкая ссылка
4) Жесткие ссылки нельзя перекидывать на другой жесткий диск
5)на катологи ссылки жесткие нельзя
но мягкие ссылки на папку можно
6) mkdir folder
   ln -s file.txt Folder/ # создаем внутри папки
   но ссылка битая будет так как в папке ничего нету
   rm Folder/file.txt
   ln -s /home/sam file.txt Folder/ # теперь ссылка сработает так полный путь указали
7) сp file.txt  copy.txt # копия файла
   ln file.txt hard.txt # жесткая ссылка
   ls -li #inod первая колонка если номер один это ссылка если
нет то разные файлы 408502 409501

---

1.ps -u   все процессы юзеров
 2.  lsof -u sam # смотрю что юзер делает
3.df -h #  disk space usage free, h human readable
4.free -h оперативная память
5.who - показать кто сейчас в системе
6.  w показывает кто сейчас в системе и что делает
---
- r - чтение;
- w - запись;
- x - выполнение;
- s - выполнение от имени суперпользователя (дополнительный);

- 0 - никаких прав;
- 1 - только выполнение;
- 2 - только запись;
- 3 - выполнение и запись;
- 4 - только чтение;
- 5 - чтение и выполнение;
- 6 - чтение и запись;
- 7 - чтение запись и выполнение.
Права на папку linux такие же, как и для файла. Во время установки прав сначала укажите цифру прав для владельца, затем для группы, а потом для остальных. Например, :

- 744 - разрешить все для владельца, а остальным только чтение;
- 755 - все для владельца, остальным только чтение и выполнение;
- 764 - все для владельца, чтение и запись для группы, и только чтение для остальных;
- 777 - всем разрешено все.
- u - владелец файла;
- g - группа файла;
- o - все остальные пользователи;
Синтаксис настройки прав такой:

группа_пользователейдействиевид_прав

В качестве действий могут использоваться знаки "+" - включить или "-" - отключить. Рассмотрим несколько примеров:

- u+x - разрешить выполнение для владельца;
- ugo+x - разрешить выполнение для всех;
- ug+w - разрешить запись для владельца и группы;
- o-x - запретить выполнение для остальных пользователей;
- ugo+rwx - разрешить все для всех;
===========================================================================cat
cut
expand
fmt
head
join
less
nl
od
paste
pr
sed
sort
split
tail
tr
unexpand
uniq
wc

LPIC 103.2 Работа c текстовым выводом в Linux
1.vim hello2.txt
  vim hello1.txt
2. man cat
3.cat hello1.txt # ввывод текста
  cat hello1.txt hello2.txt # сразу вывод двух файлов почередно откроет каждый
4. cat hello1.txt hello2.txt > hello3.txt # стрелка в право передаст всю инфу в один файл
5.rm hello3.txt # удалили
6.mna cut # удаляет секции строки из файлов
7. cut -c 2,3,4,5,10  hello1.txt # вывод сделает вырезанный но сам файл не поменяет
8.man expand # tab превращает в пробелы
9. expand hello1.txt
   unexpand hello1.txt # превращает пробелы в tab
10. fmt hello1.txt # все в одну строку перенос на оригинал не поменяет
    fmt -w 10 hello1.txt
# на каждой строк по 10 символов fmt format
11. cat /var/log/syslog
head /var/log/syslog
head -n 2 /var/log/syslog # показать первые две строки
#head - output the first part of files#
12.man od  # конвертатор превращает в другие форматы
13. od hello1.txt # десятиричный код
перевод инфы в понятный нам формат
14. join - join lines of two files on a common field
join 1.txt 2.txt  # объединит их строки по единому полю
15. less # читаь файл лучше чем more грузит не все а порциями постепенно
less /var/log/syslog # позволяет листать страницы поиск файла делать удобно
16. nl hello1.txt # нумерует строки
17.man paste
paste 1.txt 2.txt # в отличии от join просто объединит файлы
red plat
blue nano
yellow skirt
18. man pr #
pr - convert text files for printing
pr hello1.txt #  покажет файл перед печатью
pr /var/log/syslog # распечатка событий
19. sed streame editor
    set -e 's/socks/peoplre/' 2.txt #e заменить s слово socks на people  в конкретном файле 2.txt меняет только вывод
20. man sort
sort hello1.txt # отсортирует в алфавитном порядке
sort -r hello1.txt #отсортирует в обратном порядке наоборот
21. split -l 2 1.txt. # по строчкам 2 файла первые 2 строчки один след 2строки другой
22.split -b 5 1.txt. # бъем файл по 5 байт

tail - output the last part of files
23. tail /var/log/syslog # показывает последние события
tail -n 5 /var/log/syslog # показывает последние 5 событий
tail -n 5 /var/log/dmesg
tail -f /var/log/syslog # показывать все события в живую все что происзодит в реальном времени
24. tr # translate or delete characters
    echo Hello | tr -t A-Z a-z# выполнить трансформация заглавных в прописные # hello вывод
    echo Hello | tr -t l L # выведит вместо Hello HeLLo
    echo Hello | tr -d l # вывод Heo
    echo Hello | tr -s l # объединить l вывод Helo
25. man uniq # уникальные и дублируюшие линии
    uniq 1.txt  # без дупликатов покажет
    uniq -с 1.txt # покажет строчки которые встречаюется два раза
   2 1 red # покажет строчки которые встречаюется два раза
   1 2 yellow
   1 3 green
    uniq -d 1.txt # показать дублируюшие строки
1 red # так как она два раза встречается
26.   uniq -u 1.txt # показать только не повторяюшиеся линиии
     2 yellow
     3 green 
27. man wc # показывает кол-во симоволо строк файлов байт
      wc 1.txt
4 8 29 1.txt # 4 строки 8 слов 29 символов
      wc -w 1.txt # w word покажи количество слов 8 слов
      wc * # все что в папке в каждом файле посчитает сколько чего только файлы
2.  wc < file.txt  # wc передать ей данные взять даныне и отправить команде
    # вывод такой же 4 8 29 file.txt # 4 строки 8 слов 29 символов
Данные команды  только  для вывода данных они ничего не меняют в самом файле
===========================================================================LPIC 103.4 Использование потоков, конвейров и перенаправлений
1.  wc file.txt
4 8 29 file.txt # 4 строки 8 слов 29 символов
2.  wc < file.txt  # wc передать ей данные взять даныне и отправить команде
    # вывод такой же 4 8 29 file.txt # 4 строки 8 слов 29 символов
3.ls > list.txt #появиться файл и будет перечень данных ls
  cat list.txt
  ls >> list.txt # если перейду в новую дирикторию и опять сделаю просто допишет и все  добавит файл новые данные а не перезапишит
4. ls bob > result.txt # ошибка нету данного файла
   cat result.txt  # пустой
   ls bob 2> result.txt # 2> отправить ошибку туда  и там прочитаем данную ошибку 1 по умолчанию
5. ls bob > result.txt 2> error.txt # выведи данные bob  в файл result.txt  но если ошибка то в error.txt
6. ls | grep r # ls просмотрит данные и передаст grep  отсортирует по r и все файлы с данной буквой r выведит
	grep -i boo file.txt  # чтобы не был чуствителен к регистру часто!!!!
Book
20.mkdit folder
   echo "Hello" > folder/great.txt # слово hello отправил в папку folder в файл great.txt
    grep Hello * # по всем папкам в текущей директитори но ничего не найдет
выведит только каталоги но ничего не найдет
    rgrep Hello * #  найдет  так может искать рекурсивно не только по папка но и заглядывая в внутрь  поиск глубо глубоко копаясь в файлах
   folder/great.txt:Hello #  вывод
7. ls | tee otoput.txt # вывод на экрани или в файл
# tee - read from standard input and write to standard output and files
8. xargs
  find . -name "*.txt" # поиск в текущем каталоге  все с форматом txt
find . -name "*.txt" | xargs rm -f # удаление несколько
# поиск в текущем каталоге  все с форматом txt передаст кучу строк xarg передаст эти строки  rm -f и все удалитьсяы
  xargs - build and execute command lines from standard input
==================================================
LPIC 104.7 Поиск и расположение команд и файлов в Linux
/ bin  - базовые двоичные файлы команд все команды тут;
/ boot  - файлы загрузчика ядро linux;
/dev - устройства;
/ etc  - конфигурация ПК;
/ home- домашние папки;
/ lib - библиотеки и модули ядра;
/ proc - информация о работающей системе;
/ media  - монтирование носителей cъемные носители;
/ mnt - монтирование носителей монтирование файловых носителей;
/ opt - дополнительное ПО;
/root - домашняя папка админа;
/ sbin - основные программы настройки системы;
/srv - данные для системных служб;
/ tmp - временные файлы;
/ usr - бинарники файлы пользователей игры проги юзера;
/var - переменные.

grep поиск по содержимому
find поиск по свойствам файла
locate быстрый поиск файла
which поиск команды
type вывод точной команды
whereis поиск комады исходники мануалы

1. find / -name mail  # / поиск в корне везде, name по имени mail все что содержит
в реальном времени долго
2. locate mail # быстро все что включает mail

3. find / -user sam # все что относится user к юзеру sam
sudo find / -user sam # все нашел
locate sam # во временных файлах не ищет
cat /etc/updatedb.conf # конфиг locate
4.sudo touch kirill.txt
  locate kirill.txt # не найдет раз в день запускает find и создает базу данных поэтому так быстро ищет но не достаток что раз в день
  sudo updatedb # обновить db базу данных locate  
  locate kirill.txt # сразу найдет
  find kirill.txt # найдет сразу же
5. which ls
/bin/ls # покажет где находится команда
6.type ls
ls — это псевдонимом для «ls --color=auto»
/bin/ls ls --color=auto # получается вот так запускается команда когда пишем ls
7. whereis ls # аналог which но дает еще доп инфу
ls: /bin/ls /usr/share/man/man1/ls.1.gz # где находится и в каком пакете находятся

Итого
Find медленный поиск в реальном времени
locate быстрый поиск но опирается на базу данных
---

###SSH ####

1.ssh root@172.178.132.144
ssh root@vasya.com # можно по сайту на данный сервер

ssh vasya@192.168.10.130   - подключится к компу (192.168.10.130) как пользователь (vasya)

service ssh status   - статус SSH сервиса
service ssh start   - запустить SSH сервис
apt-get install openssh-server   - установить SSH

2.!!!!ssh подключения без пароля!!!
ssh-keygen -t rsa
cd .ssh
id_rsa.pub (публичный ключь)  id_rsa(закрытый ключь)
ssh-copy-id -i .ssh/id_rsa.pub host0401@vh113.hoster.by
везде еnter, но если хочешь парольная фразу вставь
теперь просто:
ssh host0401@vh113.hoster.by

3.  Копирование файлов на сервер
touch text.txt
   scp text.txt vasya@10.0.1.16:/home/sam # копирую файл по scp на удаленный комп
  пароль введи скорее всего учетки удаленки

  scp admin@10.0.1.6:/home/admin/secret.file /home/sam # здесь качаю с удаленного        сервера себе на комп все тоже самое только задом на перед


Передача больших файлов по сети:
4. nc -lp 8888 -q 1 < db-2019-01-15__16-16-47.sql # p порт 8888 q 1 (quit)после передачи файла  прибиваем через секунду nc  db-2019-01-15__16-16-47.sql

скачиваем
nc 172.178.132.144 > db.sql  # качаем на комп
du -h db.sql # смотрю статус

watch "du -h db.sql"  # команда пере запускает каждые 2 секунды команду и показывает состояние

4.1 Копирование файла (например, my.jpg) с узла с именем hostA.com на узел с именем hostB.com

На узле с именем hostB.com (принимающая сторона):

$ nc -lp 5000 > my.jpg   # 5000 port  открыл

На узле с именем hostA.com (передающая сторона):

$ nc hostB.com 5000 < my.jpg




